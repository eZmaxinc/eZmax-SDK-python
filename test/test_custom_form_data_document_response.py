# coding: utf-8

"""
    eZmax API Definition (Full)

    This API expose all the functionnalities for the eZmax and eZsign applications.

    The version of the OpenAPI document: 1.2.0
    Contact: support-api@ezmax.ca
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from eZmaxApi.models.custom_form_data_document_response import CustomFormDataDocumentResponse  # noqa: E501

class TestCustomFormDataDocumentResponse(unittest.TestCase):
    """CustomFormDataDocumentResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CustomFormDataDocumentResponse:
        """Test CustomFormDataDocumentResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CustomFormDataDocumentResponse`
        """
        model = CustomFormDataDocumentResponse()  # noqa: E501
        if include_optional:
            return CustomFormDataDocumentResponse(
                pki_ezsigndocument_id = 97,
                fki_ezsignfolder_id = 33,
                s_ezsigndocument_name = 'Contract #123',
                dt_modified_date = '2020-12-31 23:59:59',
                a_obj_form_data_signer = [
                    eZmaxApi.models.custom_form_data_signer_response.Custom-FormDataSigner-Response(
                        fki_ezsignfoldersignerassociation_id = 20, 
                        fki_user_id = 70, 
                        s_contact_firstname = 'John', 
                        s_contact_lastname = 'Doe', 
                        a_obj_ezsignformfieldgroup = [
                            eZmaxApi.models.custom_form_data_ezsignformfieldgroup_response.Custom-FormDataEzsignformfieldgroup-Response(
                                s_ezsignformfieldgroup_label = 'Allergies', 
                                a_obj_ezsignformfield = [
                                    eZmaxApi.models.custom_form_data_ezsignformfield_response.Custom-FormDataEzsignformfield-Response(
                                        s_ezsignformfield_label = 'Peanuts', 
                                        s_ezsignformfield_value = 'Yes', )
                                    ], )
                            ], )
                    ]
            )
        else:
            return CustomFormDataDocumentResponse(
                pki_ezsigndocument_id = 97,
                fki_ezsignfolder_id = 33,
                s_ezsigndocument_name = 'Contract #123',
                dt_modified_date = '2020-12-31 23:59:59',
                a_obj_form_data_signer = [
                    eZmaxApi.models.custom_form_data_signer_response.Custom-FormDataSigner-Response(
                        fki_ezsignfoldersignerassociation_id = 20, 
                        fki_user_id = 70, 
                        s_contact_firstname = 'John', 
                        s_contact_lastname = 'Doe', 
                        a_obj_ezsignformfieldgroup = [
                            eZmaxApi.models.custom_form_data_ezsignformfieldgroup_response.Custom-FormDataEzsignformfieldgroup-Response(
                                s_ezsignformfieldgroup_label = 'Allergies', 
                                a_obj_ezsignformfield = [
                                    eZmaxApi.models.custom_form_data_ezsignformfield_response.Custom-FormDataEzsignformfield-Response(
                                        s_ezsignformfield_label = 'Peanuts', 
                                        s_ezsignformfield_value = 'Yes', )
                                    ], )
                            ], )
                    ],
        )
        """

    def testCustomFormDataDocumentResponse(self):
        """Test CustomFormDataDocumentResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
