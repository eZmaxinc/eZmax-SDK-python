# coding: utf-8

"""
    eZmax API Definition (Full)

    This API expose all the functionnalities for the eZmax and eZsign applications.

    The version of the OpenAPI document: 1.2.1
    Contact: support-api@ezmax.ca
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from eZmaxApi.models.ezsigntemplate_request_compound_v2 import EzsigntemplateRequestCompoundV2

class TestEzsigntemplateRequestCompoundV2(unittest.TestCase):
    """EzsigntemplateRequestCompoundV2 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EzsigntemplateRequestCompoundV2:
        """Test EzsigntemplateRequestCompoundV2
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EzsigntemplateRequestCompoundV2`
        """
        model = EzsigntemplateRequestCompoundV2()
        if include_optional:
            return EzsigntemplateRequestCompoundV2(
                pki_ezsigntemplate_id = 36,
                fki_ezsignfoldertype_id = 5,
                fki_language_id = 2,
                s_ezsigntemplate_description = 'Standard Contract',
                s_ezsigntemplate_filenamepattern = 'Contract',
                b_ezsigntemplate_adminonly = True,
                e_ezsigntemplate_type = 'Usergroup'
            )
        else:
            return EzsigntemplateRequestCompoundV2(
                fki_language_id = 2,
                s_ezsigntemplate_description = 'Standard Contract',
                b_ezsigntemplate_adminonly = True,
                e_ezsigntemplate_type = 'Usergroup',
        )
        """

    def testEzsigntemplateRequestCompoundV2(self):
        """Test EzsigntemplateRequestCompoundV2"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
