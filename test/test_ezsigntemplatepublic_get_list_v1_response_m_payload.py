# coding: utf-8

"""
    eZmax API Definition (Full)

    This API expose all the functionnalities for the eZmax and eZsign applications.

    The version of the OpenAPI document: 1.2.1
    Contact: support-api@ezmax.ca
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from eZmaxApi.models.ezsigntemplatepublic_get_list_v1_response_m_payload import EzsigntemplatepublicGetListV1ResponseMPayload

class TestEzsigntemplatepublicGetListV1ResponseMPayload(unittest.TestCase):
    """EzsigntemplatepublicGetListV1ResponseMPayload unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EzsigntemplatepublicGetListV1ResponseMPayload:
        """Test EzsigntemplatepublicGetListV1ResponseMPayload
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EzsigntemplatepublicGetListV1ResponseMPayload`
        """
        model = EzsigntemplatepublicGetListV1ResponseMPayload()
        if include_optional:
            return EzsigntemplatepublicGetListV1ResponseMPayload(
                a_obj_ezsigntemplatepublic = [
                    eZmaxApi.models.ezsigntemplatepublic_list_element.ezsigntemplatepublic-ListElement(
                        pki_ezsigntemplatepublic_id = 96, 
                        fki_ezsignfoldertype_id = 5, 
                        s_ezsignfoldertype_name_x = 'Default', 
                        fki_userlogintype_id = 2, 
                        fki_ezsigntemplate_id = 36, 
                        fki_ezsigntemplatepackage_id = 99, 
                        s_ezsigntemplatepublic_description = 'Inscription form', 
                        b_ezsigntemplatepublic_isactive = True, 
                        t_ezsigntemplatepublic_note = 'This is a note', 
                        e_ezsigntemplatepublic_limittype = 'Hour', 
                        i_ezsigntemplatepublic_limit = 10, 
                        i_ezsigntemplatepublic_limitexceeded = 5, 
                        dt_ezsigntemplatepublic_limitexceededsince = '2024-05-16 15:12:45', 
                        i_ezsignfolder = 56, 
                        i_ezsigndocument = 56, 
                        s_ezsigntemplatepublic_ezsigntemplatedescription = 'jUR,rZ#UM/?R,Fp^l6$AR', )
                    ]
            )
        else:
            return EzsigntemplatepublicGetListV1ResponseMPayload(
                a_obj_ezsigntemplatepublic = [
                    eZmaxApi.models.ezsigntemplatepublic_list_element.ezsigntemplatepublic-ListElement(
                        pki_ezsigntemplatepublic_id = 96, 
                        fki_ezsignfoldertype_id = 5, 
                        s_ezsignfoldertype_name_x = 'Default', 
                        fki_userlogintype_id = 2, 
                        fki_ezsigntemplate_id = 36, 
                        fki_ezsigntemplatepackage_id = 99, 
                        s_ezsigntemplatepublic_description = 'Inscription form', 
                        b_ezsigntemplatepublic_isactive = True, 
                        t_ezsigntemplatepublic_note = 'This is a note', 
                        e_ezsigntemplatepublic_limittype = 'Hour', 
                        i_ezsigntemplatepublic_limit = 10, 
                        i_ezsigntemplatepublic_limitexceeded = 5, 
                        dt_ezsigntemplatepublic_limitexceededsince = '2024-05-16 15:12:45', 
                        i_ezsignfolder = 56, 
                        i_ezsigndocument = 56, 
                        s_ezsigntemplatepublic_ezsigntemplatedescription = 'jUR,rZ#UM/?R,Fp^l6$AR', )
                    ],
        )
        """

    def testEzsigntemplatepublicGetListV1ResponseMPayload(self):
        """Test EzsigntemplatepublicGetListV1ResponseMPayload"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
