# coding: utf-8

"""
    eZmax API Definition (Full)

    This API expose all the functionnalities for the eZmax and eZsign applications.

    The version of the OpenAPI document: 1.2.1
    Contact: support-api@ezmax.ca
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from eZmaxApi.models.activesession_get_current_v2_response import ActivesessionGetCurrentV2Response

class TestActivesessionGetCurrentV2Response(unittest.TestCase):
    """ActivesessionGetCurrentV2Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ActivesessionGetCurrentV2Response:
        """Test ActivesessionGetCurrentV2Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ActivesessionGetCurrentV2Response`
        """
        model = ActivesessionGetCurrentV2Response()
        if include_optional:
            return ActivesessionGetCurrentV2Response(
                m_payload = eZmaxApi.models.activesession_get_current_v2_response_m_payload.activesession-getCurrent-v2-Response-mPayload(
                    obj_activesession = eZmaxApi.models.activesession_response_compound.activesession-ResponseCompound(), )
            )
        else:
            return ActivesessionGetCurrentV2Response(
                m_payload = eZmaxApi.models.activesession_get_current_v2_response_m_payload.activesession-getCurrent-v2-Response-mPayload(
                    obj_activesession = eZmaxApi.models.activesession_response_compound.activesession-ResponseCompound(), ),
        )
        """

    def testActivesessionGetCurrentV2Response(self):
        """Test ActivesessionGetCurrentV2Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
