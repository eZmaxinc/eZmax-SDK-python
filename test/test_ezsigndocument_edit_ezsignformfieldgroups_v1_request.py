# coding: utf-8

"""
    eZmax API Definition (Full)

    This API expose all the functionnalities for the eZmax and eZsign applications.

    The version of the OpenAPI document: 1.2.0
    Contact: support-api@ezmax.ca
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from eZmaxApi.models.ezsigndocument_edit_ezsignformfieldgroups_v1_request import EzsigndocumentEditEzsignformfieldgroupsV1Request

class TestEzsigndocumentEditEzsignformfieldgroupsV1Request(unittest.TestCase):
    """EzsigndocumentEditEzsignformfieldgroupsV1Request unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EzsigndocumentEditEzsignformfieldgroupsV1Request:
        """Test EzsigndocumentEditEzsignformfieldgroupsV1Request
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EzsigndocumentEditEzsignformfieldgroupsV1Request`
        """
        model = EzsigndocumentEditEzsignformfieldgroupsV1Request()
        if include_optional:
            return EzsigndocumentEditEzsignformfieldgroupsV1Request(
                a_obj_ezsignformfieldgroup = [
                    eZmaxApi.models.ezsignformfieldgroup_request_compound.ezsignformfieldgroup-RequestCompound()
                    ]
            )
        else:
            return EzsigndocumentEditEzsignformfieldgroupsV1Request(
                a_obj_ezsignformfieldgroup = [
                    eZmaxApi.models.ezsignformfieldgroup_request_compound.ezsignformfieldgroup-RequestCompound()
                    ],
        )
        """

    def testEzsigndocumentEditEzsignformfieldgroupsV1Request(self):
        """Test EzsigndocumentEditEzsignformfieldgroupsV1Request"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
