# coding: utf-8

"""
    eZmax API Definition (Full)

    This API expose all the functionnalities for the eZmax and eZsign applications.

    The version of the OpenAPI document: 1.2.0
    Contact: support-api@ezmax.ca
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from eZmaxApi.models.versionhistory_response import VersionhistoryResponse

class TestVersionhistoryResponse(unittest.TestCase):
    """VersionhistoryResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VersionhistoryResponse:
        """Test VersionhistoryResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VersionhistoryResponse`
        """
        model = VersionhistoryResponse()
        if include_optional:
            return VersionhistoryResponse(
                pki_versionhistory_id = 42,
                fki_module_id = 40,
                fki_modulesection_id = 53,
                s_module_name_x = 'Purchase',
                s_modulesection_name_x = 'Access',
                e_versionhistory_usertype = 'Normal',
                obj_versionhistory_detail = eZmaxApi.models.multilingual_versionhistory_detail.Multilingual-VersionhistoryDetail(
                    t_versionhistory_detail1 = 'Message important', 
                    t_versionhistory_detail2 = 'Important message', ),
                dt_versionhistory_date = '2020-12-31',
                dt_versionhistory_dateend = '2020-12-31',
                e_versionhistory_type = 'NewFeature',
                b_versionhistory_draft = True
            )
        else:
            return VersionhistoryResponse(
                pki_versionhistory_id = 42,
                obj_versionhistory_detail = eZmaxApi.models.multilingual_versionhistory_detail.Multilingual-VersionhistoryDetail(
                    t_versionhistory_detail1 = 'Message important', 
                    t_versionhistory_detail2 = 'Important message', ),
                dt_versionhistory_date = '2020-12-31',
                e_versionhistory_type = 'NewFeature',
                b_versionhistory_draft = True,
        )
        """

    def testVersionhistoryResponse(self):
        """Test VersionhistoryResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
