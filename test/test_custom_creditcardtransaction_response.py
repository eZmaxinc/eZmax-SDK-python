# coding: utf-8

"""
    eZmax API Definition (Full)

    This API expose all the functionnalities for the eZmax and eZsign applications.

    The version of the OpenAPI document: 1.2.0
    Contact: support-api@ezmax.ca
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from eZmaxApi.models.custom_creditcardtransaction_response import CustomCreditcardtransactionResponse

class TestCustomCreditcardtransactionResponse(unittest.TestCase):
    """CustomCreditcardtransactionResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CustomCreditcardtransactionResponse:
        """Test CustomCreditcardtransactionResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CustomCreditcardtransactionResponse`
        """
        model = CustomCreditcardtransactionResponse()
        if include_optional:
            return CustomCreditcardtransactionResponse(
                e_creditcardtype_codename = 'visa',
                d_creditcardtransaction_amount = '167.58',
                s_creditcardtransaction_partiallydecryptednumber = 'XXXX XXXX XXXX 1234',
                s_creditcardtransaction_referencenumber = '651447854715478415'
            )
        else:
            return CustomCreditcardtransactionResponse(
                e_creditcardtype_codename = 'visa',
                d_creditcardtransaction_amount = '167.58',
                s_creditcardtransaction_partiallydecryptednumber = 'XXXX XXXX XXXX 1234',
                s_creditcardtransaction_referencenumber = '651447854715478415',
        )
        """

    def testCustomCreditcardtransactionResponse(self):
        """Test CustomCreditcardtransactionResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
