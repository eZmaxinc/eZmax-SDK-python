# coding: utf-8

"""
    eZmax API Definition (Full)

    This API expose all the functionnalities for the eZmax and eZsign applications.

    The version of the OpenAPI document: 1.2.0
    Contact: support-api@ezmax.ca
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from eZmaxApi.models.activesession_response import ActivesessionResponse

class TestActivesessionResponse(unittest.TestCase):
    """ActivesessionResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ActivesessionResponse:
        """Test ActivesessionResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ActivesessionResponse`
        """
        model = ActivesessionResponse()
        if include_optional:
            return ActivesessionResponse(
                e_activesession_usertype = 'Normal',
                e_activesession_origin = 'BuiltIn',
                e_activesession_weekdaystart = 'Sunday',
                fki_language_id = 2,
                s_company_name_x = 'Acme inc.',
                s_department_name_x = 'Head Office',
                b_activesession_debug = False,
                b_activesession_issuperadmin = False,
                pks_customer_code = 'demo',
                fki_systemconfigurationtype_id = 28,
                fki_signature_id = 12
            )
        else:
            return ActivesessionResponse(
                e_activesession_usertype = 'Normal',
                e_activesession_origin = 'BuiltIn',
                e_activesession_weekdaystart = 'Sunday',
                fki_language_id = 2,
                s_company_name_x = 'Acme inc.',
                s_department_name_x = 'Head Office',
                b_activesession_debug = False,
                b_activesession_issuperadmin = False,
                pks_customer_code = 'demo',
                fki_systemconfigurationtype_id = 28,
        )
        """

    def testActivesessionResponse(self):
        """Test ActivesessionResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
