"""
    eZmax API Definition

    This API expose all the functionnalities for the eZmax and eZsign applications.  # noqa: E501

    The version of the OpenAPI document: 1.0.32
    Contact: support-api@ezmax.ca
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from eZmaxinc/eZmax-SDK-python.api_client import ApiClient, Endpoint as _Endpoint
from eZmaxinc/eZmax-SDK-python.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from eZmaxinc/eZmax-SDK-python.model.common_response_error import CommonResponseError
from eZmaxinc/eZmax-SDK-python.model.sspr_reset_password_request_v1_request import SsprResetPasswordRequestV1Request
from eZmaxinc/eZmax-SDK-python.model.sspr_reset_password_v1_request import SsprResetPasswordV1Request
from eZmaxinc/eZmax-SDK-python.model.sspr_send_usernames_v1_request import SsprSendUsernamesV1Request
from eZmaxinc/eZmax-SDK-python.model.sspr_unlock_account_request_v1_request import SsprUnlockAccountRequestV1Request
from eZmaxinc/eZmax-SDK-python.model.sspr_unlock_account_v1_request import SsprUnlockAccountV1Request
from eZmaxinc/eZmax-SDK-python.model.sspr_validate_token_v1_request import SsprValidateTokenV1Request


class ModuleSsprApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

        def __sspr_reset_password_request_v1(
            self,
            sspr_reset_password_request_v1_request,
            **kwargs
        ):
            """Reset Password Request  # noqa: E501

            This endpoint sends an email with a link to reset the user's password.  sEmailAddress must be set if eUserTypeSSPR = EzsignUser  sUserLoginname must be set if eUserTypeSSPR = Native  # noqa: E501
            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.sspr_reset_password_request_v1(sspr_reset_password_request_v1_request, async_req=True)
            >>> result = thread.get()

            Args:
                sspr_reset_password_request_v1_request (SsprResetPasswordRequestV1Request):

            Keyword Args:
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (float/tuple): timeout setting for this request. If one
                    number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                None
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['sspr_reset_password_request_v1_request'] = \
                sspr_reset_password_request_v1_request
            return self.call_with_http_info(**kwargs)

        self.sspr_reset_password_request_v1 = _Endpoint(
            settings={
                'response_type': None,
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/module/sspr/resetPasswordRequest/',
                'operation_id': 'sspr_reset_password_request_v1',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'sspr_reset_password_request_v1_request',
                ],
                'required': [
                    'sspr_reset_password_request_v1_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'sspr_reset_password_request_v1_request':
                        (SsprResetPasswordRequestV1Request,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'sspr_reset_password_request_v1_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client,
            callable=__sspr_reset_password_request_v1
        )

        def __sspr_reset_password_v1(
            self,
            sspr_reset_password_v1_request,
            **kwargs
        ):
            """Reset Password  # noqa: E501

            This endpoint resets the user's password.  sEmailAddress must be set if eUserTypeSSPR = EzsignUser  sUserLoginname must be set if eUserTypeSSPR = Native  # noqa: E501
            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.sspr_reset_password_v1(sspr_reset_password_v1_request, async_req=True)
            >>> result = thread.get()

            Args:
                sspr_reset_password_v1_request (SsprResetPasswordV1Request):

            Keyword Args:
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (float/tuple): timeout setting for this request. If one
                    number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                None
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['sspr_reset_password_v1_request'] = \
                sspr_reset_password_v1_request
            return self.call_with_http_info(**kwargs)

        self.sspr_reset_password_v1 = _Endpoint(
            settings={
                'response_type': None,
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/module/sspr/resetPassword',
                'operation_id': 'sspr_reset_password_v1',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'sspr_reset_password_v1_request',
                ],
                'required': [
                    'sspr_reset_password_v1_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'sspr_reset_password_v1_request':
                        (SsprResetPasswordV1Request,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'sspr_reset_password_v1_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client,
            callable=__sspr_reset_password_v1
        )

        def __sspr_send_usernames_v1(
            self,
            sspr_send_usernames_v1_request,
            **kwargs
        ):
            """Send username(s)  # noqa: E501

            This endpoint returns an email with the username(s) matching the email address provided in case of forgotten username  # noqa: E501
            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.sspr_send_usernames_v1(sspr_send_usernames_v1_request, async_req=True)
            >>> result = thread.get()

            Args:
                sspr_send_usernames_v1_request (SsprSendUsernamesV1Request):

            Keyword Args:
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (float/tuple): timeout setting for this request. If one
                    number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                None
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['sspr_send_usernames_v1_request'] = \
                sspr_send_usernames_v1_request
            return self.call_with_http_info(**kwargs)

        self.sspr_send_usernames_v1 = _Endpoint(
            settings={
                'response_type': None,
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/module/sspr/sendUsernames',
                'operation_id': 'sspr_send_usernames_v1',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'sspr_send_usernames_v1_request',
                ],
                'required': [
                    'sspr_send_usernames_v1_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'sspr_send_usernames_v1_request':
                        (SsprSendUsernamesV1Request,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'sspr_send_usernames_v1_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client,
            callable=__sspr_send_usernames_v1
        )

        def __sspr_unlock_account_request_v1(
            self,
            sspr_unlock_account_request_v1_request,
            **kwargs
        ):
            """Unlock Account Request  # noqa: E501

            This endpoint sends an email with a link to unlock the user account.  sEmailAddress must be set if eUserTypeSSPR = EzsignUser  sUserLoginname must be set if eUserTypeSSPR = Native  # noqa: E501
            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.sspr_unlock_account_request_v1(sspr_unlock_account_request_v1_request, async_req=True)
            >>> result = thread.get()

            Args:
                sspr_unlock_account_request_v1_request (SsprUnlockAccountRequestV1Request):

            Keyword Args:
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (float/tuple): timeout setting for this request. If one
                    number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                None
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['sspr_unlock_account_request_v1_request'] = \
                sspr_unlock_account_request_v1_request
            return self.call_with_http_info(**kwargs)

        self.sspr_unlock_account_request_v1 = _Endpoint(
            settings={
                'response_type': None,
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/module/sspr/unlockAccountRequest',
                'operation_id': 'sspr_unlock_account_request_v1',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'sspr_unlock_account_request_v1_request',
                ],
                'required': [
                    'sspr_unlock_account_request_v1_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'sspr_unlock_account_request_v1_request':
                        (SsprUnlockAccountRequestV1Request,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'sspr_unlock_account_request_v1_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client,
            callable=__sspr_unlock_account_request_v1
        )

        def __sspr_unlock_account_v1(
            self,
            sspr_unlock_account_v1_request,
            **kwargs
        ):
            """Unlock Account  # noqa: E501

            This endpoint unlocks the user account.  sEmailAddress must be set if eUserTypeSSPR = EzsignUser  sUserLoginname must be set if eUserTypeSSPR = Native  # noqa: E501
            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.sspr_unlock_account_v1(sspr_unlock_account_v1_request, async_req=True)
            >>> result = thread.get()

            Args:
                sspr_unlock_account_v1_request (SsprUnlockAccountV1Request):

            Keyword Args:
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (float/tuple): timeout setting for this request. If one
                    number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                None
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['sspr_unlock_account_v1_request'] = \
                sspr_unlock_account_v1_request
            return self.call_with_http_info(**kwargs)

        self.sspr_unlock_account_v1 = _Endpoint(
            settings={
                'response_type': None,
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/module/sspr/unlockAccount',
                'operation_id': 'sspr_unlock_account_v1',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'sspr_unlock_account_v1_request',
                ],
                'required': [
                    'sspr_unlock_account_v1_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'sspr_unlock_account_v1_request':
                        (SsprUnlockAccountV1Request,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'sspr_unlock_account_v1_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client,
            callable=__sspr_unlock_account_v1
        )

        def __sspr_validate_token_v1(
            self,
            sspr_validate_token_v1_request,
            **kwargs
        ):
            """Validate Token  # noqa: E501

            This endpoint validates if a Token is valid and not expired. If the token has less than an hour to its life, the TTL is reset to 1 hour.  sEmailAddress must be set if eUserTypeSSPR = EzsignUser  sUserLoginname must be set if eUserTypeSSPR = Native  # noqa: E501
            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.sspr_validate_token_v1(sspr_validate_token_v1_request, async_req=True)
            >>> result = thread.get()

            Args:
                sspr_validate_token_v1_request (SsprValidateTokenV1Request):

            Keyword Args:
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (float/tuple): timeout setting for this request. If one
                    number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                None
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['sspr_validate_token_v1_request'] = \
                sspr_validate_token_v1_request
            return self.call_with_http_info(**kwargs)

        self.sspr_validate_token_v1 = _Endpoint(
            settings={
                'response_type': None,
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/module/sspr/validateToken',
                'operation_id': 'sspr_validate_token_v1',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'sspr_validate_token_v1_request',
                ],
                'required': [
                    'sspr_validate_token_v1_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'sspr_validate_token_v1_request':
                        (SsprValidateTokenV1Request,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'sspr_validate_token_v1_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client,
            callable=__sspr_validate_token_v1
        )
