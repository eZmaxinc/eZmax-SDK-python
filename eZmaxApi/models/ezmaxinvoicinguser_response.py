# coding: utf-8

"""
    eZmax API Definition (Full)

    This API expose all the functionnalities for the eZmax and eZsign applications.

    The version of the OpenAPI document: 1.2.0
    Contact: support-api@ezmax.ca
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictBool, StrictStr, conint
from eZmaxApi.models.field_e_ezmaxinvoicinguser_variationezsign import FieldEEzmaxinvoicinguserVariationezsign

class EzmaxinvoicinguserResponse(BaseModel):
    """
    A Ezmaxinvoicinguser Object  # noqa: E501
    """
    pki_ezmaxinvoicinguser_id: Optional[conint(strict=True, ge=0)] = Field(None, alias="pkiEzmaxinvoicinguserID", description="The unique ID of the Ezmaxinvoicinguser")
    fki_ezmaxinvoicing_id: Optional[conint(strict=True, ge=0)] = Field(None, alias="fkiEzmaxinvoicingID", description="The unique ID of the Ezmaxinvoicing")
    fki_billingentityinternal_id: conint(strict=True, ge=0) = Field(..., alias="fkiBillingentityinternalID", description="The unique ID of the Billingentityinternal.")
    s_billingentityinternal_description_x: StrictStr = Field(..., alias="sBillingentityinternalDescriptionX", description="The description of the Billingentityinternal in the language of the requester")
    fki_user_id: conint(strict=True, ge=0) = Field(..., alias="fkiUserID", description="The unique ID of the User")
    i_ezmaxinvoicinguser_ezsigndocument: conint(strict=True, ge=0) = Field(..., alias="iEzmaxinvoicinguserEzsigndocument", description="The number of ezsign documents")
    b_ezmaxinvoicinguser_ezsignaccount: StrictBool = Field(..., alias="bEzmaxinvoicinguserEzsignaccount", description="Whether there is an eZsign account")
    b_ezmaxinvoicinguser_billableezsign: StrictBool = Field(..., alias="bEzmaxinvoicinguserBillableezsign", description="Whether it is billable for eZsign")
    e_ezmaxinvoicinguser_variationezsign: FieldEEzmaxinvoicinguserVariationezsign = Field(..., alias="eEzmaxinvoicinguserVariationezsign")
    __properties = ["pkiEzmaxinvoicinguserID", "fkiEzmaxinvoicingID", "fkiBillingentityinternalID", "sBillingentityinternalDescriptionX", "fkiUserID", "iEzmaxinvoicinguserEzsigndocument", "bEzmaxinvoicinguserEzsignaccount", "bEzmaxinvoicinguserBillableezsign", "eEzmaxinvoicinguserVariationezsign"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> EzmaxinvoicinguserResponse:
        """Create an instance of EzmaxinvoicinguserResponse from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> EzmaxinvoicinguserResponse:
        """Create an instance of EzmaxinvoicinguserResponse from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return EzmaxinvoicinguserResponse.parse_obj(obj)

        _obj = EzmaxinvoicinguserResponse.parse_obj({
            "pki_ezmaxinvoicinguser_id": obj.get("pkiEzmaxinvoicinguserID"),
            "fki_ezmaxinvoicing_id": obj.get("fkiEzmaxinvoicingID"),
            "fki_billingentityinternal_id": obj.get("fkiBillingentityinternalID"),
            "s_billingentityinternal_description_x": obj.get("sBillingentityinternalDescriptionX"),
            "fki_user_id": obj.get("fkiUserID"),
            "i_ezmaxinvoicinguser_ezsigndocument": obj.get("iEzmaxinvoicinguserEzsigndocument"),
            "b_ezmaxinvoicinguser_ezsignaccount": obj.get("bEzmaxinvoicinguserEzsignaccount"),
            "b_ezmaxinvoicinguser_billableezsign": obj.get("bEzmaxinvoicinguserBillableezsign"),
            "e_ezmaxinvoicinguser_variationezsign": obj.get("eEzmaxinvoicinguserVariationezsign")
        })
        return _obj


