# coding: utf-8

"""
    eZmax API Definition (Full)

    This API expose all the functionnalities for the eZmax and eZsign applications.

    The version of the OpenAPI document: 1.2.1
    Contact: support-api@ezmax.ca
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import ConfigDict, Field, StrictBool
from typing import Any, ClassVar, Dict, List, Optional
from eZmaxApi.models.enum_textvalidation import EnumTextvalidation
from eZmaxApi.models.ezsigntemplateelementdependency_response import EzsigntemplateelementdependencyResponse
from eZmaxApi.models.ezsigntemplatesignature_response import EzsigntemplatesignatureResponse
from eZmaxApi.models.ezsigntemplatesignaturecustomdate_response import EzsigntemplatesignaturecustomdateResponse
from eZmaxApi.models.field_e_ezsigntemplatesignature_attachmentnamesource import FieldEEzsigntemplatesignatureAttachmentnamesource
from eZmaxApi.models.field_e_ezsigntemplatesignature_consultationtrigger import FieldEEzsigntemplatesignatureConsultationtrigger
from eZmaxApi.models.field_e_ezsigntemplatesignature_dependencyrequirement import FieldEEzsigntemplatesignatureDependencyrequirement
from eZmaxApi.models.field_e_ezsigntemplatesignature_font import FieldEEzsigntemplatesignatureFont
from eZmaxApi.models.field_e_ezsigntemplatesignature_positioning import FieldEEzsigntemplatesignaturePositioning
from eZmaxApi.models.field_e_ezsigntemplatesignature_positioningoccurence import FieldEEzsigntemplatesignaturePositioningoccurence
from eZmaxApi.models.field_e_ezsigntemplatesignature_tooltipposition import FieldEEzsigntemplatesignatureTooltipposition
from eZmaxApi.models.field_e_ezsigntemplatesignature_type import FieldEEzsigntemplatesignatureType
from typing import Optional, Set
from typing_extensions import Self

class EzsigntemplatesignatureResponseCompound(EzsigntemplatesignatureResponse):
    """
    A Ezsigntemplatesignature Object
    """ # noqa: E501
    b_ezsigntemplatesignature_customdate: Optional[StrictBool] = Field(default=None, description="Whether the Ezsigntemplatesignature has a custom date format or not. (Only possible when eEzsigntemplatesignatureType is **Name** or **Handwritten**)", alias="bEzsigntemplatesignatureCustomdate")
    a_obj_ezsigntemplatesignaturecustomdate: Optional[List[EzsigntemplatesignaturecustomdateResponse]] = Field(default=None, description="An array of custom date blocks that will be filled at the time of signature.  Can only be used if bEzsigntemplatesignatureCustomdate is true.  Use an empty array if you don't want to have a date at all.", alias="a_objEzsigntemplatesignaturecustomdate")
    a_obj_ezsigntemplateelementdependency: Optional[List[EzsigntemplateelementdependencyResponse]] = Field(default=None, alias="a_objEzsigntemplateelementdependency")
    __properties: ClassVar[List[str]] = ["pkiEzsigntemplatesignatureID", "fkiEzsigntemplatedocumentID", "fkiEzsigntemplatesignerID", "fkiEzsigntemplatesignerIDValidation", "bEzsigntemplatesignatureHandwritten", "bEzsigntemplatesignatureReason", "eEzsigntemplatesignaturePositioning", "iEzsigntemplatedocumentpagePagenumber", "iEzsigntemplatesignatureX", "iEzsigntemplatesignatureY", "iEzsigntemplatesignatureWidth", "iEzsigntemplatesignatureHeight", "iEzsigntemplatesignatureStep", "eEzsigntemplatesignatureType", "eEzsigntemplatesignatureConsultationtrigger", "tEzsigntemplatesignatureTooltip", "eEzsigntemplatesignatureTooltipposition", "eEzsigntemplatesignatureFont", "iEzsigntemplatesignatureValidationstep", "sEzsigntemplatesignatureAttachmentdescription", "eEzsigntemplatesignatureAttachmentnamesource", "bEzsigntemplatesignatureRequired", "iEzsigntemplatesignatureMaxlength", "sEzsigntemplatesignatureDefaultvalue", "sEzsigntemplatesignatureRegexp", "eEzsigntemplatesignatureTextvalidation", "sEzsigntemplatesignatureTextvalidationcustommessage", "eEzsigntemplatesignatureDependencyrequirement", "sEzsigntemplatesignaturePositioningpattern", "iEzsigntemplatesignaturePositioningoffsetx", "iEzsigntemplatesignaturePositioningoffsety", "eEzsigntemplatesignaturePositioningoccurence", "bEzsigntemplatesignatureCustomdate", "a_objEzsigntemplatesignaturecustomdate", "a_objEzsigntemplateelementdependency"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of EzsigntemplatesignatureResponseCompound from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of each item in a_obj_ezsigntemplatesignaturecustomdate (list)
        _items = []
        if self.a_obj_ezsigntemplatesignaturecustomdate:
            for _item_a_obj_ezsigntemplatesignaturecustomdate in self.a_obj_ezsigntemplatesignaturecustomdate:
                if _item_a_obj_ezsigntemplatesignaturecustomdate:
                    _items.append(_item_a_obj_ezsigntemplatesignaturecustomdate.to_dict())
            _dict['a_objEzsigntemplatesignaturecustomdate'] = _items
        # override the default output from pydantic by calling `to_dict()` of each item in a_obj_ezsigntemplateelementdependency (list)
        _items = []
        if self.a_obj_ezsigntemplateelementdependency:
            for _item_a_obj_ezsigntemplateelementdependency in self.a_obj_ezsigntemplateelementdependency:
                if _item_a_obj_ezsigntemplateelementdependency:
                    _items.append(_item_a_obj_ezsigntemplateelementdependency.to_dict())
            _dict['a_objEzsigntemplateelementdependency'] = _items
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of EzsigntemplatesignatureResponseCompound from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "pkiEzsigntemplatesignatureID": obj.get("pkiEzsigntemplatesignatureID"),
            "fkiEzsigntemplatedocumentID": obj.get("fkiEzsigntemplatedocumentID"),
            "fkiEzsigntemplatesignerID": obj.get("fkiEzsigntemplatesignerID"),
            "fkiEzsigntemplatesignerIDValidation": obj.get("fkiEzsigntemplatesignerIDValidation"),
            "bEzsigntemplatesignatureHandwritten": obj.get("bEzsigntemplatesignatureHandwritten"),
            "bEzsigntemplatesignatureReason": obj.get("bEzsigntemplatesignatureReason"),
            "eEzsigntemplatesignaturePositioning": obj.get("eEzsigntemplatesignaturePositioning"),
            "iEzsigntemplatedocumentpagePagenumber": obj.get("iEzsigntemplatedocumentpagePagenumber"),
            "iEzsigntemplatesignatureX": obj.get("iEzsigntemplatesignatureX"),
            "iEzsigntemplatesignatureY": obj.get("iEzsigntemplatesignatureY"),
            "iEzsigntemplatesignatureWidth": obj.get("iEzsigntemplatesignatureWidth"),
            "iEzsigntemplatesignatureHeight": obj.get("iEzsigntemplatesignatureHeight"),
            "iEzsigntemplatesignatureStep": obj.get("iEzsigntemplatesignatureStep"),
            "eEzsigntemplatesignatureType": obj.get("eEzsigntemplatesignatureType"),
            "eEzsigntemplatesignatureConsultationtrigger": obj.get("eEzsigntemplatesignatureConsultationtrigger"),
            "tEzsigntemplatesignatureTooltip": obj.get("tEzsigntemplatesignatureTooltip"),
            "eEzsigntemplatesignatureTooltipposition": obj.get("eEzsigntemplatesignatureTooltipposition"),
            "eEzsigntemplatesignatureFont": obj.get("eEzsigntemplatesignatureFont"),
            "iEzsigntemplatesignatureValidationstep": obj.get("iEzsigntemplatesignatureValidationstep"),
            "sEzsigntemplatesignatureAttachmentdescription": obj.get("sEzsigntemplatesignatureAttachmentdescription"),
            "eEzsigntemplatesignatureAttachmentnamesource": obj.get("eEzsigntemplatesignatureAttachmentnamesource"),
            "bEzsigntemplatesignatureRequired": obj.get("bEzsigntemplatesignatureRequired"),
            "iEzsigntemplatesignatureMaxlength": obj.get("iEzsigntemplatesignatureMaxlength"),
            "sEzsigntemplatesignatureDefaultvalue": obj.get("sEzsigntemplatesignatureDefaultvalue"),
            "sEzsigntemplatesignatureRegexp": obj.get("sEzsigntemplatesignatureRegexp"),
            "eEzsigntemplatesignatureTextvalidation": obj.get("eEzsigntemplatesignatureTextvalidation"),
            "sEzsigntemplatesignatureTextvalidationcustommessage": obj.get("sEzsigntemplatesignatureTextvalidationcustommessage"),
            "eEzsigntemplatesignatureDependencyrequirement": obj.get("eEzsigntemplatesignatureDependencyrequirement"),
            "sEzsigntemplatesignaturePositioningpattern": obj.get("sEzsigntemplatesignaturePositioningpattern"),
            "iEzsigntemplatesignaturePositioningoffsetx": obj.get("iEzsigntemplatesignaturePositioningoffsetx"),
            "iEzsigntemplatesignaturePositioningoffsety": obj.get("iEzsigntemplatesignaturePositioningoffsety"),
            "eEzsigntemplatesignaturePositioningoccurence": obj.get("eEzsigntemplatesignaturePositioningoccurence"),
            "bEzsigntemplatesignatureCustomdate": obj.get("bEzsigntemplatesignatureCustomdate"),
            "a_objEzsigntemplatesignaturecustomdate": [EzsigntemplatesignaturecustomdateResponse.from_dict(_item) for _item in obj["a_objEzsigntemplatesignaturecustomdate"]] if obj.get("a_objEzsigntemplatesignaturecustomdate") is not None else None,
            "a_objEzsigntemplateelementdependency": [EzsigntemplateelementdependencyResponse.from_dict(_item) for _item in obj["a_objEzsigntemplateelementdependency"]] if obj.get("a_objEzsigntemplateelementdependency") is not None else None
        })
        return _obj


