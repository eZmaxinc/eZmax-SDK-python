# coding: utf-8

"""
    eZmax API Definition (Full)

    This API expose all the functionnalities for the eZmax and eZsign applications.

    The version of the OpenAPI document: 1.2.1
    Contact: support-api@ezmax.ca
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field, StrictStr
from typing import Any, ClassVar, Dict, List, Optional
from typing_extensions import Annotated
from eZmaxApi.models.ezmaxinvoicingsummaryexternaldetail_response_compound import EzmaxinvoicingsummaryexternaldetailResponseCompound
from typing import Optional, Set
from typing_extensions import Self

class EzmaxinvoicingsummaryexternalResponseCompound(BaseModel):
    """
    A Ezmaxinvoicingsummaryexternal Object
    """ # noqa: E501
    pki_ezmaxinvoicingsummaryexternal_id: Optional[Annotated[int, Field(strict=True, ge=0)]] = Field(default=None, description="The unique ID of the Ezmaxinvoicingsummaryexternal", alias="pkiEzmaxinvoicingsummaryexternalID")
    fki_ezmaxinvoicing_id: Optional[Annotated[int, Field(strict=True, ge=0)]] = Field(default=None, description="The unique ID of the Ezmaxinvoicing", alias="fkiEzmaxinvoicingID")
    fki_billingentityexternal_id: Annotated[int, Field(strict=True, ge=1)] = Field(description="The unique ID of the Billingentityexternal", alias="fkiBillingentityexternalID")
    s_billingentityexternal_description: StrictStr = Field(description="The description of the Billingentityexternal", alias="sBillingentityexternalDescription")
    s_ezmaxinvoicingsummaryexternal_description: Annotated[str, Field(strict=True, max_length=70)] = Field(description="The description of the Ezmaxinvoicingsummaryexternal", alias="sEzmaxinvoicingsummaryexternalDescription")
    a_obj_ezmaxinvoicingsummaryexternaldetail: List[EzmaxinvoicingsummaryexternaldetailResponseCompound] = Field(alias="a_objEzmaxinvoicingsummaryexternaldetail")
    __properties: ClassVar[List[str]] = ["pkiEzmaxinvoicingsummaryexternalID", "fkiEzmaxinvoicingID", "fkiBillingentityexternalID", "sBillingentityexternalDescription", "sEzmaxinvoicingsummaryexternalDescription", "a_objEzmaxinvoicingsummaryexternaldetail"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of EzmaxinvoicingsummaryexternalResponseCompound from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of each item in a_obj_ezmaxinvoicingsummaryexternaldetail (list)
        _items = []
        if self.a_obj_ezmaxinvoicingsummaryexternaldetail:
            for _item in self.a_obj_ezmaxinvoicingsummaryexternaldetail:
                if _item:
                    _items.append(_item.to_dict())
            _dict['a_objEzmaxinvoicingsummaryexternaldetail'] = _items
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of EzmaxinvoicingsummaryexternalResponseCompound from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "pkiEzmaxinvoicingsummaryexternalID": obj.get("pkiEzmaxinvoicingsummaryexternalID"),
            "fkiEzmaxinvoicingID": obj.get("fkiEzmaxinvoicingID"),
            "fkiBillingentityexternalID": obj.get("fkiBillingentityexternalID"),
            "sBillingentityexternalDescription": obj.get("sBillingentityexternalDescription"),
            "sEzmaxinvoicingsummaryexternalDescription": obj.get("sEzmaxinvoicingsummaryexternalDescription"),
            "a_objEzmaxinvoicingsummaryexternaldetail": [EzmaxinvoicingsummaryexternaldetailResponseCompound.from_dict(_item) for _item in obj["a_objEzmaxinvoicingsummaryexternaldetail"]] if obj.get("a_objEzmaxinvoicingsummaryexternaldetail") is not None else None
        })
        return _obj


