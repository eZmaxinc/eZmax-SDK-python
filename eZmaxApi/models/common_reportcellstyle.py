# coding: utf-8

"""
    eZmax API Definition (Full)

    This API expose all the functionnalities for the eZmax and eZsign applications.

    The version of the OpenAPI document: 1.2.0
    Contact: support-api@ezmax.ca
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json



from pydantic import BaseModel, Field, StrictBool
from eZmaxApi.models.enum_fontunderline import EnumFontunderline
from eZmaxApi.models.enum_fontweight import EnumFontweight
from eZmaxApi.models.enum_horizontalalignment import EnumHorizontalalignment
from eZmaxApi.models.enum_verticalalignment import EnumVerticalalignment

class CommonReportcellstyle(BaseModel):
    """
    Styles applied to a Reportcell   # noqa: E501
    """
    b_reportcellstyle_bordertop: StrictBool = Field(..., alias="bReportcellstyleBordertop", description="Whether there is a border at the top of the Reportcell")
    b_reportcellstyle_borderbottom: StrictBool = Field(..., alias="bReportcellstyleBorderbottom", description="Whether there is a border at the bottom of the Reportcell")
    b_reportcellstyle_borderleft: StrictBool = Field(..., alias="bReportcellstyleBorderleft", description="Whether there is a border at the left of the Reportcell")
    b_reportcellstyle_borderright: StrictBool = Field(..., alias="bReportcellstyleBorderright", description="Whether there is a border at the right of the Reportcell")
    e_reportcell_horizontalalignment: EnumHorizontalalignment = Field(..., alias="eReportcellHorizontalalignment")
    e_reportcell_verticalalignment: EnumVerticalalignment = Field(..., alias="eReportcellVerticalalignment")
    e_reportcell_fontweight: EnumFontweight = Field(..., alias="eReportcellFontweight")
    e_reportcell_fontunderline: EnumFontunderline = Field(..., alias="eReportcellFontunderline")
    __properties = ["bReportcellstyleBordertop", "bReportcellstyleBorderbottom", "bReportcellstyleBorderleft", "bReportcellstyleBorderright", "eReportcellHorizontalalignment", "eReportcellVerticalalignment", "eReportcellFontweight", "eReportcellFontunderline"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> CommonReportcellstyle:
        """Create an instance of CommonReportcellstyle from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> CommonReportcellstyle:
        """Create an instance of CommonReportcellstyle from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return CommonReportcellstyle.parse_obj(obj)

        _obj = CommonReportcellstyle.parse_obj({
            "b_reportcellstyle_bordertop": obj.get("bReportcellstyleBordertop"),
            "b_reportcellstyle_borderbottom": obj.get("bReportcellstyleBorderbottom"),
            "b_reportcellstyle_borderleft": obj.get("bReportcellstyleBorderleft"),
            "b_reportcellstyle_borderright": obj.get("bReportcellstyleBorderright"),
            "e_reportcell_horizontalalignment": obj.get("eReportcellHorizontalalignment"),
            "e_reportcell_verticalalignment": obj.get("eReportcellVerticalalignment"),
            "e_reportcell_fontweight": obj.get("eReportcellFontweight"),
            "e_reportcell_fontunderline": obj.get("eReportcellFontunderline")
        })
        return _obj


