# coding: utf-8

"""
    eZmax API Definition (Full)

    This API expose all the functionnalities for the eZmax and eZsign applications.

    The version of the OpenAPI document: 1.2.0
    Contact: support-api@ezmax.ca
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictBool, StrictStr, conint, constr, validator

class EzmaxinvoicingsummaryexternaldetailResponse(BaseModel):
    """
    A Ezmaxinvoicingsummaryexternaldetail Object  # noqa: E501
    """
    pki_ezmaxinvoicingsummaryexternaldetail_id: Optional[conint(strict=True, ge=0)] = Field(None, alias="pkiEzmaxinvoicingsummaryexternaldetailID", description="The unique ID of the Ezmaxinvoicingsummaryexternaldetail")
    fki_ezmaxinvoicingsummaryexternal_id: Optional[conint(strict=True, ge=0)] = Field(None, alias="fkiEzmaxinvoicingsummaryexternalID", description="The unique ID of the Ezmaxinvoicingsummaryexternal")
    fki_ezmaxproduct_id: conint(strict=True, ge=1) = Field(..., alias="fkiEzmaxproductID", description="The unique ID of the Ezmaxproduct")
    s_ezmaxproduct_description_x: StrictStr = Field(..., alias="sEzmaxproductDescriptionX", description="The description of the Ezmaxproduct in the language of the requester")
    d_ezmaxinvoicingsummaryexternaldetail_countreal: constr(strict=True) = Field(..., alias="dEzmaxinvoicingsummaryexternaldetailCountreal", description="The count item invoiced for the product")
    d_ezmaxinvoicingsummaryexternaldetail_subtotal: constr(strict=True) = Field(..., alias="dEzmaxinvoicingsummaryexternaldetailSubtotal", description="The subtotal invoiced for the product")
    d_ezmaxinvoicingsummaryexternaldetail_rebate: constr(strict=True) = Field(..., alias="dEzmaxinvoicingsummaryexternaldetailRebate", description="The rebate for the product")
    d_ezmaxinvoicingsummaryexternaldetail_total: constr(strict=True) = Field(..., alias="dEzmaxinvoicingsummaryexternaldetailTotal", description="The total invoiced for the product")
    b_ezmaxinvoicingsummaryexternaldetail_adjustment: StrictBool = Field(..., alias="bEzmaxinvoicingsummaryexternaldetailAdjustment", description="Whether it's an adjustment")
    t_ezmaxproduct_help_x: StrictStr = Field(..., alias="tEzmaxproductHelpX", description="The help message of the Ezmaxproduct in the language of the requester")
    __properties = ["pkiEzmaxinvoicingsummaryexternaldetailID", "fkiEzmaxinvoicingsummaryexternalID", "fkiEzmaxproductID", "sEzmaxproductDescriptionX", "dEzmaxinvoicingsummaryexternaldetailCountreal", "dEzmaxinvoicingsummaryexternaldetailSubtotal", "dEzmaxinvoicingsummaryexternaldetailRebate", "dEzmaxinvoicingsummaryexternaldetailTotal", "bEzmaxinvoicingsummaryexternaldetailAdjustment", "tEzmaxproductHelpX"]

    @validator('d_ezmaxinvoicingsummaryexternaldetail_countreal')
    def d_ezmaxinvoicingsummaryexternaldetail_countreal_validate_regular_expression(cls, value):
        """Validates the regular expression"""
        if not re.match(r"^-{0,1}[\d]{1,6}?\.[\d]{2}$", value):
            raise ValueError(r"must validate the regular expression /^-{0,1}[\d]{1,6}?\.[\d]{2}$/")
        return value

    @validator('d_ezmaxinvoicingsummaryexternaldetail_subtotal')
    def d_ezmaxinvoicingsummaryexternaldetail_subtotal_validate_regular_expression(cls, value):
        """Validates the regular expression"""
        if not re.match(r"^-{0,1}[\d]{1,9}?\.[\d]{2}$", value):
            raise ValueError(r"must validate the regular expression /^-{0,1}[\d]{1,9}?\.[\d]{2}$/")
        return value

    @validator('d_ezmaxinvoicingsummaryexternaldetail_rebate')
    def d_ezmaxinvoicingsummaryexternaldetail_rebate_validate_regular_expression(cls, value):
        """Validates the regular expression"""
        if not re.match(r"^-{0,1}[\d]{1,9}?\.[\d]{2}$", value):
            raise ValueError(r"must validate the regular expression /^-{0,1}[\d]{1,9}?\.[\d]{2}$/")
        return value

    @validator('d_ezmaxinvoicingsummaryexternaldetail_total')
    def d_ezmaxinvoicingsummaryexternaldetail_total_validate_regular_expression(cls, value):
        """Validates the regular expression"""
        if not re.match(r"^-{0,1}[\d]{1,9}?\.[\d]{2}$", value):
            raise ValueError(r"must validate the regular expression /^-{0,1}[\d]{1,9}?\.[\d]{2}$/")
        return value

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> EzmaxinvoicingsummaryexternaldetailResponse:
        """Create an instance of EzmaxinvoicingsummaryexternaldetailResponse from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> EzmaxinvoicingsummaryexternaldetailResponse:
        """Create an instance of EzmaxinvoicingsummaryexternaldetailResponse from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return EzmaxinvoicingsummaryexternaldetailResponse.parse_obj(obj)

        _obj = EzmaxinvoicingsummaryexternaldetailResponse.parse_obj({
            "pki_ezmaxinvoicingsummaryexternaldetail_id": obj.get("pkiEzmaxinvoicingsummaryexternaldetailID"),
            "fki_ezmaxinvoicingsummaryexternal_id": obj.get("fkiEzmaxinvoicingsummaryexternalID"),
            "fki_ezmaxproduct_id": obj.get("fkiEzmaxproductID"),
            "s_ezmaxproduct_description_x": obj.get("sEzmaxproductDescriptionX"),
            "d_ezmaxinvoicingsummaryexternaldetail_countreal": obj.get("dEzmaxinvoicingsummaryexternaldetailCountreal"),
            "d_ezmaxinvoicingsummaryexternaldetail_subtotal": obj.get("dEzmaxinvoicingsummaryexternaldetailSubtotal"),
            "d_ezmaxinvoicingsummaryexternaldetail_rebate": obj.get("dEzmaxinvoicingsummaryexternaldetailRebate"),
            "d_ezmaxinvoicingsummaryexternaldetail_total": obj.get("dEzmaxinvoicingsummaryexternaldetailTotal"),
            "b_ezmaxinvoicingsummaryexternaldetail_adjustment": obj.get("bEzmaxinvoicingsummaryexternaldetailAdjustment"),
            "t_ezmaxproduct_help_x": obj.get("tEzmaxproductHelpX")
        })
        return _obj


