# coding: utf-8

"""
    eZmax API Definition (Full)

    This API expose all the functionnalities for the eZmax and eZsign applications.

    The version of the OpenAPI document: 1.2.0
    Contact: support-api@ezmax.ca
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json



from pydantic import BaseModel, Field, StrictBool, conint, constr

class EzmaxinvoicingAutocompleteElementResponse(BaseModel):
    """
    A Ezmaxinvoicing AutocompleteElement Response  # noqa: E501
    """
    yyyymm_ezmaxinvoicing: constr(strict=True, max_length=7) = Field(..., alias="yyyymmEzmaxinvoicing", description="The YYYYMM period of the Ezmaxinvoicing")
    pki_ezmaxinvoicing_id: conint(strict=True, ge=0) = Field(..., alias="pkiEzmaxinvoicingID", description="The unique ID of the Ezmaxinvoicing")
    b_ezmaxinvoicing_isactive: StrictBool = Field(..., alias="bEzmaxinvoicingIsactive", description="Whether the Ezmaxinvoicing is active or not")
    __properties = ["yyyymmEzmaxinvoicing", "pkiEzmaxinvoicingID", "bEzmaxinvoicingIsactive"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> EzmaxinvoicingAutocompleteElementResponse:
        """Create an instance of EzmaxinvoicingAutocompleteElementResponse from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> EzmaxinvoicingAutocompleteElementResponse:
        """Create an instance of EzmaxinvoicingAutocompleteElementResponse from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return EzmaxinvoicingAutocompleteElementResponse.parse_obj(obj)

        _obj = EzmaxinvoicingAutocompleteElementResponse.parse_obj({
            "yyyymm_ezmaxinvoicing": obj.get("yyyymmEzmaxinvoicing"),
            "pki_ezmaxinvoicing_id": obj.get("pkiEzmaxinvoicingID"),
            "b_ezmaxinvoicing_isactive": obj.get("bEzmaxinvoicingIsactive")
        })
        return _obj


