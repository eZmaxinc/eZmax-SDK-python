# coding: utf-8

"""
    eZmax API Definition (Full)

    This API expose all the functionnalities for the eZmax and eZsign applications.

    The version of the OpenAPI document: 1.2.0
    Contact: support-api@ezmax.ca
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictInt, StrictStr, conint
from eZmaxApi.models.field_e_ezsignfolder_step import FieldEEzsignfolderStep
from eZmaxApi.models.field_e_ezsignfoldertype_privacylevel import FieldEEzsignfoldertypePrivacylevel

class EzsignfolderListElement(BaseModel):
    """
    An Ezsignfolder List Element  # noqa: E501
    """
    pki_ezsignfolder_id: conint(strict=True, ge=0) = Field(..., alias="pkiEzsignfolderID", description="The unique ID of the Ezsignfolder")
    fki_ezsignfoldertype_id: conint(strict=True, ge=0) = Field(..., alias="fkiEzsignfoldertypeID", description="The unique ID of the Ezsignfoldertype.")
    e_ezsignfoldertype_privacylevel: FieldEEzsignfoldertypePrivacylevel = Field(..., alias="eEzsignfoldertypePrivacylevel")
    s_ezsignfoldertype_name_x: StrictStr = Field(..., alias="sEzsignfoldertypeNameX", description="The name of the Ezsignfoldertype in the language of the requester")
    s_ezsignfolder_description: StrictStr = Field(..., alias="sEzsignfolderDescription", description="The description of the Ezsignfolder")
    e_ezsignfolder_step: FieldEEzsignfolderStep = Field(..., alias="eEzsignfolderStep")
    dt_created_date: StrictStr = Field(..., alias="dtCreatedDate", description="The date and time at which the object was created")
    dt_ezsignfolder_sentdate: Optional[StrictStr] = Field(None, alias="dtEzsignfolderSentdate", description="The date and time at which the Ezsignfolder was sent the last time.")
    dt_ezsignfolder_duedate: Optional[StrictStr] = Field(None, alias="dtEzsignfolderDuedate", description="The maximum date and time at which the Ezsignfolder can be signed.")
    i_ezsigndocument: StrictInt = Field(..., alias="iEzsigndocument", description="The total number of Ezsigndocument in the folder")
    i_ezsigndocument_edm: StrictInt = Field(..., alias="iEzsigndocumentEdm", description="The total number of Ezsigndocument in the folder that were saved in the edm system")
    i_ezsignsignature: StrictInt = Field(..., alias="iEzsignsignature", description="The total number of signature blocks in all Ezsigndocuments in the folder")
    i_ezsignsignature_signed: StrictInt = Field(..., alias="iEzsignsignatureSigned", description="The total number of already signed signature blocks in all Ezsigndocuments in the folder")
    __properties = ["pkiEzsignfolderID", "fkiEzsignfoldertypeID", "eEzsignfoldertypePrivacylevel", "sEzsignfoldertypeNameX", "sEzsignfolderDescription", "eEzsignfolderStep", "dtCreatedDate", "dtEzsignfolderSentdate", "dtEzsignfolderDuedate", "iEzsigndocument", "iEzsigndocumentEdm", "iEzsignsignature", "iEzsignsignatureSigned"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> EzsignfolderListElement:
        """Create an instance of EzsignfolderListElement from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> EzsignfolderListElement:
        """Create an instance of EzsignfolderListElement from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return EzsignfolderListElement.parse_obj(obj)

        _obj = EzsignfolderListElement.parse_obj({
            "pki_ezsignfolder_id": obj.get("pkiEzsignfolderID"),
            "fki_ezsignfoldertype_id": obj.get("fkiEzsignfoldertypeID"),
            "e_ezsignfoldertype_privacylevel": obj.get("eEzsignfoldertypePrivacylevel"),
            "s_ezsignfoldertype_name_x": obj.get("sEzsignfoldertypeNameX"),
            "s_ezsignfolder_description": obj.get("sEzsignfolderDescription"),
            "e_ezsignfolder_step": obj.get("eEzsignfolderStep"),
            "dt_created_date": obj.get("dtCreatedDate"),
            "dt_ezsignfolder_sentdate": obj.get("dtEzsignfolderSentdate"),
            "dt_ezsignfolder_duedate": obj.get("dtEzsignfolderDuedate"),
            "i_ezsigndocument": obj.get("iEzsigndocument"),
            "i_ezsigndocument_edm": obj.get("iEzsigndocumentEdm"),
            "i_ezsignsignature": obj.get("iEzsignsignature"),
            "i_ezsignsignature_signed": obj.get("iEzsignsignatureSigned")
        })
        return _obj


