# coding: utf-8

"""
    eZmax API Definition (Full)

    This API expose all the functionnalities for the eZmax and eZsign applications.

    The version of the OpenAPI document: 1.2.0
    Contact: support-api@ezmax.ca
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json



from pydantic import BaseModel, Field
from eZmaxApi.models.custom_forms_data_folder_response import CustomFormsDataFolderResponse

class EzsignfolderGetFormsDataV1ResponseMPayload(BaseModel):
    """
    Payload for GET /1/object/ezsignfolder/{pkiEzsigndocument}/getFormsData  # noqa: E501
    """
    obj_forms_data_folder: CustomFormsDataFolderResponse = Field(..., alias="objFormsDataFolder")
    __properties = ["objFormsDataFolder"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> EzsignfolderGetFormsDataV1ResponseMPayload:
        """Create an instance of EzsignfolderGetFormsDataV1ResponseMPayload from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        # override the default output from pydantic by calling `to_dict()` of obj_forms_data_folder
        if self.obj_forms_data_folder:
            _dict['objFormsDataFolder'] = self.obj_forms_data_folder.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> EzsignfolderGetFormsDataV1ResponseMPayload:
        """Create an instance of EzsignfolderGetFormsDataV1ResponseMPayload from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return EzsignfolderGetFormsDataV1ResponseMPayload.parse_obj(obj)

        _obj = EzsignfolderGetFormsDataV1ResponseMPayload.parse_obj({
            "obj_forms_data_folder": CustomFormsDataFolderResponse.from_dict(obj.get("objFormsDataFolder")) if obj.get("objFormsDataFolder") is not None else None
        })
        return _obj


