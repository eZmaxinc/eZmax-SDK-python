# coding: utf-8

"""
    eZmax API Definition (Full)

    This API expose all the functionnalities for the eZmax and eZsign applications.

    The version of the OpenAPI document: 1.2.0
    Contact: support-api@ezmax.ca
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, conint
from eZmaxApi.models.descriptionstatic_response_compound import DescriptionstaticResponseCompound
from eZmaxApi.models.emailstatic_response_compound import EmailstaticResponseCompound
from eZmaxApi.models.field_e_communicationrecipient_objecttype import FieldECommunicationrecipientObjecttype
from eZmaxApi.models.field_e_communicationrecipient_type import FieldECommunicationrecipientType
from eZmaxApi.models.phonestatic_response_compound import PhonestaticResponseCompound

class CommunicationrecipientResponseCompound(BaseModel):
    """
    A Communicationreciient Object  # noqa: E501
    """
    pki_communicationrecipient_id: conint(strict=True, ge=0) = Field(..., alias="pkiCommunicationrecipientID", description="The unique ID of the Communicationrecipient.")
    e_communicationrecipient_objecttype: Optional[FieldECommunicationrecipientObjecttype] = Field(None, alias="eCommunicationrecipientObjecttype")
    fki_agent_id: Optional[conint(strict=True, ge=0)] = Field(None, alias="fkiAgentID", description="The unique ID of the Agent.")
    fki_broker_id: Optional[conint(strict=True, ge=0)] = Field(None, alias="fkiBrokerID", description="The unique ID of the Broker.")
    fki_contact_id: Optional[conint(strict=True, ge=0)] = Field(None, alias="fkiContactID", description="The unique ID of the Contact")
    fki_customer_id: Optional[conint(strict=True, ge=0)] = Field(None, alias="fkiCustomerID", description="The unique ID of the Customer.")
    fki_employee_id: Optional[conint(strict=True, ge=0)] = Field(None, alias="fkiEmployeeID", description="The unique ID of the Employee.")
    fki_ezsignsigner_id: Optional[conint(strict=True, ge=0)] = Field(None, alias="fkiEzsignsignerID", description="The unique ID of the Ezsignsigner")
    fki_franchiseoffice_id: Optional[conint(strict=True, ge=0)] = Field(None, alias="fkiFranchiseofficeID", description="The unique ID of the Franchisereoffice")
    fki_user_id: Optional[conint(strict=True, ge=0)] = Field(None, alias="fkiUserID", description="The unique ID of the User")
    fki_agentincorporation_id: Optional[conint(strict=True, ge=0)] = Field(None, alias="fkiAgentincorporationID", description="The unique ID of the Agentincorporation.")
    fki_assistant_id: Optional[conint(strict=True, ge=0)] = Field(None, alias="fkiAssistantID", description="The unique ID of the Assistant.")
    fki_externalbroker_id: Optional[conint(strict=True, ge=0)] = Field(None, alias="fkiExternalbrokerID", description="The unique ID of the Externalbroker.")
    fki_ezcomagent_id: Optional[conint(strict=True, ge=0)] = Field(None, alias="fkiEzcomagentID", description="The unique ID of the Ezcomagent.")
    fki_notary_id: Optional[conint(strict=True, ge=0)] = Field(None, alias="fkiNotaryID", description="The unique ID of the Notary.")
    fki_rewardmember_id: Optional[conint(strict=True, ge=0)] = Field(None, alias="fkiRewardmemberID", description="The unique ID of the Rewardmember.")
    fki_supplier_id: Optional[conint(strict=True, ge=0)] = Field(None, alias="fkiSupplierID", description="The unique ID of the Supplier.")
    e_communicationrecipient_type: FieldECommunicationrecipientType = Field(..., alias="eCommunicationrecipientType")
    obj_descriptionstatic: DescriptionstaticResponseCompound = Field(..., alias="objDescriptionstatic")
    obj_emailstatic: Optional[EmailstaticResponseCompound] = Field(None, alias="objEmailstatic")
    obj_phonestatic: Optional[PhonestaticResponseCompound] = Field(None, alias="objPhonestatic")
    __properties = ["pkiCommunicationrecipientID", "eCommunicationrecipientObjecttype", "fkiAgentID", "fkiBrokerID", "fkiContactID", "fkiCustomerID", "fkiEmployeeID", "fkiEzsignsignerID", "fkiFranchiseofficeID", "fkiUserID", "fkiAgentincorporationID", "fkiAssistantID", "fkiExternalbrokerID", "fkiEzcomagentID", "fkiNotaryID", "fkiRewardmemberID", "fkiSupplierID", "eCommunicationrecipientType", "objDescriptionstatic", "objEmailstatic", "objPhonestatic"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> CommunicationrecipientResponseCompound:
        """Create an instance of CommunicationrecipientResponseCompound from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        # override the default output from pydantic by calling `to_dict()` of obj_descriptionstatic
        if self.obj_descriptionstatic:
            _dict['objDescriptionstatic'] = self.obj_descriptionstatic.to_dict()
        # override the default output from pydantic by calling `to_dict()` of obj_emailstatic
        if self.obj_emailstatic:
            _dict['objEmailstatic'] = self.obj_emailstatic.to_dict()
        # override the default output from pydantic by calling `to_dict()` of obj_phonestatic
        if self.obj_phonestatic:
            _dict['objPhonestatic'] = self.obj_phonestatic.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> CommunicationrecipientResponseCompound:
        """Create an instance of CommunicationrecipientResponseCompound from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return CommunicationrecipientResponseCompound.parse_obj(obj)

        _obj = CommunicationrecipientResponseCompound.parse_obj({
            "pki_communicationrecipient_id": obj.get("pkiCommunicationrecipientID"),
            "e_communicationrecipient_objecttype": obj.get("eCommunicationrecipientObjecttype"),
            "fki_agent_id": obj.get("fkiAgentID"),
            "fki_broker_id": obj.get("fkiBrokerID"),
            "fki_contact_id": obj.get("fkiContactID"),
            "fki_customer_id": obj.get("fkiCustomerID"),
            "fki_employee_id": obj.get("fkiEmployeeID"),
            "fki_ezsignsigner_id": obj.get("fkiEzsignsignerID"),
            "fki_franchiseoffice_id": obj.get("fkiFranchiseofficeID"),
            "fki_user_id": obj.get("fkiUserID"),
            "fki_agentincorporation_id": obj.get("fkiAgentincorporationID"),
            "fki_assistant_id": obj.get("fkiAssistantID"),
            "fki_externalbroker_id": obj.get("fkiExternalbrokerID"),
            "fki_ezcomagent_id": obj.get("fkiEzcomagentID"),
            "fki_notary_id": obj.get("fkiNotaryID"),
            "fki_rewardmember_id": obj.get("fkiRewardmemberID"),
            "fki_supplier_id": obj.get("fkiSupplierID"),
            "e_communicationrecipient_type": obj.get("eCommunicationrecipientType"),
            "obj_descriptionstatic": DescriptionstaticResponseCompound.from_dict(obj.get("objDescriptionstatic")) if obj.get("objDescriptionstatic") is not None else None,
            "obj_emailstatic": EmailstaticResponseCompound.from_dict(obj.get("objEmailstatic")) if obj.get("objEmailstatic") is not None else None,
            "obj_phonestatic": PhonestaticResponseCompound.from_dict(obj.get("objPhonestatic")) if obj.get("objPhonestatic") is not None else None
        })
        return _obj


