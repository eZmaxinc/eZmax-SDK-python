# coding: utf-8

"""
    eZmax API Definition (Full)

    This API expose all the functionnalities for the eZmax and eZsign applications.

    The version of the OpenAPI document: 1.2.0
    Contact: support-api@ezmax.ca
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictStr, conint
from eZmaxApi.models.field_e_ezsigndocumentlog_type import FieldEEzsigndocumentlogType

class EzsigndocumentlogResponseCompound(BaseModel):
    """
    An Ezsigndocumentlog Object and children to create a complete structure  # noqa: E501
    """
    fki_user_id: Optional[conint(strict=True, ge=0)] = Field(None, alias="fkiUserID", description="The unique ID of the User")
    fki_ezsignsigner_id: Optional[conint(strict=True, ge=0)] = Field(None, alias="fkiEzsignsignerID", description="The unique ID of the Ezsignsigner")
    dt_ezsigndocumentlog_datetime: StrictStr = Field(..., alias="dtEzsigndocumentlogDatetime", description="The date and time at which the event was logged")
    e_ezsigndocumentlog_type: FieldEEzsigndocumentlogType = Field(..., alias="eEzsigndocumentlogType")
    s_ezsigndocumentlog_detail: StrictStr = Field(..., alias="sEzsigndocumentlogDetail", description="The detail of the Ezsigndocumentlog")
    s_ezsigndocumentlog_lastname: StrictStr = Field(..., alias="sEzsigndocumentlogLastname", description="The last name of the User or Ezsignsigner")
    s_ezsigndocumentlog_firstname: StrictStr = Field(..., alias="sEzsigndocumentlogFirstname", description="The first name of the User or Ezsignsigner")
    s_ezsigndocumentlog_ip: StrictStr = Field(..., alias="sEzsigndocumentlogIP", description="Represent an IP address.")
    __properties = ["fkiUserID", "fkiEzsignsignerID", "dtEzsigndocumentlogDatetime", "eEzsigndocumentlogType", "sEzsigndocumentlogDetail", "sEzsigndocumentlogLastname", "sEzsigndocumentlogFirstname", "sEzsigndocumentlogIP"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> EzsigndocumentlogResponseCompound:
        """Create an instance of EzsigndocumentlogResponseCompound from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> EzsigndocumentlogResponseCompound:
        """Create an instance of EzsigndocumentlogResponseCompound from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return EzsigndocumentlogResponseCompound.parse_obj(obj)

        _obj = EzsigndocumentlogResponseCompound.parse_obj({
            "fki_user_id": obj.get("fkiUserID"),
            "fki_ezsignsigner_id": obj.get("fkiEzsignsignerID"),
            "dt_ezsigndocumentlog_datetime": obj.get("dtEzsigndocumentlogDatetime"),
            "e_ezsigndocumentlog_type": obj.get("eEzsigndocumentlogType"),
            "s_ezsigndocumentlog_detail": obj.get("sEzsigndocumentlogDetail"),
            "s_ezsigndocumentlog_lastname": obj.get("sEzsigndocumentlogLastname"),
            "s_ezsigndocumentlog_firstname": obj.get("sEzsigndocumentlogFirstname"),
            "s_ezsigndocumentlog_ip": obj.get("sEzsigndocumentlogIP")
        })
        return _obj


