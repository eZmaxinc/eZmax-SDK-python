# coding: utf-8

"""
    eZmax API Definition (Full)

    This API expose all the functionnalities for the eZmax and eZsign applications.

    The version of the OpenAPI document: 1.2.0
    Contact: support-api@ezmax.ca
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json



from pydantic import BaseModel, Field, StrictBool, StrictStr, conint

class BillingentityinternalAutocompleteElementResponse(BaseModel):
    """
    A Billingentityinternal AutocompleteElement Response  # noqa: E501
    """
    pki_billingentityinternal_id: conint(strict=True, ge=0) = Field(..., alias="pkiBillingentityinternalID", description="The unique ID of the Billingentityinternal.")
    s_billingentityinternal_description_x: StrictStr = Field(..., alias="sBillingentityinternalDescriptionX", description="The description of the Billingentityinternal in the language of the requester")
    b_billingentityinternal_isactive: StrictBool = Field(..., alias="bBillingentityinternalIsactive", description="Whether the Billingentityinternal is active or not")
    __properties = ["pkiBillingentityinternalID", "sBillingentityinternalDescriptionX", "bBillingentityinternalIsactive"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> BillingentityinternalAutocompleteElementResponse:
        """Create an instance of BillingentityinternalAutocompleteElementResponse from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> BillingentityinternalAutocompleteElementResponse:
        """Create an instance of BillingentityinternalAutocompleteElementResponse from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return BillingentityinternalAutocompleteElementResponse.parse_obj(obj)

        _obj = BillingentityinternalAutocompleteElementResponse.parse_obj({
            "pki_billingentityinternal_id": obj.get("pkiBillingentityinternalID"),
            "s_billingentityinternal_description_x": obj.get("sBillingentityinternalDescriptionX"),
            "b_billingentityinternal_isactive": obj.get("bBillingentityinternalIsactive")
        })
        return _obj


