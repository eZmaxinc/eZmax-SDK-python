# coding: utf-8

"""
    eZmax API Definition (Full)

    This API expose all the functionnalities for the eZmax and eZsign applications.

    The version of the OpenAPI document: 1.2.1
    Contact: support-api@ezmax.ca
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import ConfigDict, Field
from typing import Any, ClassVar, Dict, List, Optional
from typing_extensions import Annotated
from eZmaxApi.models.ezsignfoldertype_request_v3 import EzsignfoldertypeRequestV3
from eZmaxApi.models.field_e_ezsignfoldertype_completion import FieldEEzsignfoldertypeCompletion
from eZmaxApi.models.field_e_ezsignfoldertype_disposal import FieldEEzsignfoldertypeDisposal
from eZmaxApi.models.field_e_ezsignfoldertype_documentdependency import FieldEEzsignfoldertypeDocumentdependency
from eZmaxApi.models.field_e_ezsignfoldertype_pdfanoncompliantaction import FieldEEzsignfoldertypePdfanoncompliantaction
from eZmaxApi.models.field_e_ezsignfoldertype_pdfarequirement import FieldEEzsignfoldertypePdfarequirement
from eZmaxApi.models.field_e_ezsignfoldertype_privacylevel import FieldEEzsignfoldertypePrivacylevel
from eZmaxApi.models.field_e_ezsignfoldertype_signeraccess import FieldEEzsignfoldertypeSigneraccess
from eZmaxApi.models.multilingual_ezsignfoldertype_name import MultilingualEzsignfoldertypeName
from typing import Optional, Set
from typing_extensions import Self

class EzsignfoldertypeRequestCompoundV3(EzsignfoldertypeRequestV3):
    """
    A Ezsignfoldertype Object and children
    """ # noqa: E501
    a_fki_user_id_signed: Optional[List[Annotated[int, Field(strict=True, ge=0)]]] = Field(default=None, alias="a_fkiUserIDSigned")
    a_fki_user_id_summary: Optional[List[Annotated[int, Field(strict=True, ge=0)]]] = Field(default=None, alias="a_fkiUserIDSummary")
    __properties: ClassVar[List[str]] = ["pkiEzsignfoldertypeID", "objEzsignfoldertypeName", "fkiBrandingID", "fkiBillingentityinternalID", "fkiEzsigntsarequirementID", "fkiFontIDAnnotation", "fkiFontIDFormfield", "fkiFontIDSignature", "fkiPdfalevelIDConvert", "a_fkiPdfalevelID", "a_fkiUserlogintypeID", "a_fkiUsergroupIDAll", "a_fkiUsergroupIDRestricted", "a_fkiUsergroupIDTemplate", "eEzsignfoldertypeDocumentdependency", "sEmailAddressSigned", "sEmailAddressSummary", "eEzsignfoldertypePdfarequirement", "eEzsignfoldertypePdfanoncompliantaction", "eEzsignfoldertypePrivacylevel", "iEzsignfoldertypeFontsizeannotation", "iEzsignfoldertypeFontsizeformfield", "iEzsignfoldertypeSendreminderfirstdays", "iEzsignfoldertypeSendreminderotherdays", "iEzsignfoldertypeArchivaldays", "eEzsignfoldertypeDisposal", "eEzsignfoldertypeCompletion", "iEzsignfoldertypeDisposaldays", "iEzsignfoldertypeDeadlinedays", "bEzsignfoldertypePrematurelyendautomatically", "iEzsignfoldertypePrematurelyendautomaticallydays", "bEzsignfoldertypeAutomaticsignature", "bEzsignfoldertypeDelegate", "bEzsignfoldertypeDiscussion", "bEzsignfoldertypeLogrecipientinproof", "bEzsignfoldertypeReassignezsignsigner", "bEzsignfoldertypeReassignuser", "bEzsignfoldertypeReassigngroup", "bEzsignfoldertypeSendsignedtoezsignsigner", "bEzsignfoldertypeSendsignedtouser", "bEzsignfoldertypeSendattachmentezsignsigner", "bEzsignfoldertypeSendproofezsignsigner", "bEzsignfoldertypeSendattachmentuser", "bEzsignfoldertypeSendproofuser", "bEzsignfoldertypeSendproofemail", "bEzsignfoldertypeAllowdownloadattachmentezsignsigner", "bEzsignfoldertypeAllowdownloadproofezsignsigner", "bEzsignfoldertypeSendproofreceivealldocument", "bEzsignfoldertypeSendsignedtodocumentowner", "bEzsignfoldertypeSendsignedtofolderowner", "bEzsignfoldertypeSendsignedtofullgroup", "bEzsignfoldertypeSendsignedtolimitedgroup", "bEzsignfoldertypeSendsignedtocolleague", "bEzsignfoldertypeSendsummarytodocumentowner", "bEzsignfoldertypeSendsummarytofolderowner", "bEzsignfoldertypeSendsummarytofullgroup", "bEzsignfoldertypeSendsummarytolimitedgroup", "bEzsignfoldertypeSendsummarytocolleague", "eEzsignfoldertypeSigneraccess", "bEzsignfoldertypeIsactive", "a_fkiUserIDSigned", "a_fkiUserIDSummary"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of EzsignfoldertypeRequestCompoundV3 from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of obj_ezsignfoldertype_name
        if self.obj_ezsignfoldertype_name:
            _dict['objEzsignfoldertypeName'] = self.obj_ezsignfoldertype_name.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of EzsignfoldertypeRequestCompoundV3 from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "pkiEzsignfoldertypeID": obj.get("pkiEzsignfoldertypeID"),
            "objEzsignfoldertypeName": MultilingualEzsignfoldertypeName.from_dict(obj["objEzsignfoldertypeName"]) if obj.get("objEzsignfoldertypeName") is not None else None,
            "fkiBrandingID": obj.get("fkiBrandingID"),
            "fkiBillingentityinternalID": obj.get("fkiBillingentityinternalID"),
            "fkiEzsigntsarequirementID": obj.get("fkiEzsigntsarequirementID"),
            "fkiFontIDAnnotation": obj.get("fkiFontIDAnnotation"),
            "fkiFontIDFormfield": obj.get("fkiFontIDFormfield"),
            "fkiFontIDSignature": obj.get("fkiFontIDSignature"),
            "fkiPdfalevelIDConvert": obj.get("fkiPdfalevelIDConvert"),
            "a_fkiPdfalevelID": obj.get("a_fkiPdfalevelID"),
            "a_fkiUserlogintypeID": obj.get("a_fkiUserlogintypeID"),
            "a_fkiUsergroupIDAll": obj.get("a_fkiUsergroupIDAll"),
            "a_fkiUsergroupIDRestricted": obj.get("a_fkiUsergroupIDRestricted"),
            "a_fkiUsergroupIDTemplate": obj.get("a_fkiUsergroupIDTemplate"),
            "eEzsignfoldertypeDocumentdependency": obj.get("eEzsignfoldertypeDocumentdependency"),
            "sEmailAddressSigned": obj.get("sEmailAddressSigned"),
            "sEmailAddressSummary": obj.get("sEmailAddressSummary"),
            "eEzsignfoldertypePdfarequirement": obj.get("eEzsignfoldertypePdfarequirement"),
            "eEzsignfoldertypePdfanoncompliantaction": obj.get("eEzsignfoldertypePdfanoncompliantaction"),
            "eEzsignfoldertypePrivacylevel": obj.get("eEzsignfoldertypePrivacylevel"),
            "iEzsignfoldertypeFontsizeannotation": obj.get("iEzsignfoldertypeFontsizeannotation"),
            "iEzsignfoldertypeFontsizeformfield": obj.get("iEzsignfoldertypeFontsizeformfield"),
            "iEzsignfoldertypeSendreminderfirstdays": obj.get("iEzsignfoldertypeSendreminderfirstdays"),
            "iEzsignfoldertypeSendreminderotherdays": obj.get("iEzsignfoldertypeSendreminderotherdays"),
            "iEzsignfoldertypeArchivaldays": obj.get("iEzsignfoldertypeArchivaldays"),
            "eEzsignfoldertypeDisposal": obj.get("eEzsignfoldertypeDisposal"),
            "eEzsignfoldertypeCompletion": obj.get("eEzsignfoldertypeCompletion"),
            "iEzsignfoldertypeDisposaldays": obj.get("iEzsignfoldertypeDisposaldays"),
            "iEzsignfoldertypeDeadlinedays": obj.get("iEzsignfoldertypeDeadlinedays"),
            "bEzsignfoldertypePrematurelyendautomatically": obj.get("bEzsignfoldertypePrematurelyendautomatically"),
            "iEzsignfoldertypePrematurelyendautomaticallydays": obj.get("iEzsignfoldertypePrematurelyendautomaticallydays"),
            "bEzsignfoldertypeAutomaticsignature": obj.get("bEzsignfoldertypeAutomaticsignature"),
            "bEzsignfoldertypeDelegate": obj.get("bEzsignfoldertypeDelegate"),
            "bEzsignfoldertypeDiscussion": obj.get("bEzsignfoldertypeDiscussion"),
            "bEzsignfoldertypeLogrecipientinproof": obj.get("bEzsignfoldertypeLogrecipientinproof"),
            "bEzsignfoldertypeReassignezsignsigner": obj.get("bEzsignfoldertypeReassignezsignsigner"),
            "bEzsignfoldertypeReassignuser": obj.get("bEzsignfoldertypeReassignuser"),
            "bEzsignfoldertypeReassigngroup": obj.get("bEzsignfoldertypeReassigngroup"),
            "bEzsignfoldertypeSendsignedtoezsignsigner": obj.get("bEzsignfoldertypeSendsignedtoezsignsigner"),
            "bEzsignfoldertypeSendsignedtouser": obj.get("bEzsignfoldertypeSendsignedtouser"),
            "bEzsignfoldertypeSendattachmentezsignsigner": obj.get("bEzsignfoldertypeSendattachmentezsignsigner"),
            "bEzsignfoldertypeSendproofezsignsigner": obj.get("bEzsignfoldertypeSendproofezsignsigner"),
            "bEzsignfoldertypeSendattachmentuser": obj.get("bEzsignfoldertypeSendattachmentuser"),
            "bEzsignfoldertypeSendproofuser": obj.get("bEzsignfoldertypeSendproofuser"),
            "bEzsignfoldertypeSendproofemail": obj.get("bEzsignfoldertypeSendproofemail"),
            "bEzsignfoldertypeAllowdownloadattachmentezsignsigner": obj.get("bEzsignfoldertypeAllowdownloadattachmentezsignsigner"),
            "bEzsignfoldertypeAllowdownloadproofezsignsigner": obj.get("bEzsignfoldertypeAllowdownloadproofezsignsigner"),
            "bEzsignfoldertypeSendproofreceivealldocument": obj.get("bEzsignfoldertypeSendproofreceivealldocument"),
            "bEzsignfoldertypeSendsignedtodocumentowner": obj.get("bEzsignfoldertypeSendsignedtodocumentowner"),
            "bEzsignfoldertypeSendsignedtofolderowner": obj.get("bEzsignfoldertypeSendsignedtofolderowner"),
            "bEzsignfoldertypeSendsignedtofullgroup": obj.get("bEzsignfoldertypeSendsignedtofullgroup"),
            "bEzsignfoldertypeSendsignedtolimitedgroup": obj.get("bEzsignfoldertypeSendsignedtolimitedgroup"),
            "bEzsignfoldertypeSendsignedtocolleague": obj.get("bEzsignfoldertypeSendsignedtocolleague"),
            "bEzsignfoldertypeSendsummarytodocumentowner": obj.get("bEzsignfoldertypeSendsummarytodocumentowner"),
            "bEzsignfoldertypeSendsummarytofolderowner": obj.get("bEzsignfoldertypeSendsummarytofolderowner"),
            "bEzsignfoldertypeSendsummarytofullgroup": obj.get("bEzsignfoldertypeSendsummarytofullgroup"),
            "bEzsignfoldertypeSendsummarytolimitedgroup": obj.get("bEzsignfoldertypeSendsummarytolimitedgroup"),
            "bEzsignfoldertypeSendsummarytocolleague": obj.get("bEzsignfoldertypeSendsummarytocolleague"),
            "eEzsignfoldertypeSigneraccess": obj.get("eEzsignfoldertypeSigneraccess"),
            "bEzsignfoldertypeIsactive": obj.get("bEzsignfoldertypeIsactive"),
            "a_fkiUserIDSigned": obj.get("a_fkiUserIDSigned"),
            "a_fkiUserIDSummary": obj.get("a_fkiUserIDSummary")
        })
        return _obj


