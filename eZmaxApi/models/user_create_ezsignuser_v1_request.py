# coding: utf-8

"""
    eZmax API Definition (Full)

    This API expose all the functionnalities for the eZmax and eZsign applications.

    The version of the OpenAPI document: 1.2.0
    Contact: support-api@ezmax.ca
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictStr, conint

class UserCreateEzsignuserV1Request(BaseModel):
    """
    Request for POST /1/module/user/createEzsignuser  # noqa: E501
    """
    fki_language_id: conint(strict=True, le=2, ge=1) = Field(..., alias="fkiLanguageID", description="The unique ID of the Language.  Valid values:  |Value|Description| |-|-| |1|French| |2|English|")
    s_user_firstname: StrictStr = Field(..., alias="sUserFirstname", description="The first name of the user")
    s_user_lastname: StrictStr = Field(..., alias="sUserLastname", description="The last name of the user")
    s_email_address: StrictStr = Field(..., alias="sEmailAddress", description="The email address.")
    s_phone_region: StrictStr = Field(..., alias="sPhoneRegion", description="The region of the phone number. (For a North America Number only)  The region is the \"514\" section in this sample phone number: (514) 990-1516 x123")
    s_phone_exchange: StrictStr = Field(..., alias="sPhoneExchange", description="The exchange of the phone number. (For a North America Number only)  The exchange is the \"990\" section in this sample phone number: (514) 990-1516 x123")
    s_phone_number: StrictStr = Field(..., alias="sPhoneNumber", description="The number of the phone number. (For a North America Number only)  The number is the \"1516\" section in this sample phone number: (514) 990-1516 x123")
    s_phone_extension: Optional[StrictStr] = Field(None, alias="sPhoneExtension", description="The extension of the phone number.  The extension is the \"123\" section in this sample phone number: (514) 990-1516 x123.  It can also be used with international phone numbers")
    __properties = ["fkiLanguageID", "sUserFirstname", "sUserLastname", "sEmailAddress", "sPhoneRegion", "sPhoneExchange", "sPhoneNumber", "sPhoneExtension"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> UserCreateEzsignuserV1Request:
        """Create an instance of UserCreateEzsignuserV1Request from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> UserCreateEzsignuserV1Request:
        """Create an instance of UserCreateEzsignuserV1Request from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return UserCreateEzsignuserV1Request.parse_obj(obj)

        _obj = UserCreateEzsignuserV1Request.parse_obj({
            "fki_language_id": obj.get("fkiLanguageID"),
            "s_user_firstname": obj.get("sUserFirstname"),
            "s_user_lastname": obj.get("sUserLastname"),
            "s_email_address": obj.get("sEmailAddress"),
            "s_phone_region": obj.get("sPhoneRegion"),
            "s_phone_exchange": obj.get("sPhoneExchange"),
            "s_phone_number": obj.get("sPhoneNumber"),
            "s_phone_extension": obj.get("sPhoneExtension")
        })
        return _obj


