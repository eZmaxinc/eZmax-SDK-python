# coding: utf-8

"""
    eZmax API Definition (Full)

    This API expose all the functionnalities for the eZmax and eZsign applications.

    The version of the OpenAPI document: 1.2.0
    Contact: support-api@ezmax.ca
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json



from pydantic import BaseModel, Field, StrictBool, StrictStr, conint

class CustomEzmaxinvoicingEzsignfolderResponse(BaseModel):
    """
    An EzmaxinvoicingEzsignfolder object containing information about the Ezmaxinvoicing for an Ezsignfolder  # noqa: E501
    """
    fki_ezsignfolder_id: conint(strict=True, ge=0) = Field(..., alias="fkiEzsignfolderID", description="The unique ID of the Ezsignfolder")
    s_ezsignfolder_description: StrictStr = Field(..., alias="sEzsignfolderDescription", description="The description of the Ezsignfolder")
    b_ezsigntsarequirement_billable: StrictBool = Field(..., alias="bEzsigntsarequirementBillable", description="Whether the TSA requirement is billable or not")
    b_ezsignfolder_mfaused: StrictBool = Field(..., alias="bEzsignfolderMfaused", description="Whether the MFA was used or not for the Ezsignfolder")
    b_ezsignfolder_paymentused: StrictBool = Field(..., alias="bEzsignfolderPaymentused", description="Whether there was a signature is of type payment")
    b_ezsignfolder_allowed: StrictBool = Field(..., alias="bEzsignfolderAllowed", description="Whether you have access to the Ezsignfolder or not")
    __properties = ["fkiEzsignfolderID", "sEzsignfolderDescription", "bEzsigntsarequirementBillable", "bEzsignfolderMfaused", "bEzsignfolderPaymentused", "bEzsignfolderAllowed"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> CustomEzmaxinvoicingEzsignfolderResponse:
        """Create an instance of CustomEzmaxinvoicingEzsignfolderResponse from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> CustomEzmaxinvoicingEzsignfolderResponse:
        """Create an instance of CustomEzmaxinvoicingEzsignfolderResponse from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return CustomEzmaxinvoicingEzsignfolderResponse.parse_obj(obj)

        _obj = CustomEzmaxinvoicingEzsignfolderResponse.parse_obj({
            "fki_ezsignfolder_id": obj.get("fkiEzsignfolderID"),
            "s_ezsignfolder_description": obj.get("sEzsignfolderDescription"),
            "b_ezsigntsarequirement_billable": obj.get("bEzsigntsarequirementBillable"),
            "b_ezsignfolder_mfaused": obj.get("bEzsignfolderMfaused"),
            "b_ezsignfolder_paymentused": obj.get("bEzsignfolderPaymentused"),
            "b_ezsignfolder_allowed": obj.get("bEzsignfolderAllowed")
        })
        return _obj


