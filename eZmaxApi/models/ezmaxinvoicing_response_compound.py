# coding: utf-8

"""
    eZmax API Definition (Full)

    This API expose all the functionnalities for the eZmax and eZsign applications.

    The version of the OpenAPI document: 1.2.1
    Contact: support-api@ezmax.ca
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import ConfigDict, Field
from typing import Any, ClassVar, Dict, List
from eZmaxApi.models.common_audit import CommonAudit
from eZmaxApi.models.custom_ezmaxpricing_response import CustomEzmaxpricingResponse
from eZmaxApi.models.ezmaxinvoicing_response import EzmaxinvoicingResponse
from eZmaxApi.models.ezmaxinvoicingagent_response_compound import EzmaxinvoicingagentResponseCompound
from eZmaxApi.models.ezmaxinvoicingcontract_response_compound import EzmaxinvoicingcontractResponseCompound
from eZmaxApi.models.ezmaxinvoicingsummaryexternal_response_compound import EzmaxinvoicingsummaryexternalResponseCompound
from eZmaxApi.models.ezmaxinvoicingsummaryglobal_response_compound import EzmaxinvoicingsummaryglobalResponseCompound
from eZmaxApi.models.ezmaxinvoicingsummaryinternal_response_compound import EzmaxinvoicingsummaryinternalResponseCompound
from eZmaxApi.models.ezmaxinvoicinguser_response_compound import EzmaxinvoicinguserResponseCompound
from eZmaxApi.models.field_e_ezmaxinvoicing_paymenttype import FieldEEzmaxinvoicingPaymenttype
from typing import Optional, Set
from typing_extensions import Self

class EzmaxinvoicingResponseCompound(EzmaxinvoicingResponse):
    """
    A Ezmaxinvoicing Object
    """ # noqa: E501
    obj_ezmaxinvoicingcontract: EzmaxinvoicingcontractResponseCompound = Field(alias="objEzmaxinvoicingcontract")
    obj_ezmaxpricing: CustomEzmaxpricingResponse = Field(alias="objEzmaxpricing")
    a_obj_ezmaxinvoicingsummaryglobal: List[EzmaxinvoicingsummaryglobalResponseCompound] = Field(alias="a_objEzmaxinvoicingsummaryglobal")
    a_obj_ezmaxinvoicingsummaryexternal: List[EzmaxinvoicingsummaryexternalResponseCompound] = Field(alias="a_objEzmaxinvoicingsummaryexternal")
    a_obj_ezmaxinvoicingsummaryinternal: List[EzmaxinvoicingsummaryinternalResponseCompound] = Field(alias="a_objEzmaxinvoicingsummaryinternal")
    a_obj_ezmaxinvoicingagent: List[EzmaxinvoicingagentResponseCompound] = Field(alias="a_objEzmaxinvoicingagent")
    a_obj_ezmaxinvoicinguser: List[EzmaxinvoicinguserResponseCompound] = Field(alias="a_objEzmaxinvoicinguser")
    a_obj_ezmaxinvoicingezsignfolder: List[object] = Field(alias="a_objEzmaxinvoicingezsignfolder")
    a_obj_ezmaxinvoicingezsigndocument: List[object] = Field(alias="a_objEzmaxinvoicingezsigndocument")
    __properties: ClassVar[List[str]] = ["pkiEzmaxinvoicingID", "fkiEzmaxinvoicingcontractID", "fkiEzmaxpricingID", "fkiSystemconfigurationtypeID", "sSystemconfigurationtypeDescriptionX", "yyyymmEzmaxinvoicing", "iEzmaxinvoicingDays", "eEzmaxinvoicingPaymenttype", "dEzmaxinvoicingRebatepaymenttype", "iEzmaxinvoicingContractlength", "dEzmaxinvoicingRebatecontractlength", "bEzmaxinvoicingRebateEzsignallagents", "objAudit", "objEzmaxinvoicingcontract", "objEzmaxpricing", "a_objEzmaxinvoicingsummaryglobal", "a_objEzmaxinvoicingsummaryexternal", "a_objEzmaxinvoicingsummaryinternal", "a_objEzmaxinvoicingagent", "a_objEzmaxinvoicinguser", "a_objEzmaxinvoicingezsignfolder", "a_objEzmaxinvoicingezsigndocument"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of EzmaxinvoicingResponseCompound from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of obj_audit
        if self.obj_audit:
            _dict['objAudit'] = self.obj_audit.to_dict()
        # override the default output from pydantic by calling `to_dict()` of obj_ezmaxinvoicingcontract
        if self.obj_ezmaxinvoicingcontract:
            _dict['objEzmaxinvoicingcontract'] = self.obj_ezmaxinvoicingcontract.to_dict()
        # override the default output from pydantic by calling `to_dict()` of obj_ezmaxpricing
        if self.obj_ezmaxpricing:
            _dict['objEzmaxpricing'] = self.obj_ezmaxpricing.to_dict()
        # override the default output from pydantic by calling `to_dict()` of each item in a_obj_ezmaxinvoicingsummaryglobal (list)
        _items = []
        if self.a_obj_ezmaxinvoicingsummaryglobal:
            for _item_a_obj_ezmaxinvoicingsummaryglobal in self.a_obj_ezmaxinvoicingsummaryglobal:
                if _item_a_obj_ezmaxinvoicingsummaryglobal:
                    _items.append(_item_a_obj_ezmaxinvoicingsummaryglobal.to_dict())
            _dict['a_objEzmaxinvoicingsummaryglobal'] = _items
        # override the default output from pydantic by calling `to_dict()` of each item in a_obj_ezmaxinvoicingsummaryexternal (list)
        _items = []
        if self.a_obj_ezmaxinvoicingsummaryexternal:
            for _item_a_obj_ezmaxinvoicingsummaryexternal in self.a_obj_ezmaxinvoicingsummaryexternal:
                if _item_a_obj_ezmaxinvoicingsummaryexternal:
                    _items.append(_item_a_obj_ezmaxinvoicingsummaryexternal.to_dict())
            _dict['a_objEzmaxinvoicingsummaryexternal'] = _items
        # override the default output from pydantic by calling `to_dict()` of each item in a_obj_ezmaxinvoicingsummaryinternal (list)
        _items = []
        if self.a_obj_ezmaxinvoicingsummaryinternal:
            for _item_a_obj_ezmaxinvoicingsummaryinternal in self.a_obj_ezmaxinvoicingsummaryinternal:
                if _item_a_obj_ezmaxinvoicingsummaryinternal:
                    _items.append(_item_a_obj_ezmaxinvoicingsummaryinternal.to_dict())
            _dict['a_objEzmaxinvoicingsummaryinternal'] = _items
        # override the default output from pydantic by calling `to_dict()` of each item in a_obj_ezmaxinvoicingagent (list)
        _items = []
        if self.a_obj_ezmaxinvoicingagent:
            for _item_a_obj_ezmaxinvoicingagent in self.a_obj_ezmaxinvoicingagent:
                if _item_a_obj_ezmaxinvoicingagent:
                    _items.append(_item_a_obj_ezmaxinvoicingagent.to_dict())
            _dict['a_objEzmaxinvoicingagent'] = _items
        # override the default output from pydantic by calling `to_dict()` of each item in a_obj_ezmaxinvoicinguser (list)
        _items = []
        if self.a_obj_ezmaxinvoicinguser:
            for _item_a_obj_ezmaxinvoicinguser in self.a_obj_ezmaxinvoicinguser:
                if _item_a_obj_ezmaxinvoicinguser:
                    _items.append(_item_a_obj_ezmaxinvoicinguser.to_dict())
            _dict['a_objEzmaxinvoicinguser'] = _items
        return _dict

    @classmethod
    def from_dict(cls, obj: Dict[str, Any]) -> Optional[Self]:
        """Create an instance of EzmaxinvoicingResponseCompound from a dict"""


