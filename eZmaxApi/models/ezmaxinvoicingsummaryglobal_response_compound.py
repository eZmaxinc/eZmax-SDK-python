# coding: utf-8

"""
    eZmax API Definition (Full)

    This API expose all the functionnalities for the eZmax and eZsign applications.

    The version of the OpenAPI document: 1.2.1
    Contact: support-api@ezmax.ca
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import ConfigDict, Field
from typing import Any, ClassVar, Dict, List, Optional
from eZmaxApi.models.ezmaxinvoicingcommission_response_compound import EzmaxinvoicingcommissionResponseCompound
from eZmaxApi.models.ezmaxinvoicingsummaryglobal_response import EzmaxinvoicingsummaryglobalResponse
from typing import Optional, Set
from typing_extensions import Self

class EzmaxinvoicingsummaryglobalResponseCompound(EzmaxinvoicingsummaryglobalResponse):
    """
    A Ezmaxinvoicingsummaryglobal Object
    """ # noqa: E501
    a_obj_ezmaxinvoicingcommission: Optional[List[EzmaxinvoicingcommissionResponseCompound]] = Field(default=None, alias="a_objEzmaxinvoicingcommission")
    __properties: ClassVar[List[str]] = ["pkiEzmaxinvoicingsummaryglobalID", "fkiEzmaxinvoicingID", "fkiEzmaxproductID", "sEzmaxproductDescriptionX", "dtEzmaxinvoicingsummaryglobalStart", "dtEzmaxinvoicingsummaryglobalEnd", "iEzmaxinvoicingsummaryglobalDays", "dEzmaxinvoicingsummaryglobalCountreal", "dEzmaxinvoicingsummaryglobalCountbilled", "dEzmaxinvoicingsummaryglobalSubtotal", "dEzmaxinvoicingsummaryglobalRebateamount", "dEzmaxinvoicingsummaryglobalRebatepercent", "dEzmaxinvoicingsummaryglobalRebatetotal", "dEzmaxinvoicingsummaryglobalTotal", "dEzmaxinvoicingsummaryglobalRepresentative", "dEzmaxinvoicingsummaryglobalPartner", "dEzmaxinvoicingsummaryglobalNet", "bEzmaxinvoicingsummaryglobalAdjustment", "tEzmaxproductHelpX", "a_objEzmaxinvoicingcommission"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of EzmaxinvoicingsummaryglobalResponseCompound from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of each item in a_obj_ezmaxinvoicingcommission (list)
        _items = []
        if self.a_obj_ezmaxinvoicingcommission:
            for _item_a_obj_ezmaxinvoicingcommission in self.a_obj_ezmaxinvoicingcommission:
                if _item_a_obj_ezmaxinvoicingcommission:
                    _items.append(_item_a_obj_ezmaxinvoicingcommission.to_dict())
            _dict['a_objEzmaxinvoicingcommission'] = _items
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of EzmaxinvoicingsummaryglobalResponseCompound from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "pkiEzmaxinvoicingsummaryglobalID": obj.get("pkiEzmaxinvoicingsummaryglobalID"),
            "fkiEzmaxinvoicingID": obj.get("fkiEzmaxinvoicingID"),
            "fkiEzmaxproductID": obj.get("fkiEzmaxproductID"),
            "sEzmaxproductDescriptionX": obj.get("sEzmaxproductDescriptionX"),
            "dtEzmaxinvoicingsummaryglobalStart": obj.get("dtEzmaxinvoicingsummaryglobalStart"),
            "dtEzmaxinvoicingsummaryglobalEnd": obj.get("dtEzmaxinvoicingsummaryglobalEnd"),
            "iEzmaxinvoicingsummaryglobalDays": obj.get("iEzmaxinvoicingsummaryglobalDays"),
            "dEzmaxinvoicingsummaryglobalCountreal": obj.get("dEzmaxinvoicingsummaryglobalCountreal"),
            "dEzmaxinvoicingsummaryglobalCountbilled": obj.get("dEzmaxinvoicingsummaryglobalCountbilled"),
            "dEzmaxinvoicingsummaryglobalSubtotal": obj.get("dEzmaxinvoicingsummaryglobalSubtotal"),
            "dEzmaxinvoicingsummaryglobalRebateamount": obj.get("dEzmaxinvoicingsummaryglobalRebateamount"),
            "dEzmaxinvoicingsummaryglobalRebatepercent": obj.get("dEzmaxinvoicingsummaryglobalRebatepercent"),
            "dEzmaxinvoicingsummaryglobalRebatetotal": obj.get("dEzmaxinvoicingsummaryglobalRebatetotal"),
            "dEzmaxinvoicingsummaryglobalTotal": obj.get("dEzmaxinvoicingsummaryglobalTotal"),
            "dEzmaxinvoicingsummaryglobalRepresentative": obj.get("dEzmaxinvoicingsummaryglobalRepresentative"),
            "dEzmaxinvoicingsummaryglobalPartner": obj.get("dEzmaxinvoicingsummaryglobalPartner"),
            "dEzmaxinvoicingsummaryglobalNet": obj.get("dEzmaxinvoicingsummaryglobalNet"),
            "bEzmaxinvoicingsummaryglobalAdjustment": obj.get("bEzmaxinvoicingsummaryglobalAdjustment"),
            "tEzmaxproductHelpX": obj.get("tEzmaxproductHelpX"),
            "a_objEzmaxinvoicingcommission": [EzmaxinvoicingcommissionResponseCompound.from_dict(_item) for _item in obj["a_objEzmaxinvoicingcommission"]] if obj.get("a_objEzmaxinvoicingcommission") is not None else None
        })
        return _obj


