# coding: utf-8

"""
    eZmax API Definition (Full)

    This API expose all the functionnalities for the eZmax and eZsign applications.

    The version of the OpenAPI document: 1.2.0
    Contact: support-api@ezmax.ca
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import List
from pydantic import BaseModel, Field, StrictStr, conlist

class UserCreateEzsignuserV1ResponseMPayload(BaseModel):
    """
    Payload for POST /1/module/user/createEzsignuser  # noqa: E501
    """
    a_s_email_address_success: conlist(StrictStr) = Field(..., alias="a_sEmailAddressSuccess", description="An array of email addresses that succeeded.")
    a_s_email_address_failure: conlist(StrictStr) = Field(..., alias="a_sEmailAddressFailure", description="An array of email addresses that failed.")
    __properties = ["a_sEmailAddressSuccess", "a_sEmailAddressFailure"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> UserCreateEzsignuserV1ResponseMPayload:
        """Create an instance of UserCreateEzsignuserV1ResponseMPayload from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> UserCreateEzsignuserV1ResponseMPayload:
        """Create an instance of UserCreateEzsignuserV1ResponseMPayload from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return UserCreateEzsignuserV1ResponseMPayload.parse_obj(obj)

        _obj = UserCreateEzsignuserV1ResponseMPayload.parse_obj({
            "a_s_email_address_success": obj.get("a_sEmailAddressSuccess"),
            "a_s_email_address_failure": obj.get("a_sEmailAddressFailure")
        })
        return _obj


