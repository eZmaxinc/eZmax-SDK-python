# coding: utf-8

"""
    eZmax API Definition (Full)

    This API expose all the functionnalities for the eZmax and eZsign applications.

    The version of the OpenAPI document: 1.2.0
    Contact: support-api@ezmax.ca
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import List
from pydantic import BaseModel, Field, StrictStr, conint, conlist
from eZmaxApi.models.common_audit import CommonAudit
from eZmaxApi.models.custom_ezsignfoldertransmission_response import CustomEzsignfoldertransmissionResponse

class EzsignbulksendtransmissionResponseCompound(BaseModel):
    """
    An Ezsignbulksendtransmission Object and children to create a complete structure  # noqa: E501
    """
    pki_ezsignbulksendtransmission_id: conint(strict=True, ge=0) = Field(..., alias="pkiEzsignbulksendtransmissionID", description="The unique ID of the Ezsignbulksendtransmission")
    fki_ezsignbulksend_id: conint(strict=True, ge=0) = Field(..., alias="fkiEzsignbulksendID", description="The unique ID of the Ezsignbulksend")
    s_ezsignbulksendtransmission_description: StrictStr = Field(..., alias="sEzsignbulksendtransmissionDescription", description="The description of the Ezsignbulksendtransmission")
    i_ezsignbulksendtransmission_errors: conint(strict=True, ge=0) = Field(..., alias="iEzsignbulksendtransmissionErrors", description="The number of errors during the Ezsignbulksendtransmission")
    obj_audit: CommonAudit = Field(..., alias="objAudit")
    a_obj_ezsignfoldertransmission: conlist(CustomEzsignfoldertransmissionResponse) = Field(..., alias="a_objEzsignfoldertransmission")
    __properties = ["pkiEzsignbulksendtransmissionID", "fkiEzsignbulksendID", "sEzsignbulksendtransmissionDescription", "iEzsignbulksendtransmissionErrors", "objAudit", "a_objEzsignfoldertransmission"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> EzsignbulksendtransmissionResponseCompound:
        """Create an instance of EzsignbulksendtransmissionResponseCompound from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        # override the default output from pydantic by calling `to_dict()` of obj_audit
        if self.obj_audit:
            _dict['objAudit'] = self.obj_audit.to_dict()
        # override the default output from pydantic by calling `to_dict()` of each item in a_obj_ezsignfoldertransmission (list)
        _items = []
        if self.a_obj_ezsignfoldertransmission:
            for _item in self.a_obj_ezsignfoldertransmission:
                if _item:
                    _items.append(_item.to_dict())
            _dict['a_objEzsignfoldertransmission'] = _items
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> EzsignbulksendtransmissionResponseCompound:
        """Create an instance of EzsignbulksendtransmissionResponseCompound from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return EzsignbulksendtransmissionResponseCompound.parse_obj(obj)

        _obj = EzsignbulksendtransmissionResponseCompound.parse_obj({
            "pki_ezsignbulksendtransmission_id": obj.get("pkiEzsignbulksendtransmissionID"),
            "fki_ezsignbulksend_id": obj.get("fkiEzsignbulksendID"),
            "s_ezsignbulksendtransmission_description": obj.get("sEzsignbulksendtransmissionDescription"),
            "i_ezsignbulksendtransmission_errors": obj.get("iEzsignbulksendtransmissionErrors"),
            "obj_audit": CommonAudit.from_dict(obj.get("objAudit")) if obj.get("objAudit") is not None else None,
            "a_obj_ezsignfoldertransmission": [CustomEzsignfoldertransmissionResponse.from_dict(_item) for _item in obj.get("a_objEzsignfoldertransmission")] if obj.get("a_objEzsignfoldertransmission") is not None else None
        })
        return _obj


