# coding: utf-8

"""
    eZmax API Definition (Full)

    This API expose all the functionnalities for the eZmax and eZsign applications.

    The version of the OpenAPI document: 1.2.1
    Contact: support-api@ezmax.ca
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import ConfigDict
from typing import Any, ClassVar, Dict, List
from eZmaxApi.models.common_audit import CommonAudit
from eZmaxApi.models.computed_e_ezsigndocument_steptype import ComputedEEzsigndocumentSteptype
from eZmaxApi.models.custom_ezsignfoldersignerassociationstatus_response import CustomEzsignfoldersignerassociationstatusResponse
from eZmaxApi.models.ezsigndocument_response_compound import EzsigndocumentResponseCompound
from eZmaxApi.models.ezsigndocumentdependency_response import EzsigndocumentdependencyResponse
from eZmaxApi.models.field_e_ezsigndocument_step import FieldEEzsigndocumentStep
from typing import Optional, Set
from typing_extensions import Self

class EzsigndocumentGetObjectV1ResponseMPayload(EzsigndocumentResponseCompound):
    """
    Payload for GET /1/object/ezsigndocument/{pkiEzsigndocumentID}
    """ # noqa: E501
    __properties: ClassVar[List[str]] = ["pkiEzsigndocumentID", "fkiEzsignfolderID", "fkiEzsignfoldersignerassociationIDDeclinedtosign", "dtEzsigndocumentDuedate", "dtEzsignformCompleted", "fkiLanguageID", "sEzsigndocumentName", "eEzsigndocumentStep", "dtEzsigndocumentFirstsend", "dtEzsigndocumentLastsend", "iEzsigndocumentOrder", "iEzsigndocumentPagetotal", "iEzsigndocumentSignaturesigned", "iEzsigndocumentSignaturetotal", "iEzsigndocumentFormfieldtotal", "sEzsigndocumentMD5initial", "tEzsigndocumentDeclinedtosignreason", "sEzsigndocumentMD5signed", "bEzsigndocumentEzsignform", "bEzsigndocumentHassignedsignatures", "objAudit", "sEzsigndocumentExternalid", "iEzsigndocumentEzsignsignatureattachmenttotal", "iEzsigndocumentEzsigndiscussiontotal", "eEzsigndocumentSteptype", "iEzsigndocumentStepformtotal", "iEzsigndocumentStepformcurrent", "iEzsigndocumentStepsignaturetotal", "iEzsigndocumentStepsignatureCurrent", "a_objEzsignfoldersignerassociationstatus", "a_objEzsigndocumentdependency"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of EzsigndocumentGetObjectV1ResponseMPayload from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of obj_audit
        if self.obj_audit:
            _dict['objAudit'] = self.obj_audit.to_dict()
        # override the default output from pydantic by calling `to_dict()` of each item in a_obj_ezsignfoldersignerassociationstatus (list)
        _items = []
        if self.a_obj_ezsignfoldersignerassociationstatus:
            for _item_a_obj_ezsignfoldersignerassociationstatus in self.a_obj_ezsignfoldersignerassociationstatus:
                if _item_a_obj_ezsignfoldersignerassociationstatus:
                    _items.append(_item_a_obj_ezsignfoldersignerassociationstatus.to_dict())
            _dict['a_objEzsignfoldersignerassociationstatus'] = _items
        # override the default output from pydantic by calling `to_dict()` of each item in a_obj_ezsigndocumentdependency (list)
        _items = []
        if self.a_obj_ezsigndocumentdependency:
            for _item_a_obj_ezsigndocumentdependency in self.a_obj_ezsigndocumentdependency:
                if _item_a_obj_ezsigndocumentdependency:
                    _items.append(_item_a_obj_ezsigndocumentdependency.to_dict())
            _dict['a_objEzsigndocumentdependency'] = _items
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of EzsigndocumentGetObjectV1ResponseMPayload from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "pkiEzsigndocumentID": obj.get("pkiEzsigndocumentID"),
            "fkiEzsignfolderID": obj.get("fkiEzsignfolderID"),
            "fkiEzsignfoldersignerassociationIDDeclinedtosign": obj.get("fkiEzsignfoldersignerassociationIDDeclinedtosign"),
            "dtEzsigndocumentDuedate": obj.get("dtEzsigndocumentDuedate"),
            "dtEzsignformCompleted": obj.get("dtEzsignformCompleted"),
            "fkiLanguageID": obj.get("fkiLanguageID"),
            "sEzsigndocumentName": obj.get("sEzsigndocumentName"),
            "eEzsigndocumentStep": obj.get("eEzsigndocumentStep"),
            "dtEzsigndocumentFirstsend": obj.get("dtEzsigndocumentFirstsend"),
            "dtEzsigndocumentLastsend": obj.get("dtEzsigndocumentLastsend"),
            "iEzsigndocumentOrder": obj.get("iEzsigndocumentOrder"),
            "iEzsigndocumentPagetotal": obj.get("iEzsigndocumentPagetotal"),
            "iEzsigndocumentSignaturesigned": obj.get("iEzsigndocumentSignaturesigned"),
            "iEzsigndocumentSignaturetotal": obj.get("iEzsigndocumentSignaturetotal"),
            "iEzsigndocumentFormfieldtotal": obj.get("iEzsigndocumentFormfieldtotal"),
            "sEzsigndocumentMD5initial": obj.get("sEzsigndocumentMD5initial"),
            "tEzsigndocumentDeclinedtosignreason": obj.get("tEzsigndocumentDeclinedtosignreason"),
            "sEzsigndocumentMD5signed": obj.get("sEzsigndocumentMD5signed"),
            "bEzsigndocumentEzsignform": obj.get("bEzsigndocumentEzsignform"),
            "bEzsigndocumentHassignedsignatures": obj.get("bEzsigndocumentHassignedsignatures"),
            "objAudit": CommonAudit.from_dict(obj["objAudit"]) if obj.get("objAudit") is not None else None,
            "sEzsigndocumentExternalid": obj.get("sEzsigndocumentExternalid"),
            "iEzsigndocumentEzsignsignatureattachmenttotal": obj.get("iEzsigndocumentEzsignsignatureattachmenttotal"),
            "iEzsigndocumentEzsigndiscussiontotal": obj.get("iEzsigndocumentEzsigndiscussiontotal"),
            "eEzsigndocumentSteptype": obj.get("eEzsigndocumentSteptype"),
            "iEzsigndocumentStepformtotal": obj.get("iEzsigndocumentStepformtotal"),
            "iEzsigndocumentStepformcurrent": obj.get("iEzsigndocumentStepformcurrent"),
            "iEzsigndocumentStepsignaturetotal": obj.get("iEzsigndocumentStepsignaturetotal"),
            "iEzsigndocumentStepsignatureCurrent": obj.get("iEzsigndocumentStepsignatureCurrent"),
            "a_objEzsignfoldersignerassociationstatus": [CustomEzsignfoldersignerassociationstatusResponse.from_dict(_item) for _item in obj["a_objEzsignfoldersignerassociationstatus"]] if obj.get("a_objEzsignfoldersignerassociationstatus") is not None else None,
            "a_objEzsigndocumentdependency": [EzsigndocumentdependencyResponse.from_dict(_item) for _item in obj["a_objEzsigndocumentdependency"]] if obj.get("a_objEzsigndocumentdependency") is not None else None
        })
        return _obj


