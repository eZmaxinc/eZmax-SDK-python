# coding: utf-8

"""
    eZmax API Definition (Full)

    This API expose all the functionnalities for the eZmax and eZsign applications.

    The version of the OpenAPI document: 1.2.1
    Contact: support-api@ezmax.ca
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import ConfigDict, Field, StrictInt
from typing import Any, ClassVar, Dict, List, Optional
from eZmaxApi.models.common_audit import CommonAudit
from eZmaxApi.models.computed_e_ezsigndocument_steptype import ComputedEEzsigndocumentSteptype
from eZmaxApi.models.custom_ezsignfoldersignerassociationstatus_response import CustomEzsignfoldersignerassociationstatusResponse
from eZmaxApi.models.ezsigndocument_response import EzsigndocumentResponse
from eZmaxApi.models.ezsigndocumentdependency_response import EzsigndocumentdependencyResponse
from eZmaxApi.models.field_e_ezsigndocument_step import FieldEEzsigndocumentStep
from typing import Optional, Set
from typing_extensions import Self

class EzsigndocumentResponseCompound(EzsigndocumentResponse):
    """
    An Ezsigndocument Object and children to create a complete structure
    """ # noqa: E501
    e_ezsigndocument_steptype: ComputedEEzsigndocumentSteptype = Field(alias="eEzsigndocumentSteptype")
    i_ezsigndocument_stepformtotal: StrictInt = Field(description="The total number of steps in the form filling phase", alias="iEzsigndocumentStepformtotal")
    i_ezsigndocument_stepformcurrent: StrictInt = Field(description="The current step in the form filling phase", alias="iEzsigndocumentStepformcurrent")
    i_ezsigndocument_stepsignaturetotal: StrictInt = Field(description="The total number of steps in the signature filling phase", alias="iEzsigndocumentStepsignaturetotal")
    i_ezsigndocument_stepsignature_current: StrictInt = Field(description="The current step in the signature phase", alias="iEzsigndocumentStepsignatureCurrent")
    a_obj_ezsignfoldersignerassociationstatus: List[CustomEzsignfoldersignerassociationstatusResponse] = Field(alias="a_objEzsignfoldersignerassociationstatus")
    a_obj_ezsigndocumentdependency: Optional[List[EzsigndocumentdependencyResponse]] = Field(default=None, alias="a_objEzsigndocumentdependency")
    __properties: ClassVar[List[str]] = ["pkiEzsigndocumentID", "fkiEzsignfolderID", "fkiEzsignfoldersignerassociationIDDeclinedtosign", "dtEzsigndocumentDuedate", "dtEzsignformCompleted", "fkiLanguageID", "sEzsigndocumentName", "eEzsigndocumentStep", "dtEzsigndocumentFirstsend", "dtEzsigndocumentLastsend", "iEzsigndocumentOrder", "iEzsigndocumentPagetotal", "iEzsigndocumentSignaturesigned", "iEzsigndocumentSignaturetotal", "iEzsigndocumentFormfieldtotal", "sEzsigndocumentMD5initial", "tEzsigndocumentDeclinedtosignreason", "sEzsigndocumentMD5signed", "bEzsigndocumentEzsignform", "bEzsigndocumentHassignedsignatures", "objAudit", "sEzsigndocumentExternalid", "iEzsigndocumentEzsignsignatureattachmenttotal", "iEzsigndocumentEzsigndiscussiontotal", "eEzsigndocumentSteptype", "iEzsigndocumentStepformtotal", "iEzsigndocumentStepformcurrent", "iEzsigndocumentStepsignaturetotal", "iEzsigndocumentStepsignatureCurrent", "a_objEzsignfoldersignerassociationstatus", "a_objEzsigndocumentdependency"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of EzsigndocumentResponseCompound from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of obj_audit
        if self.obj_audit:
            _dict['objAudit'] = self.obj_audit.to_dict()
        # override the default output from pydantic by calling `to_dict()` of each item in a_obj_ezsignfoldersignerassociationstatus (list)
        _items = []
        if self.a_obj_ezsignfoldersignerassociationstatus:
            for _item_a_obj_ezsignfoldersignerassociationstatus in self.a_obj_ezsignfoldersignerassociationstatus:
                if _item_a_obj_ezsignfoldersignerassociationstatus:
                    _items.append(_item_a_obj_ezsignfoldersignerassociationstatus.to_dict())
            _dict['a_objEzsignfoldersignerassociationstatus'] = _items
        # override the default output from pydantic by calling `to_dict()` of each item in a_obj_ezsigndocumentdependency (list)
        _items = []
        if self.a_obj_ezsigndocumentdependency:
            for _item_a_obj_ezsigndocumentdependency in self.a_obj_ezsigndocumentdependency:
                if _item_a_obj_ezsigndocumentdependency:
                    _items.append(_item_a_obj_ezsigndocumentdependency.to_dict())
            _dict['a_objEzsigndocumentdependency'] = _items
        return _dict

    @classmethod
    def from_dict(cls, obj: Dict[str, Any]) -> Optional[Self]:
        """Create an instance of EzsigndocumentResponseCompound from a dict"""


