# coding: utf-8

"""
    eZmax API Definition (Full)

    This API expose all the functionnalities for the eZmax and eZsign applications.

    The version of the OpenAPI document: 1.2.1
    Contact: support-api@ezmax.ca
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import ConfigDict, Field, StrictBool
from typing import Any, ClassVar, Dict, List, Optional
from eZmaxApi.models.custom_contact_name_response import CustomContactNameResponse
from eZmaxApi.models.custom_creditcardtransaction_response import CustomCreditcardtransactionResponse
from eZmaxApi.models.enum_textvalidation import EnumTextvalidation
from eZmaxApi.models.ezsignelementdependency_response import EzsignelementdependencyResponse
from eZmaxApi.models.ezsignsignature_response import EzsignsignatureResponse
from eZmaxApi.models.ezsignsignaturecustomdate_response_v2 import EzsignsignaturecustomdateResponseV2
from eZmaxApi.models.field_e_ezsignsignature_attachmentnamesource import FieldEEzsignsignatureAttachmentnamesource
from eZmaxApi.models.field_e_ezsignsignature_consultationtrigger import FieldEEzsignsignatureConsultationtrigger
from eZmaxApi.models.field_e_ezsignsignature_dependencyrequirement import FieldEEzsignsignatureDependencyrequirement
from eZmaxApi.models.field_e_ezsignsignature_font import FieldEEzsignsignatureFont
from eZmaxApi.models.field_e_ezsignsignature_tooltipposition import FieldEEzsignsignatureTooltipposition
from eZmaxApi.models.field_e_ezsignsignature_type import FieldEEzsignsignatureType
from eZmaxApi.models.signature_response_compound import SignatureResponseCompound
from typing import Optional, Set
from typing_extensions import Self

class EzsignsignatureResponseCompoundV3(EzsignsignatureResponse):
    """
    An Ezsignsignature Object and children to create a complete structure
    """ # noqa: E501
    b_ezsignsignature_customdate: Optional[StrictBool] = Field(default=None, description="Whether the Ezsignsignature has a custom date format or not. (Only possible when eEzsignsignatureType is **Name** or **Handwritten**)", alias="bEzsignsignatureCustomdate")
    a_obj_ezsignsignaturecustomdate: Optional[List[EzsignsignaturecustomdateResponseV2]] = Field(default=None, description="An array of custom date blocks that will be filled at the time of signature.  Can only be used if bEzsignsignatureCustomdate is true.  Use an empty array if you don't want to have a date at all.", alias="a_objEzsignsignaturecustomdate")
    obj_creditcardtransaction: Optional[CustomCreditcardtransactionResponse] = Field(default=None, alias="objCreditcardtransaction")
    a_obj_ezsignelementdependency: Optional[List[EzsignelementdependencyResponse]] = Field(default=None, alias="a_objEzsignelementdependency")
    __properties: ClassVar[List[str]] = ["pkiEzsignsignatureID", "fkiEzsigndocumentID", "fkiEzsignfoldersignerassociationID", "fkiEzsignsigningreasonID", "fkiFontID", "sEzsignsigningreasonDescriptionX", "iEzsignpagePagenumber", "iEzsignsignatureX", "iEzsignsignatureY", "iEzsignsignatureHeight", "iEzsignsignatureWidth", "iEzsignsignatureStep", "iEzsignsignatureStepadjusted", "eEzsignsignatureType", "tEzsignsignatureTooltip", "eEzsignsignatureTooltipposition", "eEzsignsignatureFont", "iEzsignsignatureValidationstep", "sEzsignsignatureAttachmentdescription", "eEzsignsignatureAttachmentnamesource", "eEzsignsignatureConsultationtrigger", "bEzsignsignatureHandwritten", "bEzsignsignatureReason", "bEzsignsignatureRequired", "fkiEzsignfoldersignerassociationIDValidation", "dtEzsignsignatureDate", "iEzsignsignatureattachmentCount", "sEzsignsignatureDescription", "iEzsignsignatureMaxlength", "eEzsignsignatureTextvalidation", "sEzsignsignatureTextvalidationcustommessage", "eEzsignsignatureDependencyrequirement", "sEzsignsignatureDefaultvalue", "sEzsignsignatureRegexp", "objContactName", "objContactNameDelegation", "objSignature", "bEzsignsignatureCustomdate", "a_objEzsignsignaturecustomdate", "objCreditcardtransaction", "a_objEzsignelementdependency"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of EzsignsignatureResponseCompoundV3 from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of obj_contact_name
        if self.obj_contact_name:
            _dict['objContactName'] = self.obj_contact_name.to_dict()
        # override the default output from pydantic by calling `to_dict()` of obj_contact_name_delegation
        if self.obj_contact_name_delegation:
            _dict['objContactNameDelegation'] = self.obj_contact_name_delegation.to_dict()
        # override the default output from pydantic by calling `to_dict()` of obj_signature
        if self.obj_signature:
            _dict['objSignature'] = self.obj_signature.to_dict()
        # override the default output from pydantic by calling `to_dict()` of each item in a_obj_ezsignsignaturecustomdate (list)
        _items = []
        if self.a_obj_ezsignsignaturecustomdate:
            for _item_a_obj_ezsignsignaturecustomdate in self.a_obj_ezsignsignaturecustomdate:
                if _item_a_obj_ezsignsignaturecustomdate:
                    _items.append(_item_a_obj_ezsignsignaturecustomdate.to_dict())
            _dict['a_objEzsignsignaturecustomdate'] = _items
        # override the default output from pydantic by calling `to_dict()` of obj_creditcardtransaction
        if self.obj_creditcardtransaction:
            _dict['objCreditcardtransaction'] = self.obj_creditcardtransaction.to_dict()
        # override the default output from pydantic by calling `to_dict()` of each item in a_obj_ezsignelementdependency (list)
        _items = []
        if self.a_obj_ezsignelementdependency:
            for _item_a_obj_ezsignelementdependency in self.a_obj_ezsignelementdependency:
                if _item_a_obj_ezsignelementdependency:
                    _items.append(_item_a_obj_ezsignelementdependency.to_dict())
            _dict['a_objEzsignelementdependency'] = _items
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of EzsignsignatureResponseCompoundV3 from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "pkiEzsignsignatureID": obj.get("pkiEzsignsignatureID"),
            "fkiEzsigndocumentID": obj.get("fkiEzsigndocumentID"),
            "fkiEzsignfoldersignerassociationID": obj.get("fkiEzsignfoldersignerassociationID"),
            "fkiEzsignsigningreasonID": obj.get("fkiEzsignsigningreasonID"),
            "fkiFontID": obj.get("fkiFontID"),
            "sEzsignsigningreasonDescriptionX": obj.get("sEzsignsigningreasonDescriptionX"),
            "iEzsignpagePagenumber": obj.get("iEzsignpagePagenumber"),
            "iEzsignsignatureX": obj.get("iEzsignsignatureX"),
            "iEzsignsignatureY": obj.get("iEzsignsignatureY"),
            "iEzsignsignatureHeight": obj.get("iEzsignsignatureHeight"),
            "iEzsignsignatureWidth": obj.get("iEzsignsignatureWidth"),
            "iEzsignsignatureStep": obj.get("iEzsignsignatureStep"),
            "iEzsignsignatureStepadjusted": obj.get("iEzsignsignatureStepadjusted"),
            "eEzsignsignatureType": obj.get("eEzsignsignatureType"),
            "tEzsignsignatureTooltip": obj.get("tEzsignsignatureTooltip"),
            "eEzsignsignatureTooltipposition": obj.get("eEzsignsignatureTooltipposition"),
            "eEzsignsignatureFont": obj.get("eEzsignsignatureFont"),
            "iEzsignsignatureValidationstep": obj.get("iEzsignsignatureValidationstep"),
            "sEzsignsignatureAttachmentdescription": obj.get("sEzsignsignatureAttachmentdescription"),
            "eEzsignsignatureAttachmentnamesource": obj.get("eEzsignsignatureAttachmentnamesource"),
            "eEzsignsignatureConsultationtrigger": obj.get("eEzsignsignatureConsultationtrigger"),
            "bEzsignsignatureHandwritten": obj.get("bEzsignsignatureHandwritten"),
            "bEzsignsignatureReason": obj.get("bEzsignsignatureReason"),
            "bEzsignsignatureRequired": obj.get("bEzsignsignatureRequired"),
            "fkiEzsignfoldersignerassociationIDValidation": obj.get("fkiEzsignfoldersignerassociationIDValidation"),
            "dtEzsignsignatureDate": obj.get("dtEzsignsignatureDate"),
            "iEzsignsignatureattachmentCount": obj.get("iEzsignsignatureattachmentCount"),
            "sEzsignsignatureDescription": obj.get("sEzsignsignatureDescription"),
            "iEzsignsignatureMaxlength": obj.get("iEzsignsignatureMaxlength"),
            "eEzsignsignatureTextvalidation": obj.get("eEzsignsignatureTextvalidation"),
            "sEzsignsignatureTextvalidationcustommessage": obj.get("sEzsignsignatureTextvalidationcustommessage"),
            "eEzsignsignatureDependencyrequirement": obj.get("eEzsignsignatureDependencyrequirement"),
            "sEzsignsignatureDefaultvalue": obj.get("sEzsignsignatureDefaultvalue"),
            "sEzsignsignatureRegexp": obj.get("sEzsignsignatureRegexp"),
            "objContactName": CustomContactNameResponse.from_dict(obj["objContactName"]) if obj.get("objContactName") is not None else None,
            "objContactNameDelegation": CustomContactNameResponse.from_dict(obj["objContactNameDelegation"]) if obj.get("objContactNameDelegation") is not None else None,
            "objSignature": SignatureResponseCompound.from_dict(obj["objSignature"]) if obj.get("objSignature") is not None else None,
            "bEzsignsignatureCustomdate": obj.get("bEzsignsignatureCustomdate"),
            "a_objEzsignsignaturecustomdate": [EzsignsignaturecustomdateResponseV2.from_dict(_item) for _item in obj["a_objEzsignsignaturecustomdate"]] if obj.get("a_objEzsignsignaturecustomdate") is not None else None,
            "objCreditcardtransaction": CustomCreditcardtransactionResponse.from_dict(obj["objCreditcardtransaction"]) if obj.get("objCreditcardtransaction") is not None else None,
            "a_objEzsignelementdependency": [EzsignelementdependencyResponse.from_dict(_item) for _item in obj["a_objEzsignelementdependency"]] if obj.get("a_objEzsignelementdependency") is not None else None
        })
        return _obj


