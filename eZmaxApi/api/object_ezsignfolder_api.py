"""
    eZmax API Definition (Full)

    This API expose all the functionnalities for the eZmax and eZsign applications.  # noqa: E501

    The version of the OpenAPI document: 1.1.12
    Contact: support-api@ezmax.ca
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from eZmaxApi.api_client import ApiClient, Endpoint as _Endpoint
from eZmaxApi.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from eZmaxApi.model.common_response_error import CommonResponseError
from eZmaxApi.model.ezsignfolder_archive_v1_response import EzsignfolderArchiveV1Response
from eZmaxApi.model.ezsignfolder_batch_download_v1_request import EzsignfolderBatchDownloadV1Request
from eZmaxApi.model.ezsignfolder_create_object_v1_request import EzsignfolderCreateObjectV1Request
from eZmaxApi.model.ezsignfolder_create_object_v1_response import EzsignfolderCreateObjectV1Response
from eZmaxApi.model.ezsignfolder_create_object_v2_request import EzsignfolderCreateObjectV2Request
from eZmaxApi.model.ezsignfolder_create_object_v2_response import EzsignfolderCreateObjectV2Response
from eZmaxApi.model.ezsignfolder_delete_object_v1_response import EzsignfolderDeleteObjectV1Response
from eZmaxApi.model.ezsignfolder_dispose_ezsignfolders_v1_request import EzsignfolderDisposeEzsignfoldersV1Request
from eZmaxApi.model.ezsignfolder_dispose_ezsignfolders_v1_response import EzsignfolderDisposeEzsignfoldersV1Response
from eZmaxApi.model.ezsignfolder_dispose_v1_response import EzsignfolderDisposeV1Response
from eZmaxApi.model.ezsignfolder_edit_object_v1_request import EzsignfolderEditObjectV1Request
from eZmaxApi.model.ezsignfolder_edit_object_v1_response import EzsignfolderEditObjectV1Response
from eZmaxApi.model.ezsignfolder_get_actionable_elements_v1_response import EzsignfolderGetActionableElementsV1Response
from eZmaxApi.model.ezsignfolder_get_ezsigndocuments_v1_response import EzsignfolderGetEzsigndocumentsV1Response
from eZmaxApi.model.ezsignfolder_get_ezsignfoldersignerassociations_v1_response import EzsignfolderGetEzsignfoldersignerassociationsV1Response
from eZmaxApi.model.ezsignfolder_get_forms_data_v1_response import EzsignfolderGetFormsDataV1Response
from eZmaxApi.model.ezsignfolder_get_list_v1_response import EzsignfolderGetListV1Response
from eZmaxApi.model.ezsignfolder_get_object_v1_response import EzsignfolderGetObjectV1Response
from eZmaxApi.model.ezsignfolder_import_ezsignfoldersignerassociations_v1_request import EzsignfolderImportEzsignfoldersignerassociationsV1Request
from eZmaxApi.model.ezsignfolder_import_ezsignfoldersignerassociations_v1_response import EzsignfolderImportEzsignfoldersignerassociationsV1Response
from eZmaxApi.model.ezsignfolder_import_ezsigntemplatepackage_v1_request import EzsignfolderImportEzsigntemplatepackageV1Request
from eZmaxApi.model.ezsignfolder_import_ezsigntemplatepackage_v1_response import EzsignfolderImportEzsigntemplatepackageV1Response
from eZmaxApi.model.ezsignfolder_reorder_v1_request import EzsignfolderReorderV1Request
from eZmaxApi.model.ezsignfolder_reorder_v1_response import EzsignfolderReorderV1Response
from eZmaxApi.model.ezsignfolder_send_v1_request import EzsignfolderSendV1Request
from eZmaxApi.model.ezsignfolder_send_v1_response import EzsignfolderSendV1Response
from eZmaxApi.model.ezsignfolder_send_v2_request import EzsignfolderSendV2Request
from eZmaxApi.model.ezsignfolder_send_v2_response import EzsignfolderSendV2Response
from eZmaxApi.model.ezsignfolder_unsend_v1_response import EzsignfolderUnsendV1Response
from eZmaxApi.model.header_accept_language import HeaderAcceptLanguage


class ObjectEzsignfolderApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.ezsignfolder_archive_v1_endpoint = _Endpoint(
            settings={
                'response_type': (EzsignfolderArchiveV1Response,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/object/ezsignfolder/{pkiEzsignfolderID}/archive',
                'operation_id': 'ezsignfolder_archive_v1',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'pki_ezsignfolder_id',
                    'body',
                ],
                'required': [
                    'pki_ezsignfolder_id',
                    'body',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'pki_ezsignfolder_id',
                ]
            },
            root_map={
                'validations': {
                    ('pki_ezsignfolder_id',): {

                        'inclusive_minimum': 0,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'pki_ezsignfolder_id':
                        (int,),
                    'body':
                        ({str: (bool, date, datetime, dict, float, int, list, str, none_type)},),
                },
                'attribute_map': {
                    'pki_ezsignfolder_id': 'pkiEzsignfolderID',
                },
                'location_map': {
                    'pki_ezsignfolder_id': 'path',
                    'body': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.ezsignfolder_batch_download_v1_endpoint = _Endpoint(
            settings={
                'response_type': (file_type,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/object/ezsignfolder/{pkiEzsignfolderID}/batchDownload',
                'operation_id': 'ezsignfolder_batch_download_v1',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'pki_ezsignfolder_id',
                    'ezsignfolder_batch_download_v1_request',
                ],
                'required': [
                    'pki_ezsignfolder_id',
                    'ezsignfolder_batch_download_v1_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'pki_ezsignfolder_id',
                ]
            },
            root_map={
                'validations': {
                    ('pki_ezsignfolder_id',): {

                        'inclusive_minimum': 0,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'pki_ezsignfolder_id':
                        (int,),
                    'ezsignfolder_batch_download_v1_request':
                        (EzsignfolderBatchDownloadV1Request,),
                },
                'attribute_map': {
                    'pki_ezsignfolder_id': 'pkiEzsignfolderID',
                },
                'location_map': {
                    'pki_ezsignfolder_id': 'path',
                    'ezsignfolder_batch_download_v1_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/zip',
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.ezsignfolder_create_object_v1_endpoint = _Endpoint(
            settings={
                'response_type': (EzsignfolderCreateObjectV1Response,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/object/ezsignfolder',
                'operation_id': 'ezsignfolder_create_object_v1',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'ezsignfolder_create_object_v1_request',
                ],
                'required': [
                    'ezsignfolder_create_object_v1_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'ezsignfolder_create_object_v1_request':
                        ([EzsignfolderCreateObjectV1Request],),
                },
                'attribute_map': {
                },
                'location_map': {
                    'ezsignfolder_create_object_v1_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.ezsignfolder_create_object_v2_endpoint = _Endpoint(
            settings={
                'response_type': (EzsignfolderCreateObjectV2Response,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/2/object/ezsignfolder',
                'operation_id': 'ezsignfolder_create_object_v2',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'ezsignfolder_create_object_v2_request',
                ],
                'required': [
                    'ezsignfolder_create_object_v2_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'ezsignfolder_create_object_v2_request':
                        (EzsignfolderCreateObjectV2Request,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'ezsignfolder_create_object_v2_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.ezsignfolder_delete_object_v1_endpoint = _Endpoint(
            settings={
                'response_type': (EzsignfolderDeleteObjectV1Response,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/object/ezsignfolder/{pkiEzsignfolderID}',
                'operation_id': 'ezsignfolder_delete_object_v1',
                'http_method': 'DELETE',
                'servers': None,
            },
            params_map={
                'all': [
                    'pki_ezsignfolder_id',
                ],
                'required': [
                    'pki_ezsignfolder_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'pki_ezsignfolder_id',
                ]
            },
            root_map={
                'validations': {
                    ('pki_ezsignfolder_id',): {

                        'inclusive_minimum': 0,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'pki_ezsignfolder_id':
                        (int,),
                },
                'attribute_map': {
                    'pki_ezsignfolder_id': 'pkiEzsignfolderID',
                },
                'location_map': {
                    'pki_ezsignfolder_id': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.ezsignfolder_dispose_ezsignfolders_v1_endpoint = _Endpoint(
            settings={
                'response_type': (EzsignfolderDisposeEzsignfoldersV1Response,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/object/ezsignfolder/disposeEzsignfolders',
                'operation_id': 'ezsignfolder_dispose_ezsignfolders_v1',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'ezsignfolder_dispose_ezsignfolders_v1_request',
                ],
                'required': [
                    'ezsignfolder_dispose_ezsignfolders_v1_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'ezsignfolder_dispose_ezsignfolders_v1_request':
                        (EzsignfolderDisposeEzsignfoldersV1Request,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'ezsignfolder_dispose_ezsignfolders_v1_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.ezsignfolder_dispose_v1_endpoint = _Endpoint(
            settings={
                'response_type': (EzsignfolderDisposeV1Response,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/object/ezsignfolder/{pkiEzsignfolderID}/dispose',
                'operation_id': 'ezsignfolder_dispose_v1',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'pki_ezsignfolder_id',
                    'body',
                ],
                'required': [
                    'pki_ezsignfolder_id',
                    'body',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'pki_ezsignfolder_id',
                ]
            },
            root_map={
                'validations': {
                    ('pki_ezsignfolder_id',): {

                        'inclusive_minimum': 0,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'pki_ezsignfolder_id':
                        (int,),
                    'body':
                        ({str: (bool, date, datetime, dict, float, int, list, str, none_type)},),
                },
                'attribute_map': {
                    'pki_ezsignfolder_id': 'pkiEzsignfolderID',
                },
                'location_map': {
                    'pki_ezsignfolder_id': 'path',
                    'body': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.ezsignfolder_edit_object_v1_endpoint = _Endpoint(
            settings={
                'response_type': (EzsignfolderEditObjectV1Response,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/object/ezsignfolder/{pkiEzsignfolderID}',
                'operation_id': 'ezsignfolder_edit_object_v1',
                'http_method': 'PUT',
                'servers': None,
            },
            params_map={
                'all': [
                    'pki_ezsignfolder_id',
                    'ezsignfolder_edit_object_v1_request',
                ],
                'required': [
                    'pki_ezsignfolder_id',
                    'ezsignfolder_edit_object_v1_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'pki_ezsignfolder_id',
                ]
            },
            root_map={
                'validations': {
                    ('pki_ezsignfolder_id',): {

                        'inclusive_minimum': 0,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'pki_ezsignfolder_id':
                        (int,),
                    'ezsignfolder_edit_object_v1_request':
                        (EzsignfolderEditObjectV1Request,),
                },
                'attribute_map': {
                    'pki_ezsignfolder_id': 'pkiEzsignfolderID',
                },
                'location_map': {
                    'pki_ezsignfolder_id': 'path',
                    'ezsignfolder_edit_object_v1_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.ezsignfolder_get_actionable_elements_v1_endpoint = _Endpoint(
            settings={
                'response_type': (EzsignfolderGetActionableElementsV1Response,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/object/ezsignfolder/{pkiEzsignfolderID}/getActionableElements',
                'operation_id': 'ezsignfolder_get_actionable_elements_v1',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'pki_ezsignfolder_id',
                ],
                'required': [
                    'pki_ezsignfolder_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'pki_ezsignfolder_id',
                ]
            },
            root_map={
                'validations': {
                    ('pki_ezsignfolder_id',): {

                        'inclusive_minimum': 0,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'pki_ezsignfolder_id':
                        (int,),
                },
                'attribute_map': {
                    'pki_ezsignfolder_id': 'pkiEzsignfolderID',
                },
                'location_map': {
                    'pki_ezsignfolder_id': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.ezsignfolder_get_ezsigndocuments_v1_endpoint = _Endpoint(
            settings={
                'response_type': (EzsignfolderGetEzsigndocumentsV1Response,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/object/ezsignfolder/{pkiEzsignfolderID}/getEzsigndocuments',
                'operation_id': 'ezsignfolder_get_ezsigndocuments_v1',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'pki_ezsignfolder_id',
                ],
                'required': [
                    'pki_ezsignfolder_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'pki_ezsignfolder_id',
                ]
            },
            root_map={
                'validations': {
                    ('pki_ezsignfolder_id',): {

                        'inclusive_minimum': 0,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'pki_ezsignfolder_id':
                        (int,),
                },
                'attribute_map': {
                    'pki_ezsignfolder_id': 'pkiEzsignfolderID',
                },
                'location_map': {
                    'pki_ezsignfolder_id': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.ezsignfolder_get_ezsignfoldersignerassociations_v1_endpoint = _Endpoint(
            settings={
                'response_type': (EzsignfolderGetEzsignfoldersignerassociationsV1Response,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/object/ezsignfolder/{pkiEzsignfolderID}/getEzsignfoldersignerassociations',
                'operation_id': 'ezsignfolder_get_ezsignfoldersignerassociations_v1',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'pki_ezsignfolder_id',
                ],
                'required': [
                    'pki_ezsignfolder_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'pki_ezsignfolder_id',
                ]
            },
            root_map={
                'validations': {
                    ('pki_ezsignfolder_id',): {

                        'inclusive_minimum': 0,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'pki_ezsignfolder_id':
                        (int,),
                },
                'attribute_map': {
                    'pki_ezsignfolder_id': 'pkiEzsignfolderID',
                },
                'location_map': {
                    'pki_ezsignfolder_id': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.ezsignfolder_get_forms_data_v1_endpoint = _Endpoint(
            settings={
                'response_type': (EzsignfolderGetFormsDataV1Response,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/object/ezsignfolder/{pkiEzsignfolderID}/getFormsData',
                'operation_id': 'ezsignfolder_get_forms_data_v1',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'pki_ezsignfolder_id',
                ],
                'required': [
                    'pki_ezsignfolder_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'pki_ezsignfolder_id',
                ]
            },
            root_map={
                'validations': {
                    ('pki_ezsignfolder_id',): {

                        'inclusive_minimum': 0,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'pki_ezsignfolder_id':
                        (int,),
                },
                'attribute_map': {
                    'pki_ezsignfolder_id': 'pkiEzsignfolderID',
                },
                'location_map': {
                    'pki_ezsignfolder_id': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json',
                    'application/zip'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.ezsignfolder_get_list_v1_endpoint = _Endpoint(
            settings={
                'response_type': (EzsignfolderGetListV1Response,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/object/ezsignfolder/getList',
                'operation_id': 'ezsignfolder_get_list_v1',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'e_order_by',
                    'i_row_max',
                    'i_row_offset',
                    'accept_language',
                    's_filter',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                    'e_order_by',
                ],
                'validation': [
                    'i_row_max',
                    'i_row_offset',
                ]
            },
            root_map={
                'validations': {
                    ('i_row_max',): {

                        'inclusive_minimum': 1,
                    },
                    ('i_row_offset',): {

                        'inclusive_minimum': 0,
                    },
                },
                'allowed_values': {
                    ('e_order_by',): {

                        "PKIEZSIGNFOLDERID_ASC": "pkiEzsignfolderID_ASC",
                        "PKIEZSIGNFOLDERID_DESC": "pkiEzsignfolderID_DESC",
                        "SEZSIGNFOLDERDESCRIPTION_ASC": "sEzsignfolderDescription_ASC",
                        "SEZSIGNFOLDERDESCRIPTION_DESC": "sEzsignfolderDescription_DESC",
                        "DTCREATEDDATE_ASC": "dtCreatedDate_ASC",
                        "DTCREATEDDATE_DESC": "dtCreatedDate_DESC",
                        "FKIEZSIGNFOLDERTYPEID_ASC": "fkiEzsignfoldertypeID_ASC",
                        "FKIEZSIGNFOLDERTYPEID_DESC": "fkiEzsignfoldertypeID_DESC",
                        "SEZSIGNFOLDERTYPENAMEX_ASC": "sEzsignfoldertypeNameX_ASC",
                        "SEZSIGNFOLDERTYPENAMEX_DESC": "sEzsignfoldertypeNameX_DESC",
                        "EEZSIGNFOLDERSTEP_ASC": "eEzsignfolderStep_ASC",
                        "EEZSIGNFOLDERSTEP_DESC": "eEzsignfolderStep_DESC",
                        "DTEZSIGNFOLDERSENTDATE_ASC": "dtEzsignfolderSentdate_ASC",
                        "DTEZSIGNFOLDERSENTDATE_DESC": "dtEzsignfolderSentdate_DESC",
                        "DTDUEDATE_ASC": "dtDueDate_ASC",
                        "DTDUEDATE_DESC": "dtDueDate_DESC",
                        "ITOTALDOCUMENT_ASC": "iTotalDocument_ASC",
                        "ITOTALDOCUMENT_DESC": "iTotalDocument_DESC",
                        "ITOTALDOCUMENTEDM_ASC": "iTotalDocumentEdm_ASC",
                        "ITOTALDOCUMENTEDM_DESC": "iTotalDocumentEdm_DESC",
                        "ITOTALSIGNATURE_ASC": "iTotalSignature_ASC",
                        "ITOTALSIGNATURE_DESC": "iTotalSignature_DESC",
                        "ITOTALSIGNATURESIGNED_ASC": "iTotalSignatureSigned_ASC",
                        "ITOTALSIGNATURESIGNED_DESC": "iTotalSignatureSigned_DESC"
                    },
                },
                'openapi_types': {
                    'e_order_by':
                        (str,),
                    'i_row_max':
                        (int,),
                    'i_row_offset':
                        (int,),
                    'accept_language':
                        (HeaderAcceptLanguage,),
                    's_filter':
                        (str,),
                },
                'attribute_map': {
                    'e_order_by': 'eOrderBy',
                    'i_row_max': 'iRowMax',
                    'i_row_offset': 'iRowOffset',
                    'accept_language': 'Accept-Language',
                    's_filter': 'sFilter',
                },
                'location_map': {
                    'e_order_by': 'query',
                    'i_row_max': 'query',
                    'i_row_offset': 'query',
                    'accept_language': 'header',
                    's_filter': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json',
                    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.ezsignfolder_get_object_v1_endpoint = _Endpoint(
            settings={
                'response_type': (EzsignfolderGetObjectV1Response,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/object/ezsignfolder/{pkiEzsignfolderID}',
                'operation_id': 'ezsignfolder_get_object_v1',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'pki_ezsignfolder_id',
                ],
                'required': [
                    'pki_ezsignfolder_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'pki_ezsignfolder_id',
                ]
            },
            root_map={
                'validations': {
                    ('pki_ezsignfolder_id',): {

                        'inclusive_minimum': 0,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'pki_ezsignfolder_id':
                        (int,),
                },
                'attribute_map': {
                    'pki_ezsignfolder_id': 'pkiEzsignfolderID',
                },
                'location_map': {
                    'pki_ezsignfolder_id': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.ezsignfolder_import_ezsignfoldersignerassociations_v1_endpoint = _Endpoint(
            settings={
                'response_type': (EzsignfolderImportEzsignfoldersignerassociationsV1Response,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/object/ezsignfolder/{pkiEzsignfolderID}/importEzsignfoldersignerassociations',
                'operation_id': 'ezsignfolder_import_ezsignfoldersignerassociations_v1',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'pki_ezsignfolder_id',
                    'ezsignfolder_import_ezsignfoldersignerassociations_v1_request',
                ],
                'required': [
                    'pki_ezsignfolder_id',
                    'ezsignfolder_import_ezsignfoldersignerassociations_v1_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'pki_ezsignfolder_id',
                ]
            },
            root_map={
                'validations': {
                    ('pki_ezsignfolder_id',): {

                        'inclusive_minimum': 0,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'pki_ezsignfolder_id':
                        (int,),
                    'ezsignfolder_import_ezsignfoldersignerassociations_v1_request':
                        (EzsignfolderImportEzsignfoldersignerassociationsV1Request,),
                },
                'attribute_map': {
                    'pki_ezsignfolder_id': 'pkiEzsignfolderID',
                },
                'location_map': {
                    'pki_ezsignfolder_id': 'path',
                    'ezsignfolder_import_ezsignfoldersignerassociations_v1_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.ezsignfolder_import_ezsigntemplatepackage_v1_endpoint = _Endpoint(
            settings={
                'response_type': (EzsignfolderImportEzsigntemplatepackageV1Response,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/object/ezsignfolder/{pkiEzsignfolderID}/importEzsigntemplatepackage',
                'operation_id': 'ezsignfolder_import_ezsigntemplatepackage_v1',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'pki_ezsignfolder_id',
                    'ezsignfolder_import_ezsigntemplatepackage_v1_request',
                ],
                'required': [
                    'pki_ezsignfolder_id',
                    'ezsignfolder_import_ezsigntemplatepackage_v1_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'pki_ezsignfolder_id',
                ]
            },
            root_map={
                'validations': {
                    ('pki_ezsignfolder_id',): {

                        'inclusive_minimum': 0,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'pki_ezsignfolder_id':
                        (int,),
                    'ezsignfolder_import_ezsigntemplatepackage_v1_request':
                        (EzsignfolderImportEzsigntemplatepackageV1Request,),
                },
                'attribute_map': {
                    'pki_ezsignfolder_id': 'pkiEzsignfolderID',
                },
                'location_map': {
                    'pki_ezsignfolder_id': 'path',
                    'ezsignfolder_import_ezsigntemplatepackage_v1_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.ezsignfolder_reorder_v1_endpoint = _Endpoint(
            settings={
                'response_type': (EzsignfolderReorderV1Response,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/object/ezsignfolder/{pkiEzsignfolderID}/reorder',
                'operation_id': 'ezsignfolder_reorder_v1',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'pki_ezsignfolder_id',
                    'ezsignfolder_reorder_v1_request',
                ],
                'required': [
                    'pki_ezsignfolder_id',
                    'ezsignfolder_reorder_v1_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'pki_ezsignfolder_id',
                ]
            },
            root_map={
                'validations': {
                    ('pki_ezsignfolder_id',): {

                        'inclusive_minimum': 0,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'pki_ezsignfolder_id':
                        (int,),
                    'ezsignfolder_reorder_v1_request':
                        (EzsignfolderReorderV1Request,),
                },
                'attribute_map': {
                    'pki_ezsignfolder_id': 'pkiEzsignfolderID',
                },
                'location_map': {
                    'pki_ezsignfolder_id': 'path',
                    'ezsignfolder_reorder_v1_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.ezsignfolder_send_v1_endpoint = _Endpoint(
            settings={
                'response_type': (EzsignfolderSendV1Response,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/object/ezsignfolder/{pkiEzsignfolderID}/send',
                'operation_id': 'ezsignfolder_send_v1',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'pki_ezsignfolder_id',
                    'ezsignfolder_send_v1_request',
                ],
                'required': [
                    'pki_ezsignfolder_id',
                    'ezsignfolder_send_v1_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'pki_ezsignfolder_id',
                ]
            },
            root_map={
                'validations': {
                    ('pki_ezsignfolder_id',): {

                        'inclusive_minimum': 0,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'pki_ezsignfolder_id':
                        (int,),
                    'ezsignfolder_send_v1_request':
                        (EzsignfolderSendV1Request,),
                },
                'attribute_map': {
                    'pki_ezsignfolder_id': 'pkiEzsignfolderID',
                },
                'location_map': {
                    'pki_ezsignfolder_id': 'path',
                    'ezsignfolder_send_v1_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.ezsignfolder_send_v2_endpoint = _Endpoint(
            settings={
                'response_type': (EzsignfolderSendV2Response,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/2/object/ezsignfolder/{pkiEzsignfolderID}/send',
                'operation_id': 'ezsignfolder_send_v2',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'pki_ezsignfolder_id',
                    'ezsignfolder_send_v2_request',
                ],
                'required': [
                    'pki_ezsignfolder_id',
                    'ezsignfolder_send_v2_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'pki_ezsignfolder_id',
                ]
            },
            root_map={
                'validations': {
                    ('pki_ezsignfolder_id',): {

                        'inclusive_minimum': 0,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'pki_ezsignfolder_id':
                        (int,),
                    'ezsignfolder_send_v2_request':
                        (EzsignfolderSendV2Request,),
                },
                'attribute_map': {
                    'pki_ezsignfolder_id': 'pkiEzsignfolderID',
                },
                'location_map': {
                    'pki_ezsignfolder_id': 'path',
                    'ezsignfolder_send_v2_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.ezsignfolder_unsend_v1_endpoint = _Endpoint(
            settings={
                'response_type': (EzsignfolderUnsendV1Response,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/object/ezsignfolder/{pkiEzsignfolderID}/unsend',
                'operation_id': 'ezsignfolder_unsend_v1',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'pki_ezsignfolder_id',
                    'body',
                ],
                'required': [
                    'pki_ezsignfolder_id',
                    'body',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'pki_ezsignfolder_id',
                ]
            },
            root_map={
                'validations': {
                    ('pki_ezsignfolder_id',): {

                        'inclusive_minimum': 0,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'pki_ezsignfolder_id':
                        (int,),
                    'body':
                        ({str: (bool, date, datetime, dict, float, int, list, str, none_type)},),
                },
                'attribute_map': {
                    'pki_ezsignfolder_id': 'pkiEzsignfolderID',
                },
                'location_map': {
                    'pki_ezsignfolder_id': 'path',
                    'body': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )

    def ezsignfolder_archive_v1(
        self,
        pki_ezsignfolder_id,
        body,
        **kwargs
    ):
        """Archive the Ezsignfolder  # noqa: E501

          # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsignfolder_archive_v1(pki_ezsignfolder_id, body, async_req=True)
        >>> result = thread.get()

        Args:
            pki_ezsignfolder_id (int):
            body ({str: (bool, date, datetime, dict, float, int, list, str, none_type)}):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            EzsignfolderArchiveV1Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['pki_ezsignfolder_id'] = \
            pki_ezsignfolder_id
        kwargs['body'] = \
            body
        return self.ezsignfolder_archive_v1_endpoint.call_with_http_info(**kwargs)

    def ezsignfolder_batch_download_v1(
        self,
        pki_ezsignfolder_id,
        ezsignfolder_batch_download_v1_request,
        **kwargs
    ):
        """Download multiples files from an Ezsignfolder  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsignfolder_batch_download_v1(pki_ezsignfolder_id, ezsignfolder_batch_download_v1_request, async_req=True)
        >>> result = thread.get()

        Args:
            pki_ezsignfolder_id (int):
            ezsignfolder_batch_download_v1_request (EzsignfolderBatchDownloadV1Request):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            file_type
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['pki_ezsignfolder_id'] = \
            pki_ezsignfolder_id
        kwargs['ezsignfolder_batch_download_v1_request'] = \
            ezsignfolder_batch_download_v1_request
        return self.ezsignfolder_batch_download_v1_endpoint.call_with_http_info(**kwargs)

    def ezsignfolder_create_object_v1(
        self,
        ezsignfolder_create_object_v1_request,
        **kwargs
    ):
        """Create a new Ezsignfolder  # noqa: E501

        The endpoint allows to create one or many elements at once.  The array can contain simple (Just the object) or compound (The object and its child) objects.  Creating compound elements allows to reduce the multiple requests to create all child objects.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsignfolder_create_object_v1(ezsignfolder_create_object_v1_request, async_req=True)
        >>> result = thread.get()

        Args:
            ezsignfolder_create_object_v1_request ([EzsignfolderCreateObjectV1Request]):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            EzsignfolderCreateObjectV1Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['ezsignfolder_create_object_v1_request'] = \
            ezsignfolder_create_object_v1_request
        return self.ezsignfolder_create_object_v1_endpoint.call_with_http_info(**kwargs)

    def ezsignfolder_create_object_v2(
        self,
        ezsignfolder_create_object_v2_request,
        **kwargs
    ):
        """Create a new Ezsignfolder  # noqa: E501

        The endpoint allows to create one or many elements at once.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsignfolder_create_object_v2(ezsignfolder_create_object_v2_request, async_req=True)
        >>> result = thread.get()

        Args:
            ezsignfolder_create_object_v2_request (EzsignfolderCreateObjectV2Request):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            EzsignfolderCreateObjectV2Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['ezsignfolder_create_object_v2_request'] = \
            ezsignfolder_create_object_v2_request
        return self.ezsignfolder_create_object_v2_endpoint.call_with_http_info(**kwargs)

    def ezsignfolder_delete_object_v1(
        self,
        pki_ezsignfolder_id,
        **kwargs
    ):
        """Delete an existing Ezsignfolder  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsignfolder_delete_object_v1(pki_ezsignfolder_id, async_req=True)
        >>> result = thread.get()

        Args:
            pki_ezsignfolder_id (int):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            EzsignfolderDeleteObjectV1Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['pki_ezsignfolder_id'] = \
            pki_ezsignfolder_id
        return self.ezsignfolder_delete_object_v1_endpoint.call_with_http_info(**kwargs)

    def ezsignfolder_dispose_ezsignfolders_v1(
        self,
        ezsignfolder_dispose_ezsignfolders_v1_request,
        **kwargs
    ):
        """Dispose Ezsignfolders  # noqa: E501

          # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsignfolder_dispose_ezsignfolders_v1(ezsignfolder_dispose_ezsignfolders_v1_request, async_req=True)
        >>> result = thread.get()

        Args:
            ezsignfolder_dispose_ezsignfolders_v1_request (EzsignfolderDisposeEzsignfoldersV1Request):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            EzsignfolderDisposeEzsignfoldersV1Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['ezsignfolder_dispose_ezsignfolders_v1_request'] = \
            ezsignfolder_dispose_ezsignfolders_v1_request
        return self.ezsignfolder_dispose_ezsignfolders_v1_endpoint.call_with_http_info(**kwargs)

    def ezsignfolder_dispose_v1(
        self,
        pki_ezsignfolder_id,
        body,
        **kwargs
    ):
        """Dispose the Ezsignfolder  # noqa: E501

          # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsignfolder_dispose_v1(pki_ezsignfolder_id, body, async_req=True)
        >>> result = thread.get()

        Args:
            pki_ezsignfolder_id (int):
            body ({str: (bool, date, datetime, dict, float, int, list, str, none_type)}):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            EzsignfolderDisposeV1Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['pki_ezsignfolder_id'] = \
            pki_ezsignfolder_id
        kwargs['body'] = \
            body
        return self.ezsignfolder_dispose_v1_endpoint.call_with_http_info(**kwargs)

    def ezsignfolder_edit_object_v1(
        self,
        pki_ezsignfolder_id,
        ezsignfolder_edit_object_v1_request,
        **kwargs
    ):
        """Edit an existing Ezsignfolder  # noqa: E501

          # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsignfolder_edit_object_v1(pki_ezsignfolder_id, ezsignfolder_edit_object_v1_request, async_req=True)
        >>> result = thread.get()

        Args:
            pki_ezsignfolder_id (int):
            ezsignfolder_edit_object_v1_request (EzsignfolderEditObjectV1Request):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            EzsignfolderEditObjectV1Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['pki_ezsignfolder_id'] = \
            pki_ezsignfolder_id
        kwargs['ezsignfolder_edit_object_v1_request'] = \
            ezsignfolder_edit_object_v1_request
        return self.ezsignfolder_edit_object_v1_endpoint.call_with_http_info(**kwargs)

    def ezsignfolder_get_actionable_elements_v1(
        self,
        pki_ezsignfolder_id,
        **kwargs
    ):
        """Retrieve actionable elements for the Ezsignfolder  # noqa: E501

        Return the Ezsignsignatures that can be signed and Ezsignformfieldgroups that can be filled by the current user at the current step in the process  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsignfolder_get_actionable_elements_v1(pki_ezsignfolder_id, async_req=True)
        >>> result = thread.get()

        Args:
            pki_ezsignfolder_id (int):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            EzsignfolderGetActionableElementsV1Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['pki_ezsignfolder_id'] = \
            pki_ezsignfolder_id
        return self.ezsignfolder_get_actionable_elements_v1_endpoint.call_with_http_info(**kwargs)

    def ezsignfolder_get_ezsigndocuments_v1(
        self,
        pki_ezsignfolder_id,
        **kwargs
    ):
        """Retrieve an existing Ezsignfolder's Ezsigndocuments  # noqa: E501

          # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsignfolder_get_ezsigndocuments_v1(pki_ezsignfolder_id, async_req=True)
        >>> result = thread.get()

        Args:
            pki_ezsignfolder_id (int):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            EzsignfolderGetEzsigndocumentsV1Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['pki_ezsignfolder_id'] = \
            pki_ezsignfolder_id
        return self.ezsignfolder_get_ezsigndocuments_v1_endpoint.call_with_http_info(**kwargs)

    def ezsignfolder_get_ezsignfoldersignerassociations_v1(
        self,
        pki_ezsignfolder_id,
        **kwargs
    ):
        """Retrieve an existing Ezsignfolder's Ezsignfoldersignerassociations  # noqa: E501

          # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsignfolder_get_ezsignfoldersignerassociations_v1(pki_ezsignfolder_id, async_req=True)
        >>> result = thread.get()

        Args:
            pki_ezsignfolder_id (int):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            EzsignfolderGetEzsignfoldersignerassociationsV1Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['pki_ezsignfolder_id'] = \
            pki_ezsignfolder_id
        return self.ezsignfolder_get_ezsignfoldersignerassociations_v1_endpoint.call_with_http_info(**kwargs)

    def ezsignfolder_get_forms_data_v1(
        self,
        pki_ezsignfolder_id,
        **kwargs
    ):
        """Retrieve an existing Ezsignfolder's forms data  # noqa: E501

          # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsignfolder_get_forms_data_v1(pki_ezsignfolder_id, async_req=True)
        >>> result = thread.get()

        Args:
            pki_ezsignfolder_id (int):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            EzsignfolderGetFormsDataV1Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['pki_ezsignfolder_id'] = \
            pki_ezsignfolder_id
        return self.ezsignfolder_get_forms_data_v1_endpoint.call_with_http_info(**kwargs)

    def ezsignfolder_get_list_v1(
        self,
        **kwargs
    ):
        """Retrieve Ezsignfolder list  # noqa: E501

        Enum values that can be filtered in query parameter *sFilter*:  | Variable | Valid values | |---|---| | eEzsignfolderStep | Unsent<br>Sent<br>PartiallySigned<br>Expired<br>Completed<br>Archived<br>Disposed| | eEzsignfoldertypePrivacylevel | User<br>Usergroup |  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsignfolder_get_list_v1(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            e_order_by (str): Specify how you want the results to be sorted. [optional]
            i_row_max (int): [optional]
            i_row_offset (int): [optional]
            accept_language (HeaderAcceptLanguage): [optional]
            s_filter (str): [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            EzsignfolderGetListV1Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.ezsignfolder_get_list_v1_endpoint.call_with_http_info(**kwargs)

    def ezsignfolder_get_object_v1(
        self,
        pki_ezsignfolder_id,
        **kwargs
    ):
        """Retrieve an existing Ezsignfolder  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsignfolder_get_object_v1(pki_ezsignfolder_id, async_req=True)
        >>> result = thread.get()

        Args:
            pki_ezsignfolder_id (int):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            EzsignfolderGetObjectV1Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['pki_ezsignfolder_id'] = \
            pki_ezsignfolder_id
        return self.ezsignfolder_get_object_v1_endpoint.call_with_http_info(**kwargs)

    def ezsignfolder_import_ezsignfoldersignerassociations_v1(
        self,
        pki_ezsignfolder_id,
        ezsignfolder_import_ezsignfoldersignerassociations_v1_request,
        **kwargs
    ):
        """Import an existing Ezsignfoldersignerassociation into this Ezsignfolder  # noqa: E501

          # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsignfolder_import_ezsignfoldersignerassociations_v1(pki_ezsignfolder_id, ezsignfolder_import_ezsignfoldersignerassociations_v1_request, async_req=True)
        >>> result = thread.get()

        Args:
            pki_ezsignfolder_id (int):
            ezsignfolder_import_ezsignfoldersignerassociations_v1_request (EzsignfolderImportEzsignfoldersignerassociationsV1Request):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            EzsignfolderImportEzsignfoldersignerassociationsV1Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['pki_ezsignfolder_id'] = \
            pki_ezsignfolder_id
        kwargs['ezsignfolder_import_ezsignfoldersignerassociations_v1_request'] = \
            ezsignfolder_import_ezsignfoldersignerassociations_v1_request
        return self.ezsignfolder_import_ezsignfoldersignerassociations_v1_endpoint.call_with_http_info(**kwargs)

    def ezsignfolder_import_ezsigntemplatepackage_v1(
        self,
        pki_ezsignfolder_id,
        ezsignfolder_import_ezsigntemplatepackage_v1_request,
        **kwargs
    ):
        """Import an Ezsigntemplatepackage in the Ezsignfolder.  # noqa: E501

        This endpoint imports all of the Ezsigntemplates from the Ezsigntemplatepackage into the Ezsignfolder as Ezsigndocuments.  This allows to automatically apply all the Ezsigntemplateformfieldgroups and Ezsigntemplatesignatures on the newly created Ezsigndocuments in a single step.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsignfolder_import_ezsigntemplatepackage_v1(pki_ezsignfolder_id, ezsignfolder_import_ezsigntemplatepackage_v1_request, async_req=True)
        >>> result = thread.get()

        Args:
            pki_ezsignfolder_id (int):
            ezsignfolder_import_ezsigntemplatepackage_v1_request (EzsignfolderImportEzsigntemplatepackageV1Request):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            EzsignfolderImportEzsigntemplatepackageV1Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['pki_ezsignfolder_id'] = \
            pki_ezsignfolder_id
        kwargs['ezsignfolder_import_ezsigntemplatepackage_v1_request'] = \
            ezsignfolder_import_ezsigntemplatepackage_v1_request
        return self.ezsignfolder_import_ezsigntemplatepackage_v1_endpoint.call_with_http_info(**kwargs)

    def ezsignfolder_reorder_v1(
        self,
        pki_ezsignfolder_id,
        ezsignfolder_reorder_v1_request,
        **kwargs
    ):
        """Reorder Ezsigndocuments in the Ezsignfolder  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsignfolder_reorder_v1(pki_ezsignfolder_id, ezsignfolder_reorder_v1_request, async_req=True)
        >>> result = thread.get()

        Args:
            pki_ezsignfolder_id (int):
            ezsignfolder_reorder_v1_request (EzsignfolderReorderV1Request):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            EzsignfolderReorderV1Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['pki_ezsignfolder_id'] = \
            pki_ezsignfolder_id
        kwargs['ezsignfolder_reorder_v1_request'] = \
            ezsignfolder_reorder_v1_request
        return self.ezsignfolder_reorder_v1_endpoint.call_with_http_info(**kwargs)

    def ezsignfolder_send_v1(
        self,
        pki_ezsignfolder_id,
        ezsignfolder_send_v1_request,
        **kwargs
    ):
        """Send the Ezsignfolder to the signatories for signature  # noqa: E501

          # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsignfolder_send_v1(pki_ezsignfolder_id, ezsignfolder_send_v1_request, async_req=True)
        >>> result = thread.get()

        Args:
            pki_ezsignfolder_id (int):
            ezsignfolder_send_v1_request (EzsignfolderSendV1Request):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            EzsignfolderSendV1Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['pki_ezsignfolder_id'] = \
            pki_ezsignfolder_id
        kwargs['ezsignfolder_send_v1_request'] = \
            ezsignfolder_send_v1_request
        return self.ezsignfolder_send_v1_endpoint.call_with_http_info(**kwargs)

    def ezsignfolder_send_v2(
        self,
        pki_ezsignfolder_id,
        ezsignfolder_send_v2_request,
        **kwargs
    ):
        """Send the Ezsignfolder to the signatories for signature  # noqa: E501

          # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsignfolder_send_v2(pki_ezsignfolder_id, ezsignfolder_send_v2_request, async_req=True)
        >>> result = thread.get()

        Args:
            pki_ezsignfolder_id (int):
            ezsignfolder_send_v2_request (EzsignfolderSendV2Request):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            EzsignfolderSendV2Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['pki_ezsignfolder_id'] = \
            pki_ezsignfolder_id
        kwargs['ezsignfolder_send_v2_request'] = \
            ezsignfolder_send_v2_request
        return self.ezsignfolder_send_v2_endpoint.call_with_http_info(**kwargs)

    def ezsignfolder_unsend_v1(
        self,
        pki_ezsignfolder_id,
        body,
        **kwargs
    ):
        """Unsend the Ezsignfolder  # noqa: E501

        Once an Ezsignfolder has been sent to signatories, it cannot be modified.  Using this endpoint, you can unsend the Ezsignfolder and make it modifiable again.  Signatories will receive an email informing them the signature process was aborted and they might receive a new invitation to sign.  ⚠️ Warning: Any signature previously made by signatories on \"Non-completed\" Ezsigndocuments will be lost.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsignfolder_unsend_v1(pki_ezsignfolder_id, body, async_req=True)
        >>> result = thread.get()

        Args:
            pki_ezsignfolder_id (int):
            body ({str: (bool, date, datetime, dict, float, int, list, str, none_type)}):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            EzsignfolderUnsendV1Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['pki_ezsignfolder_id'] = \
            pki_ezsignfolder_id
        kwargs['body'] = \
            body
        return self.ezsignfolder_unsend_v1_endpoint.call_with_http_info(**kwargs)

