"""
    eZmax API Definition

    This API expose all the functionnalities for the eZmax and eZsign applications.  # noqa: E501

    The version of the OpenAPI document: 1.1.5
    Contact: support-api@ezmax.ca
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from eZmaxApi.api_client import ApiClient, Endpoint as _Endpoint
from eZmaxApi.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from eZmaxApi.model.common_response_error import CommonResponseError
from eZmaxApi.model.common_response_error_s_temporary_file_url import CommonResponseErrorSTemporaryFileUrl
from eZmaxApi.model.ezsigndocument_apply_ezsigntemplate_v1_request import EzsigndocumentApplyEzsigntemplateV1Request
from eZmaxApi.model.ezsigndocument_apply_ezsigntemplate_v1_response import EzsigndocumentApplyEzsigntemplateV1Response
from eZmaxApi.model.ezsigndocument_apply_ezsigntemplate_v2_request import EzsigndocumentApplyEzsigntemplateV2Request
from eZmaxApi.model.ezsigndocument_apply_ezsigntemplate_v2_response import EzsigndocumentApplyEzsigntemplateV2Response
from eZmaxApi.model.ezsigndocument_create_object_v1_request import EzsigndocumentCreateObjectV1Request
from eZmaxApi.model.ezsigndocument_create_object_v1_response import EzsigndocumentCreateObjectV1Response
from eZmaxApi.model.ezsigndocument_create_object_v2_request import EzsigndocumentCreateObjectV2Request
from eZmaxApi.model.ezsigndocument_create_object_v2_response import EzsigndocumentCreateObjectV2Response
from eZmaxApi.model.ezsigndocument_delete_object_v1_response import EzsigndocumentDeleteObjectV1Response
from eZmaxApi.model.ezsigndocument_edit_ezsignformfieldgroups_v1_request import EzsigndocumentEditEzsignformfieldgroupsV1Request
from eZmaxApi.model.ezsigndocument_edit_ezsignformfieldgroups_v1_response import EzsigndocumentEditEzsignformfieldgroupsV1Response
from eZmaxApi.model.ezsigndocument_edit_ezsignsignatures_v1_request import EzsigndocumentEditEzsignsignaturesV1Request
from eZmaxApi.model.ezsigndocument_edit_ezsignsignatures_v1_response import EzsigndocumentEditEzsignsignaturesV1Response
from eZmaxApi.model.ezsigndocument_end_prematurely_v1_response import EzsigndocumentEndPrematurelyV1Response
from eZmaxApi.model.ezsigndocument_get_download_url_v1_response import EzsigndocumentGetDownloadUrlV1Response
from eZmaxApi.model.ezsigndocument_get_ezsignformfieldgroups_v1_response import EzsigndocumentGetEzsignformfieldgroupsV1Response
from eZmaxApi.model.ezsigndocument_get_ezsignpages_v1_response import EzsigndocumentGetEzsignpagesV1Response
from eZmaxApi.model.ezsigndocument_get_ezsignsignatures_v1_response import EzsigndocumentGetEzsignsignaturesV1Response
from eZmaxApi.model.ezsigndocument_get_form_data_v1_response import EzsigndocumentGetFormDataV1Response
from eZmaxApi.model.ezsigndocument_get_object_v1_response import EzsigndocumentGetObjectV1Response
from eZmaxApi.model.ezsigndocument_get_temporary_proof_v1_response import EzsigndocumentGetTemporaryProofV1Response
from eZmaxApi.model.ezsigndocument_get_words_positions_v1_request import EzsigndocumentGetWordsPositionsV1Request
from eZmaxApi.model.ezsigndocument_get_words_positions_v1_response import EzsigndocumentGetWordsPositionsV1Response
from eZmaxApi.model.ezsigndocument_patch_object_v1_request import EzsigndocumentPatchObjectV1Request
from eZmaxApi.model.ezsigndocument_patch_object_v1_response import EzsigndocumentPatchObjectV1Response


class ObjectEzsigndocumentApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.ezsigndocument_apply_ezsigntemplate_v1_endpoint = _Endpoint(
            settings={
                'response_type': (EzsigndocumentApplyEzsigntemplateV1Response,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/object/ezsigndocument/{pkiEzsigndocumentID}/applyezsigntemplate',
                'operation_id': 'ezsigndocument_apply_ezsigntemplate_v1',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'pki_ezsigndocument_id',
                    'ezsigndocument_apply_ezsigntemplate_v1_request',
                ],
                'required': [
                    'pki_ezsigndocument_id',
                    'ezsigndocument_apply_ezsigntemplate_v1_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'pki_ezsigndocument_id':
                        (int,),
                    'ezsigndocument_apply_ezsigntemplate_v1_request':
                        (EzsigndocumentApplyEzsigntemplateV1Request,),
                },
                'attribute_map': {
                    'pki_ezsigndocument_id': 'pkiEzsigndocumentID',
                },
                'location_map': {
                    'pki_ezsigndocument_id': 'path',
                    'ezsigndocument_apply_ezsigntemplate_v1_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.ezsigndocument_apply_ezsigntemplate_v2_endpoint = _Endpoint(
            settings={
                'response_type': (EzsigndocumentApplyEzsigntemplateV2Response,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/2/object/ezsigndocument/{pkiEzsigndocumentID}/applyEzsigntemplate',
                'operation_id': 'ezsigndocument_apply_ezsigntemplate_v2',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'pki_ezsigndocument_id',
                    'ezsigndocument_apply_ezsigntemplate_v2_request',
                ],
                'required': [
                    'pki_ezsigndocument_id',
                    'ezsigndocument_apply_ezsigntemplate_v2_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'pki_ezsigndocument_id':
                        (int,),
                    'ezsigndocument_apply_ezsigntemplate_v2_request':
                        (EzsigndocumentApplyEzsigntemplateV2Request,),
                },
                'attribute_map': {
                    'pki_ezsigndocument_id': 'pkiEzsigndocumentID',
                },
                'location_map': {
                    'pki_ezsigndocument_id': 'path',
                    'ezsigndocument_apply_ezsigntemplate_v2_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.ezsigndocument_create_object_v1_endpoint = _Endpoint(
            settings={
                'response_type': (EzsigndocumentCreateObjectV1Response,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/object/ezsigndocument',
                'operation_id': 'ezsigndocument_create_object_v1',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'ezsigndocument_create_object_v1_request',
                ],
                'required': [
                    'ezsigndocument_create_object_v1_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'ezsigndocument_create_object_v1_request':
                        ([EzsigndocumentCreateObjectV1Request],),
                },
                'attribute_map': {
                },
                'location_map': {
                    'ezsigndocument_create_object_v1_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.ezsigndocument_create_object_v2_endpoint = _Endpoint(
            settings={
                'response_type': (EzsigndocumentCreateObjectV2Response,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/2/object/ezsigndocument',
                'operation_id': 'ezsigndocument_create_object_v2',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'ezsigndocument_create_object_v2_request',
                ],
                'required': [
                    'ezsigndocument_create_object_v2_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'ezsigndocument_create_object_v2_request':
                        (EzsigndocumentCreateObjectV2Request,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'ezsigndocument_create_object_v2_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.ezsigndocument_delete_object_v1_endpoint = _Endpoint(
            settings={
                'response_type': (EzsigndocumentDeleteObjectV1Response,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/object/ezsigndocument/{pkiEzsigndocumentID}',
                'operation_id': 'ezsigndocument_delete_object_v1',
                'http_method': 'DELETE',
                'servers': None,
            },
            params_map={
                'all': [
                    'pki_ezsigndocument_id',
                ],
                'required': [
                    'pki_ezsigndocument_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'pki_ezsigndocument_id':
                        (int,),
                },
                'attribute_map': {
                    'pki_ezsigndocument_id': 'pkiEzsigndocumentID',
                },
                'location_map': {
                    'pki_ezsigndocument_id': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.ezsigndocument_edit_ezsignformfieldgroups_v1_endpoint = _Endpoint(
            settings={
                'response_type': (EzsigndocumentEditEzsignformfieldgroupsV1Response,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/object/ezsigndocument/{pkiEzsigndocumentID}/editEzsignformfieldgroups',
                'operation_id': 'ezsigndocument_edit_ezsignformfieldgroups_v1',
                'http_method': 'PUT',
                'servers': None,
            },
            params_map={
                'all': [
                    'pki_ezsigndocument_id',
                    'ezsigndocument_edit_ezsignformfieldgroups_v1_request',
                ],
                'required': [
                    'pki_ezsigndocument_id',
                    'ezsigndocument_edit_ezsignformfieldgroups_v1_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'pki_ezsigndocument_id':
                        (int,),
                    'ezsigndocument_edit_ezsignformfieldgroups_v1_request':
                        (EzsigndocumentEditEzsignformfieldgroupsV1Request,),
                },
                'attribute_map': {
                    'pki_ezsigndocument_id': 'pkiEzsigndocumentID',
                },
                'location_map': {
                    'pki_ezsigndocument_id': 'path',
                    'ezsigndocument_edit_ezsignformfieldgroups_v1_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.ezsigndocument_edit_ezsignsignatures_v1_endpoint = _Endpoint(
            settings={
                'response_type': (EzsigndocumentEditEzsignsignaturesV1Response,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/object/ezsigndocument/{pkiEzsigndocumentID}/editEzsignsignatures',
                'operation_id': 'ezsigndocument_edit_ezsignsignatures_v1',
                'http_method': 'PUT',
                'servers': None,
            },
            params_map={
                'all': [
                    'pki_ezsigndocument_id',
                    'ezsigndocument_edit_ezsignsignatures_v1_request',
                ],
                'required': [
                    'pki_ezsigndocument_id',
                    'ezsigndocument_edit_ezsignsignatures_v1_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'pki_ezsigndocument_id':
                        (int,),
                    'ezsigndocument_edit_ezsignsignatures_v1_request':
                        (EzsigndocumentEditEzsignsignaturesV1Request,),
                },
                'attribute_map': {
                    'pki_ezsigndocument_id': 'pkiEzsigndocumentID',
                },
                'location_map': {
                    'pki_ezsigndocument_id': 'path',
                    'ezsigndocument_edit_ezsignsignatures_v1_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.ezsigndocument_end_prematurely_v1_endpoint = _Endpoint(
            settings={
                'response_type': (EzsigndocumentEndPrematurelyV1Response,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/object/ezsigndocument/{pkiEzsigndocumentID}/endPrematurely',
                'operation_id': 'ezsigndocument_end_prematurely_v1',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'pki_ezsigndocument_id',
                    'body',
                ],
                'required': [
                    'pki_ezsigndocument_id',
                    'body',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'pki_ezsigndocument_id':
                        (int,),
                    'body':
                        ({str: (bool, date, datetime, dict, float, int, list, str, none_type)},),
                },
                'attribute_map': {
                    'pki_ezsigndocument_id': 'pkiEzsigndocumentID',
                },
                'location_map': {
                    'pki_ezsigndocument_id': 'path',
                    'body': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.ezsigndocument_get_download_url_v1_endpoint = _Endpoint(
            settings={
                'response_type': (EzsigndocumentGetDownloadUrlV1Response,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/object/ezsigndocument/{pkiEzsigndocumentID}/getDownloadUrl/{eDocumentType}',
                'operation_id': 'ezsigndocument_get_download_url_v1',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'pki_ezsigndocument_id',
                    'e_document_type',
                ],
                'required': [
                    'pki_ezsigndocument_id',
                    'e_document_type',
                ],
                'nullable': [
                ],
                'enum': [
                    'e_document_type',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('e_document_type',): {

                        "INITIAL": "Initial",
                        "SIGNED": "Signed",
                        "PROOF": "Proof",
                        "PROOFDOCUMENT": "Proofdocument"
                    },
                },
                'openapi_types': {
                    'pki_ezsigndocument_id':
                        (int,),
                    'e_document_type':
                        (str,),
                },
                'attribute_map': {
                    'pki_ezsigndocument_id': 'pkiEzsigndocumentID',
                    'e_document_type': 'eDocumentType',
                },
                'location_map': {
                    'pki_ezsigndocument_id': 'path',
                    'e_document_type': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.ezsigndocument_get_ezsignformfieldgroups_v1_endpoint = _Endpoint(
            settings={
                'response_type': (EzsigndocumentGetEzsignformfieldgroupsV1Response,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/object/ezsigndocument/{pkiEzsigndocumentID}/getEzsignformfieldgroups',
                'operation_id': 'ezsigndocument_get_ezsignformfieldgroups_v1',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'pki_ezsigndocument_id',
                ],
                'required': [
                    'pki_ezsigndocument_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'pki_ezsigndocument_id':
                        (int,),
                },
                'attribute_map': {
                    'pki_ezsigndocument_id': 'pkiEzsigndocumentID',
                },
                'location_map': {
                    'pki_ezsigndocument_id': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.ezsigndocument_get_ezsignpages_v1_endpoint = _Endpoint(
            settings={
                'response_type': (EzsigndocumentGetEzsignpagesV1Response,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/object/ezsigndocument/{pkiEzsigndocumentID}/getEzsignpages',
                'operation_id': 'ezsigndocument_get_ezsignpages_v1',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'pki_ezsigndocument_id',
                ],
                'required': [
                    'pki_ezsigndocument_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'pki_ezsigndocument_id':
                        (int,),
                },
                'attribute_map': {
                    'pki_ezsigndocument_id': 'pkiEzsigndocumentID',
                },
                'location_map': {
                    'pki_ezsigndocument_id': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.ezsigndocument_get_ezsignsignatures_v1_endpoint = _Endpoint(
            settings={
                'response_type': (EzsigndocumentGetEzsignsignaturesV1Response,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/object/ezsigndocument/{pkiEzsigndocumentID}/getEzsignsignatures',
                'operation_id': 'ezsigndocument_get_ezsignsignatures_v1',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'pki_ezsigndocument_id',
                ],
                'required': [
                    'pki_ezsigndocument_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'pki_ezsigndocument_id':
                        (int,),
                },
                'attribute_map': {
                    'pki_ezsigndocument_id': 'pkiEzsigndocumentID',
                },
                'location_map': {
                    'pki_ezsigndocument_id': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.ezsigndocument_get_form_data_v1_endpoint = _Endpoint(
            settings={
                'response_type': (EzsigndocumentGetFormDataV1Response,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/object/ezsigndocument/{pkiEzsigndocumentID}/getFormData',
                'operation_id': 'ezsigndocument_get_form_data_v1',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'pki_ezsigndocument_id',
                ],
                'required': [
                    'pki_ezsigndocument_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'pki_ezsigndocument_id':
                        (int,),
                },
                'attribute_map': {
                    'pki_ezsigndocument_id': 'pkiEzsigndocumentID',
                },
                'location_map': {
                    'pki_ezsigndocument_id': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json',
                    'application/zip',
                    'text/csv'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.ezsigndocument_get_object_v1_endpoint = _Endpoint(
            settings={
                'response_type': (EzsigndocumentGetObjectV1Response,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/object/ezsigndocument/{pkiEzsigndocumentID}',
                'operation_id': 'ezsigndocument_get_object_v1',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'pki_ezsigndocument_id',
                ],
                'required': [
                    'pki_ezsigndocument_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'pki_ezsigndocument_id':
                        (int,),
                },
                'attribute_map': {
                    'pki_ezsigndocument_id': 'pkiEzsigndocumentID',
                },
                'location_map': {
                    'pki_ezsigndocument_id': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.ezsigndocument_get_temporary_proof_v1_endpoint = _Endpoint(
            settings={
                'response_type': (EzsigndocumentGetTemporaryProofV1Response,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/object/ezsigndocument/{pkiEzsigndocumentID}/getTemporaryProof',
                'operation_id': 'ezsigndocument_get_temporary_proof_v1',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'pki_ezsigndocument_id',
                ],
                'required': [
                    'pki_ezsigndocument_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'pki_ezsigndocument_id':
                        (int,),
                },
                'attribute_map': {
                    'pki_ezsigndocument_id': 'pkiEzsigndocumentID',
                },
                'location_map': {
                    'pki_ezsigndocument_id': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.ezsigndocument_get_words_positions_v1_endpoint = _Endpoint(
            settings={
                'response_type': (EzsigndocumentGetWordsPositionsV1Response,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/object/ezsigndocument/{pkiEzsigndocumentID}/getWordsPositions',
                'operation_id': 'ezsigndocument_get_words_positions_v1',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'pki_ezsigndocument_id',
                    'ezsigndocument_get_words_positions_v1_request',
                ],
                'required': [
                    'pki_ezsigndocument_id',
                    'ezsigndocument_get_words_positions_v1_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'pki_ezsigndocument_id':
                        (int,),
                    'ezsigndocument_get_words_positions_v1_request':
                        (EzsigndocumentGetWordsPositionsV1Request,),
                },
                'attribute_map': {
                    'pki_ezsigndocument_id': 'pkiEzsigndocumentID',
                },
                'location_map': {
                    'pki_ezsigndocument_id': 'path',
                    'ezsigndocument_get_words_positions_v1_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.ezsigndocument_patch_object_v1_endpoint = _Endpoint(
            settings={
                'response_type': (EzsigndocumentPatchObjectV1Response,),
                'auth': [
                    'Authorization'
                ],
                'endpoint_path': '/1/object/ezsigndocument/{pkiEzsigndocumentID}',
                'operation_id': 'ezsigndocument_patch_object_v1',
                'http_method': 'PATCH',
                'servers': None,
            },
            params_map={
                'all': [
                    'pki_ezsigndocument_id',
                    'ezsigndocument_patch_object_v1_request',
                ],
                'required': [
                    'pki_ezsigndocument_id',
                    'ezsigndocument_patch_object_v1_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'pki_ezsigndocument_id':
                        (int,),
                    'ezsigndocument_patch_object_v1_request':
                        (EzsigndocumentPatchObjectV1Request,),
                },
                'attribute_map': {
                    'pki_ezsigndocument_id': 'pkiEzsigndocumentID',
                },
                'location_map': {
                    'pki_ezsigndocument_id': 'path',
                    'ezsigndocument_patch_object_v1_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )

    def ezsigndocument_apply_ezsigntemplate_v1(
        self,
        pki_ezsigndocument_id,
        ezsigndocument_apply_ezsigntemplate_v1_request,
        **kwargs
    ):
        """Apply an Ezsign Template to the Ezsigndocument.  # noqa: E501

        This function is deprecated. Please use *applyEzsigntemplate* instead which is doing the same thing but with a capital \"E\" to normalize the nomenclature.  This endpoint applies a predefined template to the ezsign document. This allows to automatically apply all the form and signature fields on a document in a single step.  The document must not already have fields otherwise an error will be returned.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsigndocument_apply_ezsigntemplate_v1(pki_ezsigndocument_id, ezsigndocument_apply_ezsigntemplate_v1_request, async_req=True)
        >>> result = thread.get()

        Args:
            pki_ezsigndocument_id (int):
            ezsigndocument_apply_ezsigntemplate_v1_request (EzsigndocumentApplyEzsigntemplateV1Request):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            EzsigndocumentApplyEzsigntemplateV1Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['pki_ezsigndocument_id'] = \
            pki_ezsigndocument_id
        kwargs['ezsigndocument_apply_ezsigntemplate_v1_request'] = \
            ezsigndocument_apply_ezsigntemplate_v1_request
        return self.ezsigndocument_apply_ezsigntemplate_v1_endpoint.call_with_http_info(**kwargs)

    def ezsigndocument_apply_ezsigntemplate_v2(
        self,
        pki_ezsigndocument_id,
        ezsigndocument_apply_ezsigntemplate_v2_request,
        **kwargs
    ):
        """Apply an Ezsign Template to the Ezsigndocument.  # noqa: E501

        This endpoint applies a predefined template to the ezsign document. This allows to automatically apply all the form and signature fields on a document in a single step.  The document must not already have fields otherwise an error will be returned.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsigndocument_apply_ezsigntemplate_v2(pki_ezsigndocument_id, ezsigndocument_apply_ezsigntemplate_v2_request, async_req=True)
        >>> result = thread.get()

        Args:
            pki_ezsigndocument_id (int):
            ezsigndocument_apply_ezsigntemplate_v2_request (EzsigndocumentApplyEzsigntemplateV2Request):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            EzsigndocumentApplyEzsigntemplateV2Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['pki_ezsigndocument_id'] = \
            pki_ezsigndocument_id
        kwargs['ezsigndocument_apply_ezsigntemplate_v2_request'] = \
            ezsigndocument_apply_ezsigntemplate_v2_request
        return self.ezsigndocument_apply_ezsigntemplate_v2_endpoint.call_with_http_info(**kwargs)

    def ezsigndocument_create_object_v1(
        self,
        ezsigndocument_create_object_v1_request,
        **kwargs
    ):
        """Create a new Ezsigndocument  # noqa: E501

        The endpoint allows to create one or many elements at once.  The array can contain simple (Just the object) or compound (The object and its child) objects.  Creating compound elements allows to reduce the multiple requests to create all child objects.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsigndocument_create_object_v1(ezsigndocument_create_object_v1_request, async_req=True)
        >>> result = thread.get()

        Args:
            ezsigndocument_create_object_v1_request ([EzsigndocumentCreateObjectV1Request]):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            EzsigndocumentCreateObjectV1Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['ezsigndocument_create_object_v1_request'] = \
            ezsigndocument_create_object_v1_request
        return self.ezsigndocument_create_object_v1_endpoint.call_with_http_info(**kwargs)

    def ezsigndocument_create_object_v2(
        self,
        ezsigndocument_create_object_v2_request,
        **kwargs
    ):
        """Create a new Ezsigndocument  # noqa: E501

        The endpoint allows to create one or many elements at once.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsigndocument_create_object_v2(ezsigndocument_create_object_v2_request, async_req=True)
        >>> result = thread.get()

        Args:
            ezsigndocument_create_object_v2_request (EzsigndocumentCreateObjectV2Request):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            EzsigndocumentCreateObjectV2Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['ezsigndocument_create_object_v2_request'] = \
            ezsigndocument_create_object_v2_request
        return self.ezsigndocument_create_object_v2_endpoint.call_with_http_info(**kwargs)

    def ezsigndocument_delete_object_v1(
        self,
        pki_ezsigndocument_id,
        **kwargs
    ):
        """Delete an existing Ezsigndocument  # noqa: E501

          # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsigndocument_delete_object_v1(pki_ezsigndocument_id, async_req=True)
        >>> result = thread.get()

        Args:
            pki_ezsigndocument_id (int):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            EzsigndocumentDeleteObjectV1Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['pki_ezsigndocument_id'] = \
            pki_ezsigndocument_id
        return self.ezsigndocument_delete_object_v1_endpoint.call_with_http_info(**kwargs)

    def ezsigndocument_edit_ezsignformfieldgroups_v1(
        self,
        pki_ezsigndocument_id,
        ezsigndocument_edit_ezsignformfieldgroups_v1_request,
        **kwargs
    ):
        """Edit multiple Ezsignformfieldgroups  # noqa: E501

        Using this endpoint, you can edit multiple Ezsignformfieldgroups at the same time.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsigndocument_edit_ezsignformfieldgroups_v1(pki_ezsigndocument_id, ezsigndocument_edit_ezsignformfieldgroups_v1_request, async_req=True)
        >>> result = thread.get()

        Args:
            pki_ezsigndocument_id (int):
            ezsigndocument_edit_ezsignformfieldgroups_v1_request (EzsigndocumentEditEzsignformfieldgroupsV1Request):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            EzsigndocumentEditEzsignformfieldgroupsV1Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['pki_ezsigndocument_id'] = \
            pki_ezsigndocument_id
        kwargs['ezsigndocument_edit_ezsignformfieldgroups_v1_request'] = \
            ezsigndocument_edit_ezsignformfieldgroups_v1_request
        return self.ezsigndocument_edit_ezsignformfieldgroups_v1_endpoint.call_with_http_info(**kwargs)

    def ezsigndocument_edit_ezsignsignatures_v1(
        self,
        pki_ezsigndocument_id,
        ezsigndocument_edit_ezsignsignatures_v1_request,
        **kwargs
    ):
        """Edit multiple Ezsignsignatures  # noqa: E501

        Using this endpoint, you can edit multiple Ezsignsignatures at the same time.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsigndocument_edit_ezsignsignatures_v1(pki_ezsigndocument_id, ezsigndocument_edit_ezsignsignatures_v1_request, async_req=True)
        >>> result = thread.get()

        Args:
            pki_ezsigndocument_id (int):
            ezsigndocument_edit_ezsignsignatures_v1_request (EzsigndocumentEditEzsignsignaturesV1Request):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            EzsigndocumentEditEzsignsignaturesV1Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['pki_ezsigndocument_id'] = \
            pki_ezsigndocument_id
        kwargs['ezsigndocument_edit_ezsignsignatures_v1_request'] = \
            ezsigndocument_edit_ezsignsignatures_v1_request
        return self.ezsigndocument_edit_ezsignsignatures_v1_endpoint.call_with_http_info(**kwargs)

    def ezsigndocument_end_prematurely_v1(
        self,
        pki_ezsigndocument_id,
        body,
        **kwargs
    ):
        """End prematurely  # noqa: E501

        End prematurely an Ezsigndocument when some signatures are still required  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsigndocument_end_prematurely_v1(pki_ezsigndocument_id, body, async_req=True)
        >>> result = thread.get()

        Args:
            pki_ezsigndocument_id (int):
            body ({str: (bool, date, datetime, dict, float, int, list, str, none_type)}):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            EzsigndocumentEndPrematurelyV1Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['pki_ezsigndocument_id'] = \
            pki_ezsigndocument_id
        kwargs['body'] = \
            body
        return self.ezsigndocument_end_prematurely_v1_endpoint.call_with_http_info(**kwargs)

    def ezsigndocument_get_download_url_v1(
        self,
        pki_ezsigndocument_id,
        e_document_type,
        **kwargs
    ):
        """Retrieve a URL to download documents.  # noqa: E501

        This endpoint returns URLs to different files that can be downloaded during the signing process.  These links will expire after 5 minutes so the download of the file should be made soon after retrieving the link.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsigndocument_get_download_url_v1(pki_ezsigndocument_id, e_document_type, async_req=True)
        >>> result = thread.get()

        Args:
            pki_ezsigndocument_id (int):
            e_document_type (str): The type of document to retrieve.  1. **Initial** Is the initial document before any signature were applied. 2. **Signed** Is the final document once all signatures were applied. 3. **Proofdocument** Is the evidence report. 4. **Proof** Is the complete evidence archive including all of the above and more. 

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            EzsigndocumentGetDownloadUrlV1Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['pki_ezsigndocument_id'] = \
            pki_ezsigndocument_id
        kwargs['e_document_type'] = \
            e_document_type
        return self.ezsigndocument_get_download_url_v1_endpoint.call_with_http_info(**kwargs)

    def ezsigndocument_get_ezsignformfieldgroups_v1(
        self,
        pki_ezsigndocument_id,
        **kwargs
    ):
        """Retrieve an existing Ezsigndocument's Ezsignformfieldgroups  # noqa: E501

          # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsigndocument_get_ezsignformfieldgroups_v1(pki_ezsigndocument_id, async_req=True)
        >>> result = thread.get()

        Args:
            pki_ezsigndocument_id (int):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            EzsigndocumentGetEzsignformfieldgroupsV1Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['pki_ezsigndocument_id'] = \
            pki_ezsigndocument_id
        return self.ezsigndocument_get_ezsignformfieldgroups_v1_endpoint.call_with_http_info(**kwargs)

    def ezsigndocument_get_ezsignpages_v1(
        self,
        pki_ezsigndocument_id,
        **kwargs
    ):
        """Retrieve an existing Ezsigndocument's Ezsignpages  # noqa: E501

          # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsigndocument_get_ezsignpages_v1(pki_ezsigndocument_id, async_req=True)
        >>> result = thread.get()

        Args:
            pki_ezsigndocument_id (int):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            EzsigndocumentGetEzsignpagesV1Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['pki_ezsigndocument_id'] = \
            pki_ezsigndocument_id
        return self.ezsigndocument_get_ezsignpages_v1_endpoint.call_with_http_info(**kwargs)

    def ezsigndocument_get_ezsignsignatures_v1(
        self,
        pki_ezsigndocument_id,
        **kwargs
    ):
        """Retrieve an existing Ezsigndocument's Ezsignsignatures  # noqa: E501

          # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsigndocument_get_ezsignsignatures_v1(pki_ezsigndocument_id, async_req=True)
        >>> result = thread.get()

        Args:
            pki_ezsigndocument_id (int):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            EzsigndocumentGetEzsignsignaturesV1Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['pki_ezsigndocument_id'] = \
            pki_ezsigndocument_id
        return self.ezsigndocument_get_ezsignsignatures_v1_endpoint.call_with_http_info(**kwargs)

    def ezsigndocument_get_form_data_v1(
        self,
        pki_ezsigndocument_id,
        **kwargs
    ):
        """Retrieve an existing Ezsigndocument's Form Data  # noqa: E501

          # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsigndocument_get_form_data_v1(pki_ezsigndocument_id, async_req=True)
        >>> result = thread.get()

        Args:
            pki_ezsigndocument_id (int):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            EzsigndocumentGetFormDataV1Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['pki_ezsigndocument_id'] = \
            pki_ezsigndocument_id
        return self.ezsigndocument_get_form_data_v1_endpoint.call_with_http_info(**kwargs)

    def ezsigndocument_get_object_v1(
        self,
        pki_ezsigndocument_id,
        **kwargs
    ):
        """Retrieve an existing Ezsigndocument  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsigndocument_get_object_v1(pki_ezsigndocument_id, async_req=True)
        >>> result = thread.get()

        Args:
            pki_ezsigndocument_id (int):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            EzsigndocumentGetObjectV1Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['pki_ezsigndocument_id'] = \
            pki_ezsigndocument_id
        return self.ezsigndocument_get_object_v1_endpoint.call_with_http_info(**kwargs)

    def ezsigndocument_get_temporary_proof_v1(
        self,
        pki_ezsigndocument_id,
        **kwargs
    ):
        """Retrieve the temporary proof  # noqa: E501

        Retrieve the temporary proof while the Ezsigndocument is being processed since the proof isn't available until the Ezsigndocument is completed  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsigndocument_get_temporary_proof_v1(pki_ezsigndocument_id, async_req=True)
        >>> result = thread.get()

        Args:
            pki_ezsigndocument_id (int):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            EzsigndocumentGetTemporaryProofV1Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['pki_ezsigndocument_id'] = \
            pki_ezsigndocument_id
        return self.ezsigndocument_get_temporary_proof_v1_endpoint.call_with_http_info(**kwargs)

    def ezsigndocument_get_words_positions_v1(
        self,
        pki_ezsigndocument_id,
        ezsigndocument_get_words_positions_v1_request,
        **kwargs
    ):
        """Retrieve positions X,Y of given words from a Ezsigndocument  # noqa: E501

          # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsigndocument_get_words_positions_v1(pki_ezsigndocument_id, ezsigndocument_get_words_positions_v1_request, async_req=True)
        >>> result = thread.get()

        Args:
            pki_ezsigndocument_id (int):
            ezsigndocument_get_words_positions_v1_request (EzsigndocumentGetWordsPositionsV1Request):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            EzsigndocumentGetWordsPositionsV1Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['pki_ezsigndocument_id'] = \
            pki_ezsigndocument_id
        kwargs['ezsigndocument_get_words_positions_v1_request'] = \
            ezsigndocument_get_words_positions_v1_request
        return self.ezsigndocument_get_words_positions_v1_endpoint.call_with_http_info(**kwargs)

    def ezsigndocument_patch_object_v1(
        self,
        pki_ezsigndocument_id,
        ezsigndocument_patch_object_v1_request,
        **kwargs
    ):
        """Patch an existing Ezsigndocument  # noqa: E501

          # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.ezsigndocument_patch_object_v1(pki_ezsigndocument_id, ezsigndocument_patch_object_v1_request, async_req=True)
        >>> result = thread.get()

        Args:
            pki_ezsigndocument_id (int):
            ezsigndocument_patch_object_v1_request (EzsigndocumentPatchObjectV1Request):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            EzsigndocumentPatchObjectV1Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['pki_ezsigndocument_id'] = \
            pki_ezsigndocument_id
        kwargs['ezsigndocument_patch_object_v1_request'] = \
            ezsigndocument_patch_object_v1_request
        return self.ezsigndocument_patch_object_v1_endpoint.call_with_http_info(**kwargs)

