# coding: utf-8

"""
    eZmax API Definition (Full)

    This API expose all the functionnalities for the eZmax and eZsign applications.

    The version of the OpenAPI document: 1.2.1
    Contact: support-api@ezmax.ca
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field
from typing import Any, Dict
from typing_extensions import Annotated
from eZmaxApi.models.ezsigntemplatedocument_create_object_v1_request import EzsigntemplatedocumentCreateObjectV1Request
from eZmaxApi.models.ezsigntemplatedocument_create_object_v1_response import EzsigntemplatedocumentCreateObjectV1Response
from eZmaxApi.models.ezsigntemplatedocument_edit_ezsigntemplateformfieldgroups_v1_request import EzsigntemplatedocumentEditEzsigntemplateformfieldgroupsV1Request
from eZmaxApi.models.ezsigntemplatedocument_edit_ezsigntemplateformfieldgroups_v1_response import EzsigntemplatedocumentEditEzsigntemplateformfieldgroupsV1Response
from eZmaxApi.models.ezsigntemplatedocument_edit_ezsigntemplatesignatures_v1_request import EzsigntemplatedocumentEditEzsigntemplatesignaturesV1Request
from eZmaxApi.models.ezsigntemplatedocument_edit_ezsigntemplatesignatures_v1_response import EzsigntemplatedocumentEditEzsigntemplatesignaturesV1Response
from eZmaxApi.models.ezsigntemplatedocument_edit_object_v1_request import EzsigntemplatedocumentEditObjectV1Request
from eZmaxApi.models.ezsigntemplatedocument_edit_object_v1_response import EzsigntemplatedocumentEditObjectV1Response
from eZmaxApi.models.ezsigntemplatedocument_flatten_v1_response import EzsigntemplatedocumentFlattenV1Response
from eZmaxApi.models.ezsigntemplatedocument_get_ezsigntemplatedocumentpages_v1_response import EzsigntemplatedocumentGetEzsigntemplatedocumentpagesV1Response
from eZmaxApi.models.ezsigntemplatedocument_get_ezsigntemplateformfieldgroups_v1_response import EzsigntemplatedocumentGetEzsigntemplateformfieldgroupsV1Response
from eZmaxApi.models.ezsigntemplatedocument_get_ezsigntemplatesignatures_v1_response import EzsigntemplatedocumentGetEzsigntemplatesignaturesV1Response
from eZmaxApi.models.ezsigntemplatedocument_get_object_v2_response import EzsigntemplatedocumentGetObjectV2Response
from eZmaxApi.models.ezsigntemplatedocument_get_words_positions_v1_request import EzsigntemplatedocumentGetWordsPositionsV1Request
from eZmaxApi.models.ezsigntemplatedocument_get_words_positions_v1_response import EzsigntemplatedocumentGetWordsPositionsV1Response
from eZmaxApi.models.ezsigntemplatedocument_patch_object_v1_request import EzsigntemplatedocumentPatchObjectV1Request
from eZmaxApi.models.ezsigntemplatedocument_patch_object_v1_response import EzsigntemplatedocumentPatchObjectV1Response

from eZmaxApi.api_client import ApiClient, RequestSerialized
from eZmaxApi.api_response import ApiResponse
from eZmaxApi.rest import RESTResponseType


class ObjectEzsigntemplatedocumentApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def ezsigntemplatedocument_create_object_v1(
        self,
        ezsigntemplatedocument_create_object_v1_request: EzsigntemplatedocumentCreateObjectV1Request,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> EzsigntemplatedocumentCreateObjectV1Response:
        """Create a new Ezsigntemplatedocument

        The endpoint allows to create one or many elements at once.

        :param ezsigntemplatedocument_create_object_v1_request: (required)
        :type ezsigntemplatedocument_create_object_v1_request: EzsigntemplatedocumentCreateObjectV1Request
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ezsigntemplatedocument_create_object_v1_serialize(
            ezsigntemplatedocument_create_object_v1_request=ezsigntemplatedocument_create_object_v1_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '201': "EzsigntemplatedocumentCreateObjectV1Response",
            '413': "CommonResponseError",
            '422': "CommonResponseErrorSTemporaryFileUrl",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def ezsigntemplatedocument_create_object_v1_with_http_info(
        self,
        ezsigntemplatedocument_create_object_v1_request: EzsigntemplatedocumentCreateObjectV1Request,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[EzsigntemplatedocumentCreateObjectV1Response]:
        """Create a new Ezsigntemplatedocument

        The endpoint allows to create one or many elements at once.

        :param ezsigntemplatedocument_create_object_v1_request: (required)
        :type ezsigntemplatedocument_create_object_v1_request: EzsigntemplatedocumentCreateObjectV1Request
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ezsigntemplatedocument_create_object_v1_serialize(
            ezsigntemplatedocument_create_object_v1_request=ezsigntemplatedocument_create_object_v1_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '201': "EzsigntemplatedocumentCreateObjectV1Response",
            '413': "CommonResponseError",
            '422': "CommonResponseErrorSTemporaryFileUrl",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def ezsigntemplatedocument_create_object_v1_without_preload_content(
        self,
        ezsigntemplatedocument_create_object_v1_request: EzsigntemplatedocumentCreateObjectV1Request,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Create a new Ezsigntemplatedocument

        The endpoint allows to create one or many elements at once.

        :param ezsigntemplatedocument_create_object_v1_request: (required)
        :type ezsigntemplatedocument_create_object_v1_request: EzsigntemplatedocumentCreateObjectV1Request
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ezsigntemplatedocument_create_object_v1_serialize(
            ezsigntemplatedocument_create_object_v1_request=ezsigntemplatedocument_create_object_v1_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '201': "EzsigntemplatedocumentCreateObjectV1Response",
            '413': "CommonResponseError",
            '422': "CommonResponseErrorSTemporaryFileUrl",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _ezsigntemplatedocument_create_object_v1_serialize(
        self,
        ezsigntemplatedocument_create_object_v1_request,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if ezsigntemplatedocument_create_object_v1_request is not None:
            _body_params = ezsigntemplatedocument_create_object_v1_request


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'Authorization'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/1/object/ezsigntemplatedocument',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def ezsigntemplatedocument_edit_ezsigntemplateformfieldgroups_v1(
        self,
        pki_ezsigntemplatedocument_id: Annotated[int, Field(strict=True, ge=0)],
        ezsigntemplatedocument_edit_ezsigntemplateformfieldgroups_v1_request: EzsigntemplatedocumentEditEzsigntemplateformfieldgroupsV1Request,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> EzsigntemplatedocumentEditEzsigntemplateformfieldgroupsV1Response:
        """Edit multiple Ezsigntemplateformfieldgroups

        Using this endpoint, you can edit multiple Ezsigntemplateformfieldgroups at the same time.

        :param pki_ezsigntemplatedocument_id: (required)
        :type pki_ezsigntemplatedocument_id: int
        :param ezsigntemplatedocument_edit_ezsigntemplateformfieldgroups_v1_request: (required)
        :type ezsigntemplatedocument_edit_ezsigntemplateformfieldgroups_v1_request: EzsigntemplatedocumentEditEzsigntemplateformfieldgroupsV1Request
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ezsigntemplatedocument_edit_ezsigntemplateformfieldgroups_v1_serialize(
            pki_ezsigntemplatedocument_id=pki_ezsigntemplatedocument_id,
            ezsigntemplatedocument_edit_ezsigntemplateformfieldgroups_v1_request=ezsigntemplatedocument_edit_ezsigntemplateformfieldgroups_v1_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EzsigntemplatedocumentEditEzsigntemplateformfieldgroupsV1Response",
            '404': "CommonResponseError",
            '422': "CommonResponseError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def ezsigntemplatedocument_edit_ezsigntemplateformfieldgroups_v1_with_http_info(
        self,
        pki_ezsigntemplatedocument_id: Annotated[int, Field(strict=True, ge=0)],
        ezsigntemplatedocument_edit_ezsigntemplateformfieldgroups_v1_request: EzsigntemplatedocumentEditEzsigntemplateformfieldgroupsV1Request,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[EzsigntemplatedocumentEditEzsigntemplateformfieldgroupsV1Response]:
        """Edit multiple Ezsigntemplateformfieldgroups

        Using this endpoint, you can edit multiple Ezsigntemplateformfieldgroups at the same time.

        :param pki_ezsigntemplatedocument_id: (required)
        :type pki_ezsigntemplatedocument_id: int
        :param ezsigntemplatedocument_edit_ezsigntemplateformfieldgroups_v1_request: (required)
        :type ezsigntemplatedocument_edit_ezsigntemplateformfieldgroups_v1_request: EzsigntemplatedocumentEditEzsigntemplateformfieldgroupsV1Request
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ezsigntemplatedocument_edit_ezsigntemplateformfieldgroups_v1_serialize(
            pki_ezsigntemplatedocument_id=pki_ezsigntemplatedocument_id,
            ezsigntemplatedocument_edit_ezsigntemplateformfieldgroups_v1_request=ezsigntemplatedocument_edit_ezsigntemplateformfieldgroups_v1_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EzsigntemplatedocumentEditEzsigntemplateformfieldgroupsV1Response",
            '404': "CommonResponseError",
            '422': "CommonResponseError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def ezsigntemplatedocument_edit_ezsigntemplateformfieldgroups_v1_without_preload_content(
        self,
        pki_ezsigntemplatedocument_id: Annotated[int, Field(strict=True, ge=0)],
        ezsigntemplatedocument_edit_ezsigntemplateformfieldgroups_v1_request: EzsigntemplatedocumentEditEzsigntemplateformfieldgroupsV1Request,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Edit multiple Ezsigntemplateformfieldgroups

        Using this endpoint, you can edit multiple Ezsigntemplateformfieldgroups at the same time.

        :param pki_ezsigntemplatedocument_id: (required)
        :type pki_ezsigntemplatedocument_id: int
        :param ezsigntemplatedocument_edit_ezsigntemplateformfieldgroups_v1_request: (required)
        :type ezsigntemplatedocument_edit_ezsigntemplateformfieldgroups_v1_request: EzsigntemplatedocumentEditEzsigntemplateformfieldgroupsV1Request
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ezsigntemplatedocument_edit_ezsigntemplateformfieldgroups_v1_serialize(
            pki_ezsigntemplatedocument_id=pki_ezsigntemplatedocument_id,
            ezsigntemplatedocument_edit_ezsigntemplateformfieldgroups_v1_request=ezsigntemplatedocument_edit_ezsigntemplateformfieldgroups_v1_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EzsigntemplatedocumentEditEzsigntemplateformfieldgroupsV1Response",
            '404': "CommonResponseError",
            '422': "CommonResponseError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _ezsigntemplatedocument_edit_ezsigntemplateformfieldgroups_v1_serialize(
        self,
        pki_ezsigntemplatedocument_id,
        ezsigntemplatedocument_edit_ezsigntemplateformfieldgroups_v1_request,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if pki_ezsigntemplatedocument_id is not None:
            _path_params['pkiEzsigntemplatedocumentID'] = pki_ezsigntemplatedocument_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if ezsigntemplatedocument_edit_ezsigntemplateformfieldgroups_v1_request is not None:
            _body_params = ezsigntemplatedocument_edit_ezsigntemplateformfieldgroups_v1_request


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'Authorization'
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/1/object/ezsigntemplatedocument/{pkiEzsigntemplatedocumentID}/editEzsigntemplateformfieldgroups',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def ezsigntemplatedocument_edit_ezsigntemplatesignatures_v1(
        self,
        pki_ezsigntemplatedocument_id: Annotated[int, Field(strict=True, ge=0)],
        ezsigntemplatedocument_edit_ezsigntemplatesignatures_v1_request: EzsigntemplatedocumentEditEzsigntemplatesignaturesV1Request,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> EzsigntemplatedocumentEditEzsigntemplatesignaturesV1Response:
        """Edit multiple Ezsigntemplatesignatures

        Using this endpoint, you can edit multiple Ezsigntemplatesignatures at the same time.

        :param pki_ezsigntemplatedocument_id: (required)
        :type pki_ezsigntemplatedocument_id: int
        :param ezsigntemplatedocument_edit_ezsigntemplatesignatures_v1_request: (required)
        :type ezsigntemplatedocument_edit_ezsigntemplatesignatures_v1_request: EzsigntemplatedocumentEditEzsigntemplatesignaturesV1Request
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ezsigntemplatedocument_edit_ezsigntemplatesignatures_v1_serialize(
            pki_ezsigntemplatedocument_id=pki_ezsigntemplatedocument_id,
            ezsigntemplatedocument_edit_ezsigntemplatesignatures_v1_request=ezsigntemplatedocument_edit_ezsigntemplatesignatures_v1_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EzsigntemplatedocumentEditEzsigntemplatesignaturesV1Response",
            '404': "CommonResponseError",
            '422': "CommonResponseError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def ezsigntemplatedocument_edit_ezsigntemplatesignatures_v1_with_http_info(
        self,
        pki_ezsigntemplatedocument_id: Annotated[int, Field(strict=True, ge=0)],
        ezsigntemplatedocument_edit_ezsigntemplatesignatures_v1_request: EzsigntemplatedocumentEditEzsigntemplatesignaturesV1Request,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[EzsigntemplatedocumentEditEzsigntemplatesignaturesV1Response]:
        """Edit multiple Ezsigntemplatesignatures

        Using this endpoint, you can edit multiple Ezsigntemplatesignatures at the same time.

        :param pki_ezsigntemplatedocument_id: (required)
        :type pki_ezsigntemplatedocument_id: int
        :param ezsigntemplatedocument_edit_ezsigntemplatesignatures_v1_request: (required)
        :type ezsigntemplatedocument_edit_ezsigntemplatesignatures_v1_request: EzsigntemplatedocumentEditEzsigntemplatesignaturesV1Request
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ezsigntemplatedocument_edit_ezsigntemplatesignatures_v1_serialize(
            pki_ezsigntemplatedocument_id=pki_ezsigntemplatedocument_id,
            ezsigntemplatedocument_edit_ezsigntemplatesignatures_v1_request=ezsigntemplatedocument_edit_ezsigntemplatesignatures_v1_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EzsigntemplatedocumentEditEzsigntemplatesignaturesV1Response",
            '404': "CommonResponseError",
            '422': "CommonResponseError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def ezsigntemplatedocument_edit_ezsigntemplatesignatures_v1_without_preload_content(
        self,
        pki_ezsigntemplatedocument_id: Annotated[int, Field(strict=True, ge=0)],
        ezsigntemplatedocument_edit_ezsigntemplatesignatures_v1_request: EzsigntemplatedocumentEditEzsigntemplatesignaturesV1Request,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Edit multiple Ezsigntemplatesignatures

        Using this endpoint, you can edit multiple Ezsigntemplatesignatures at the same time.

        :param pki_ezsigntemplatedocument_id: (required)
        :type pki_ezsigntemplatedocument_id: int
        :param ezsigntemplatedocument_edit_ezsigntemplatesignatures_v1_request: (required)
        :type ezsigntemplatedocument_edit_ezsigntemplatesignatures_v1_request: EzsigntemplatedocumentEditEzsigntemplatesignaturesV1Request
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ezsigntemplatedocument_edit_ezsigntemplatesignatures_v1_serialize(
            pki_ezsigntemplatedocument_id=pki_ezsigntemplatedocument_id,
            ezsigntemplatedocument_edit_ezsigntemplatesignatures_v1_request=ezsigntemplatedocument_edit_ezsigntemplatesignatures_v1_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EzsigntemplatedocumentEditEzsigntemplatesignaturesV1Response",
            '404': "CommonResponseError",
            '422': "CommonResponseError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _ezsigntemplatedocument_edit_ezsigntemplatesignatures_v1_serialize(
        self,
        pki_ezsigntemplatedocument_id,
        ezsigntemplatedocument_edit_ezsigntemplatesignatures_v1_request,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if pki_ezsigntemplatedocument_id is not None:
            _path_params['pkiEzsigntemplatedocumentID'] = pki_ezsigntemplatedocument_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if ezsigntemplatedocument_edit_ezsigntemplatesignatures_v1_request is not None:
            _body_params = ezsigntemplatedocument_edit_ezsigntemplatesignatures_v1_request


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'Authorization'
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/1/object/ezsigntemplatedocument/{pkiEzsigntemplatedocumentID}/editEzsigntemplatesignatures',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def ezsigntemplatedocument_edit_object_v1(
        self,
        pki_ezsigntemplatedocument_id: Annotated[int, Field(strict=True, ge=0)],
        ezsigntemplatedocument_edit_object_v1_request: EzsigntemplatedocumentEditObjectV1Request,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> EzsigntemplatedocumentEditObjectV1Response:
        """Edit an existing Ezsigntemplatedocument

        

        :param pki_ezsigntemplatedocument_id: (required)
        :type pki_ezsigntemplatedocument_id: int
        :param ezsigntemplatedocument_edit_object_v1_request: (required)
        :type ezsigntemplatedocument_edit_object_v1_request: EzsigntemplatedocumentEditObjectV1Request
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ezsigntemplatedocument_edit_object_v1_serialize(
            pki_ezsigntemplatedocument_id=pki_ezsigntemplatedocument_id,
            ezsigntemplatedocument_edit_object_v1_request=ezsigntemplatedocument_edit_object_v1_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EzsigntemplatedocumentEditObjectV1Response",
            '404': "CommonResponseError",
            '422': "CommonResponseErrorSTemporaryFileUrl",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def ezsigntemplatedocument_edit_object_v1_with_http_info(
        self,
        pki_ezsigntemplatedocument_id: Annotated[int, Field(strict=True, ge=0)],
        ezsigntemplatedocument_edit_object_v1_request: EzsigntemplatedocumentEditObjectV1Request,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[EzsigntemplatedocumentEditObjectV1Response]:
        """Edit an existing Ezsigntemplatedocument

        

        :param pki_ezsigntemplatedocument_id: (required)
        :type pki_ezsigntemplatedocument_id: int
        :param ezsigntemplatedocument_edit_object_v1_request: (required)
        :type ezsigntemplatedocument_edit_object_v1_request: EzsigntemplatedocumentEditObjectV1Request
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ezsigntemplatedocument_edit_object_v1_serialize(
            pki_ezsigntemplatedocument_id=pki_ezsigntemplatedocument_id,
            ezsigntemplatedocument_edit_object_v1_request=ezsigntemplatedocument_edit_object_v1_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EzsigntemplatedocumentEditObjectV1Response",
            '404': "CommonResponseError",
            '422': "CommonResponseErrorSTemporaryFileUrl",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def ezsigntemplatedocument_edit_object_v1_without_preload_content(
        self,
        pki_ezsigntemplatedocument_id: Annotated[int, Field(strict=True, ge=0)],
        ezsigntemplatedocument_edit_object_v1_request: EzsigntemplatedocumentEditObjectV1Request,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Edit an existing Ezsigntemplatedocument

        

        :param pki_ezsigntemplatedocument_id: (required)
        :type pki_ezsigntemplatedocument_id: int
        :param ezsigntemplatedocument_edit_object_v1_request: (required)
        :type ezsigntemplatedocument_edit_object_v1_request: EzsigntemplatedocumentEditObjectV1Request
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ezsigntemplatedocument_edit_object_v1_serialize(
            pki_ezsigntemplatedocument_id=pki_ezsigntemplatedocument_id,
            ezsigntemplatedocument_edit_object_v1_request=ezsigntemplatedocument_edit_object_v1_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EzsigntemplatedocumentEditObjectV1Response",
            '404': "CommonResponseError",
            '422': "CommonResponseErrorSTemporaryFileUrl",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _ezsigntemplatedocument_edit_object_v1_serialize(
        self,
        pki_ezsigntemplatedocument_id,
        ezsigntemplatedocument_edit_object_v1_request,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if pki_ezsigntemplatedocument_id is not None:
            _path_params['pkiEzsigntemplatedocumentID'] = pki_ezsigntemplatedocument_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if ezsigntemplatedocument_edit_object_v1_request is not None:
            _body_params = ezsigntemplatedocument_edit_object_v1_request


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'Authorization'
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/1/object/ezsigntemplatedocument/{pkiEzsigntemplatedocumentID}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def ezsigntemplatedocument_flatten_v1(
        self,
        pki_ezsigntemplatedocument_id: Annotated[int, Field(strict=True, ge=0)],
        body: Dict[str, Any],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> EzsigntemplatedocumentFlattenV1Response:
        """Flatten

        Flatten an Ezsigntemplatedocument signatures, forms and annotations. This process finalizes the PDF so that the forms and annotations become part of the document content and cannot be edited.

        :param pki_ezsigntemplatedocument_id: (required)
        :type pki_ezsigntemplatedocument_id: int
        :param body: (required)
        :type body: object
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ezsigntemplatedocument_flatten_v1_serialize(
            pki_ezsigntemplatedocument_id=pki_ezsigntemplatedocument_id,
            body=body,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EzsigntemplatedocumentFlattenV1Response",
            '404': "CommonResponseError",
            '422': "CommonResponseError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def ezsigntemplatedocument_flatten_v1_with_http_info(
        self,
        pki_ezsigntemplatedocument_id: Annotated[int, Field(strict=True, ge=0)],
        body: Dict[str, Any],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[EzsigntemplatedocumentFlattenV1Response]:
        """Flatten

        Flatten an Ezsigntemplatedocument signatures, forms and annotations. This process finalizes the PDF so that the forms and annotations become part of the document content and cannot be edited.

        :param pki_ezsigntemplatedocument_id: (required)
        :type pki_ezsigntemplatedocument_id: int
        :param body: (required)
        :type body: object
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ezsigntemplatedocument_flatten_v1_serialize(
            pki_ezsigntemplatedocument_id=pki_ezsigntemplatedocument_id,
            body=body,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EzsigntemplatedocumentFlattenV1Response",
            '404': "CommonResponseError",
            '422': "CommonResponseError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def ezsigntemplatedocument_flatten_v1_without_preload_content(
        self,
        pki_ezsigntemplatedocument_id: Annotated[int, Field(strict=True, ge=0)],
        body: Dict[str, Any],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Flatten

        Flatten an Ezsigntemplatedocument signatures, forms and annotations. This process finalizes the PDF so that the forms and annotations become part of the document content and cannot be edited.

        :param pki_ezsigntemplatedocument_id: (required)
        :type pki_ezsigntemplatedocument_id: int
        :param body: (required)
        :type body: object
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ezsigntemplatedocument_flatten_v1_serialize(
            pki_ezsigntemplatedocument_id=pki_ezsigntemplatedocument_id,
            body=body,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EzsigntemplatedocumentFlattenV1Response",
            '404': "CommonResponseError",
            '422': "CommonResponseError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _ezsigntemplatedocument_flatten_v1_serialize(
        self,
        pki_ezsigntemplatedocument_id,
        body,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if pki_ezsigntemplatedocument_id is not None:
            _path_params['pkiEzsigntemplatedocumentID'] = pki_ezsigntemplatedocument_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if body is not None:
            _body_params = body


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'Authorization'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/1/object/ezsigntemplatedocument/{pkiEzsigntemplatedocumentID}/flatten',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def ezsigntemplatedocument_get_ezsigntemplatedocumentpages_v1(
        self,
        pki_ezsigntemplatedocument_id: Annotated[int, Field(strict=True, ge=0)],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> EzsigntemplatedocumentGetEzsigntemplatedocumentpagesV1Response:
        """Retrieve an existing Ezsigntemplatedocument's Ezsigntemplatedocumentpages

        

        :param pki_ezsigntemplatedocument_id: (required)
        :type pki_ezsigntemplatedocument_id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ezsigntemplatedocument_get_ezsigntemplatedocumentpages_v1_serialize(
            pki_ezsigntemplatedocument_id=pki_ezsigntemplatedocument_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EzsigntemplatedocumentGetEzsigntemplatedocumentpagesV1Response",
            '404': "CommonResponseError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def ezsigntemplatedocument_get_ezsigntemplatedocumentpages_v1_with_http_info(
        self,
        pki_ezsigntemplatedocument_id: Annotated[int, Field(strict=True, ge=0)],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[EzsigntemplatedocumentGetEzsigntemplatedocumentpagesV1Response]:
        """Retrieve an existing Ezsigntemplatedocument's Ezsigntemplatedocumentpages

        

        :param pki_ezsigntemplatedocument_id: (required)
        :type pki_ezsigntemplatedocument_id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ezsigntemplatedocument_get_ezsigntemplatedocumentpages_v1_serialize(
            pki_ezsigntemplatedocument_id=pki_ezsigntemplatedocument_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EzsigntemplatedocumentGetEzsigntemplatedocumentpagesV1Response",
            '404': "CommonResponseError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def ezsigntemplatedocument_get_ezsigntemplatedocumentpages_v1_without_preload_content(
        self,
        pki_ezsigntemplatedocument_id: Annotated[int, Field(strict=True, ge=0)],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Retrieve an existing Ezsigntemplatedocument's Ezsigntemplatedocumentpages

        

        :param pki_ezsigntemplatedocument_id: (required)
        :type pki_ezsigntemplatedocument_id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ezsigntemplatedocument_get_ezsigntemplatedocumentpages_v1_serialize(
            pki_ezsigntemplatedocument_id=pki_ezsigntemplatedocument_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EzsigntemplatedocumentGetEzsigntemplatedocumentpagesV1Response",
            '404': "CommonResponseError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _ezsigntemplatedocument_get_ezsigntemplatedocumentpages_v1_serialize(
        self,
        pki_ezsigntemplatedocument_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if pki_ezsigntemplatedocument_id is not None:
            _path_params['pkiEzsigntemplatedocumentID'] = pki_ezsigntemplatedocument_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'Authorization'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/1/object/ezsigntemplatedocument/{pkiEzsigntemplatedocumentID}/getEzsigntemplatedocumentpages',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def ezsigntemplatedocument_get_ezsigntemplateformfieldgroups_v1(
        self,
        pki_ezsigntemplatedocument_id: Annotated[int, Field(strict=True, ge=0)],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> EzsigntemplatedocumentGetEzsigntemplateformfieldgroupsV1Response:
        """Retrieve an existing Ezsigntemplatedocument's Ezsigntemplateformfieldgroups

        

        :param pki_ezsigntemplatedocument_id: (required)
        :type pki_ezsigntemplatedocument_id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ezsigntemplatedocument_get_ezsigntemplateformfieldgroups_v1_serialize(
            pki_ezsigntemplatedocument_id=pki_ezsigntemplatedocument_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EzsigntemplatedocumentGetEzsigntemplateformfieldgroupsV1Response",
            '404': "CommonResponseError",
            '422': "CommonResponseError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def ezsigntemplatedocument_get_ezsigntemplateformfieldgroups_v1_with_http_info(
        self,
        pki_ezsigntemplatedocument_id: Annotated[int, Field(strict=True, ge=0)],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[EzsigntemplatedocumentGetEzsigntemplateformfieldgroupsV1Response]:
        """Retrieve an existing Ezsigntemplatedocument's Ezsigntemplateformfieldgroups

        

        :param pki_ezsigntemplatedocument_id: (required)
        :type pki_ezsigntemplatedocument_id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ezsigntemplatedocument_get_ezsigntemplateformfieldgroups_v1_serialize(
            pki_ezsigntemplatedocument_id=pki_ezsigntemplatedocument_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EzsigntemplatedocumentGetEzsigntemplateformfieldgroupsV1Response",
            '404': "CommonResponseError",
            '422': "CommonResponseError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def ezsigntemplatedocument_get_ezsigntemplateformfieldgroups_v1_without_preload_content(
        self,
        pki_ezsigntemplatedocument_id: Annotated[int, Field(strict=True, ge=0)],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Retrieve an existing Ezsigntemplatedocument's Ezsigntemplateformfieldgroups

        

        :param pki_ezsigntemplatedocument_id: (required)
        :type pki_ezsigntemplatedocument_id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ezsigntemplatedocument_get_ezsigntemplateformfieldgroups_v1_serialize(
            pki_ezsigntemplatedocument_id=pki_ezsigntemplatedocument_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EzsigntemplatedocumentGetEzsigntemplateformfieldgroupsV1Response",
            '404': "CommonResponseError",
            '422': "CommonResponseError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _ezsigntemplatedocument_get_ezsigntemplateformfieldgroups_v1_serialize(
        self,
        pki_ezsigntemplatedocument_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if pki_ezsigntemplatedocument_id is not None:
            _path_params['pkiEzsigntemplatedocumentID'] = pki_ezsigntemplatedocument_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'Authorization'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/1/object/ezsigntemplatedocument/{pkiEzsigntemplatedocumentID}/getEzsigntemplateformfieldgroups',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def ezsigntemplatedocument_get_ezsigntemplatesignatures_v1(
        self,
        pki_ezsigntemplatedocument_id: Annotated[int, Field(strict=True, ge=0)],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> EzsigntemplatedocumentGetEzsigntemplatesignaturesV1Response:
        """Retrieve an existing Ezsigntemplatedocument's Ezsigntemplatesignatures

        

        :param pki_ezsigntemplatedocument_id: (required)
        :type pki_ezsigntemplatedocument_id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ezsigntemplatedocument_get_ezsigntemplatesignatures_v1_serialize(
            pki_ezsigntemplatedocument_id=pki_ezsigntemplatedocument_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EzsigntemplatedocumentGetEzsigntemplatesignaturesV1Response",
            '404': "CommonResponseError",
            '422': "CommonResponseError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def ezsigntemplatedocument_get_ezsigntemplatesignatures_v1_with_http_info(
        self,
        pki_ezsigntemplatedocument_id: Annotated[int, Field(strict=True, ge=0)],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[EzsigntemplatedocumentGetEzsigntemplatesignaturesV1Response]:
        """Retrieve an existing Ezsigntemplatedocument's Ezsigntemplatesignatures

        

        :param pki_ezsigntemplatedocument_id: (required)
        :type pki_ezsigntemplatedocument_id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ezsigntemplatedocument_get_ezsigntemplatesignatures_v1_serialize(
            pki_ezsigntemplatedocument_id=pki_ezsigntemplatedocument_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EzsigntemplatedocumentGetEzsigntemplatesignaturesV1Response",
            '404': "CommonResponseError",
            '422': "CommonResponseError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def ezsigntemplatedocument_get_ezsigntemplatesignatures_v1_without_preload_content(
        self,
        pki_ezsigntemplatedocument_id: Annotated[int, Field(strict=True, ge=0)],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Retrieve an existing Ezsigntemplatedocument's Ezsigntemplatesignatures

        

        :param pki_ezsigntemplatedocument_id: (required)
        :type pki_ezsigntemplatedocument_id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ezsigntemplatedocument_get_ezsigntemplatesignatures_v1_serialize(
            pki_ezsigntemplatedocument_id=pki_ezsigntemplatedocument_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EzsigntemplatedocumentGetEzsigntemplatesignaturesV1Response",
            '404': "CommonResponseError",
            '422': "CommonResponseError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _ezsigntemplatedocument_get_ezsigntemplatesignatures_v1_serialize(
        self,
        pki_ezsigntemplatedocument_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if pki_ezsigntemplatedocument_id is not None:
            _path_params['pkiEzsigntemplatedocumentID'] = pki_ezsigntemplatedocument_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'Authorization'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/1/object/ezsigntemplatedocument/{pkiEzsigntemplatedocumentID}/getEzsigntemplatesignatures',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def ezsigntemplatedocument_get_object_v2(
        self,
        pki_ezsigntemplatedocument_id: Annotated[int, Field(strict=True, ge=0)],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> EzsigntemplatedocumentGetObjectV2Response:
        """Retrieve an existing Ezsigntemplatedocument

        

        :param pki_ezsigntemplatedocument_id: (required)
        :type pki_ezsigntemplatedocument_id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ezsigntemplatedocument_get_object_v2_serialize(
            pki_ezsigntemplatedocument_id=pki_ezsigntemplatedocument_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EzsigntemplatedocumentGetObjectV2Response",
            '404': "CommonResponseError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def ezsigntemplatedocument_get_object_v2_with_http_info(
        self,
        pki_ezsigntemplatedocument_id: Annotated[int, Field(strict=True, ge=0)],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[EzsigntemplatedocumentGetObjectV2Response]:
        """Retrieve an existing Ezsigntemplatedocument

        

        :param pki_ezsigntemplatedocument_id: (required)
        :type pki_ezsigntemplatedocument_id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ezsigntemplatedocument_get_object_v2_serialize(
            pki_ezsigntemplatedocument_id=pki_ezsigntemplatedocument_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EzsigntemplatedocumentGetObjectV2Response",
            '404': "CommonResponseError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def ezsigntemplatedocument_get_object_v2_without_preload_content(
        self,
        pki_ezsigntemplatedocument_id: Annotated[int, Field(strict=True, ge=0)],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Retrieve an existing Ezsigntemplatedocument

        

        :param pki_ezsigntemplatedocument_id: (required)
        :type pki_ezsigntemplatedocument_id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ezsigntemplatedocument_get_object_v2_serialize(
            pki_ezsigntemplatedocument_id=pki_ezsigntemplatedocument_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EzsigntemplatedocumentGetObjectV2Response",
            '404': "CommonResponseError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _ezsigntemplatedocument_get_object_v2_serialize(
        self,
        pki_ezsigntemplatedocument_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if pki_ezsigntemplatedocument_id is not None:
            _path_params['pkiEzsigntemplatedocumentID'] = pki_ezsigntemplatedocument_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'Authorization'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/2/object/ezsigntemplatedocument/{pkiEzsigntemplatedocumentID}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def ezsigntemplatedocument_get_words_positions_v1(
        self,
        pki_ezsigntemplatedocument_id: Annotated[int, Field(strict=True, ge=0)],
        ezsigntemplatedocument_get_words_positions_v1_request: EzsigntemplatedocumentGetWordsPositionsV1Request,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> EzsigntemplatedocumentGetWordsPositionsV1Response:
        """Retrieve positions X,Y of given words from a Ezsigntemplatedocument

        

        :param pki_ezsigntemplatedocument_id: (required)
        :type pki_ezsigntemplatedocument_id: int
        :param ezsigntemplatedocument_get_words_positions_v1_request: (required)
        :type ezsigntemplatedocument_get_words_positions_v1_request: EzsigntemplatedocumentGetWordsPositionsV1Request
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ezsigntemplatedocument_get_words_positions_v1_serialize(
            pki_ezsigntemplatedocument_id=pki_ezsigntemplatedocument_id,
            ezsigntemplatedocument_get_words_positions_v1_request=ezsigntemplatedocument_get_words_positions_v1_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EzsigntemplatedocumentGetWordsPositionsV1Response",
            '404': "CommonResponseError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def ezsigntemplatedocument_get_words_positions_v1_with_http_info(
        self,
        pki_ezsigntemplatedocument_id: Annotated[int, Field(strict=True, ge=0)],
        ezsigntemplatedocument_get_words_positions_v1_request: EzsigntemplatedocumentGetWordsPositionsV1Request,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[EzsigntemplatedocumentGetWordsPositionsV1Response]:
        """Retrieve positions X,Y of given words from a Ezsigntemplatedocument

        

        :param pki_ezsigntemplatedocument_id: (required)
        :type pki_ezsigntemplatedocument_id: int
        :param ezsigntemplatedocument_get_words_positions_v1_request: (required)
        :type ezsigntemplatedocument_get_words_positions_v1_request: EzsigntemplatedocumentGetWordsPositionsV1Request
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ezsigntemplatedocument_get_words_positions_v1_serialize(
            pki_ezsigntemplatedocument_id=pki_ezsigntemplatedocument_id,
            ezsigntemplatedocument_get_words_positions_v1_request=ezsigntemplatedocument_get_words_positions_v1_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EzsigntemplatedocumentGetWordsPositionsV1Response",
            '404': "CommonResponseError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def ezsigntemplatedocument_get_words_positions_v1_without_preload_content(
        self,
        pki_ezsigntemplatedocument_id: Annotated[int, Field(strict=True, ge=0)],
        ezsigntemplatedocument_get_words_positions_v1_request: EzsigntemplatedocumentGetWordsPositionsV1Request,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Retrieve positions X,Y of given words from a Ezsigntemplatedocument

        

        :param pki_ezsigntemplatedocument_id: (required)
        :type pki_ezsigntemplatedocument_id: int
        :param ezsigntemplatedocument_get_words_positions_v1_request: (required)
        :type ezsigntemplatedocument_get_words_positions_v1_request: EzsigntemplatedocumentGetWordsPositionsV1Request
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ezsigntemplatedocument_get_words_positions_v1_serialize(
            pki_ezsigntemplatedocument_id=pki_ezsigntemplatedocument_id,
            ezsigntemplatedocument_get_words_positions_v1_request=ezsigntemplatedocument_get_words_positions_v1_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EzsigntemplatedocumentGetWordsPositionsV1Response",
            '404': "CommonResponseError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _ezsigntemplatedocument_get_words_positions_v1_serialize(
        self,
        pki_ezsigntemplatedocument_id,
        ezsigntemplatedocument_get_words_positions_v1_request,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if pki_ezsigntemplatedocument_id is not None:
            _path_params['pkiEzsigntemplatedocumentID'] = pki_ezsigntemplatedocument_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if ezsigntemplatedocument_get_words_positions_v1_request is not None:
            _body_params = ezsigntemplatedocument_get_words_positions_v1_request


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'Authorization'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/1/object/ezsigntemplatedocument/{pkiEzsigntemplatedocumentID}/getWordsPositions',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def ezsigntemplatedocument_patch_object_v1(
        self,
        pki_ezsigntemplatedocument_id: Annotated[int, Field(strict=True, ge=0)],
        ezsigntemplatedocument_patch_object_v1_request: EzsigntemplatedocumentPatchObjectV1Request,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> EzsigntemplatedocumentPatchObjectV1Response:
        """Patch an existing Ezsigntemplatedocument

        

        :param pki_ezsigntemplatedocument_id: (required)
        :type pki_ezsigntemplatedocument_id: int
        :param ezsigntemplatedocument_patch_object_v1_request: (required)
        :type ezsigntemplatedocument_patch_object_v1_request: EzsigntemplatedocumentPatchObjectV1Request
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ezsigntemplatedocument_patch_object_v1_serialize(
            pki_ezsigntemplatedocument_id=pki_ezsigntemplatedocument_id,
            ezsigntemplatedocument_patch_object_v1_request=ezsigntemplatedocument_patch_object_v1_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EzsigntemplatedocumentPatchObjectV1Response",
            '404': "CommonResponseError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def ezsigntemplatedocument_patch_object_v1_with_http_info(
        self,
        pki_ezsigntemplatedocument_id: Annotated[int, Field(strict=True, ge=0)],
        ezsigntemplatedocument_patch_object_v1_request: EzsigntemplatedocumentPatchObjectV1Request,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[EzsigntemplatedocumentPatchObjectV1Response]:
        """Patch an existing Ezsigntemplatedocument

        

        :param pki_ezsigntemplatedocument_id: (required)
        :type pki_ezsigntemplatedocument_id: int
        :param ezsigntemplatedocument_patch_object_v1_request: (required)
        :type ezsigntemplatedocument_patch_object_v1_request: EzsigntemplatedocumentPatchObjectV1Request
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ezsigntemplatedocument_patch_object_v1_serialize(
            pki_ezsigntemplatedocument_id=pki_ezsigntemplatedocument_id,
            ezsigntemplatedocument_patch_object_v1_request=ezsigntemplatedocument_patch_object_v1_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EzsigntemplatedocumentPatchObjectV1Response",
            '404': "CommonResponseError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def ezsigntemplatedocument_patch_object_v1_without_preload_content(
        self,
        pki_ezsigntemplatedocument_id: Annotated[int, Field(strict=True, ge=0)],
        ezsigntemplatedocument_patch_object_v1_request: EzsigntemplatedocumentPatchObjectV1Request,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Patch an existing Ezsigntemplatedocument

        

        :param pki_ezsigntemplatedocument_id: (required)
        :type pki_ezsigntemplatedocument_id: int
        :param ezsigntemplatedocument_patch_object_v1_request: (required)
        :type ezsigntemplatedocument_patch_object_v1_request: EzsigntemplatedocumentPatchObjectV1Request
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ezsigntemplatedocument_patch_object_v1_serialize(
            pki_ezsigntemplatedocument_id=pki_ezsigntemplatedocument_id,
            ezsigntemplatedocument_patch_object_v1_request=ezsigntemplatedocument_patch_object_v1_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EzsigntemplatedocumentPatchObjectV1Response",
            '404': "CommonResponseError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _ezsigntemplatedocument_patch_object_v1_serialize(
        self,
        pki_ezsigntemplatedocument_id,
        ezsigntemplatedocument_patch_object_v1_request,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if pki_ezsigntemplatedocument_id is not None:
            _path_params['pkiEzsigntemplatedocumentID'] = pki_ezsigntemplatedocument_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if ezsigntemplatedocument_patch_object_v1_request is not None:
            _body_params = ezsigntemplatedocument_patch_object_v1_request


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'Authorization'
        ]

        return self.api_client.param_serialize(
            method='PATCH',
            resource_path='/1/object/ezsigntemplatedocument/{pkiEzsigntemplatedocumentID}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


